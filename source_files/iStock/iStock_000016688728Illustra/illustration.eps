%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (marina) ()%%Title: (11-161_a.eps)%%CreationDate: 5/24/11 8:28 AM%%BoundingBox: 20 155 546 691%%HiResBoundingBox: 20.604 155.1963 545.5781 690.791%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 283.5 424.8945 283.5 424.8945%AI3_TileBox: -22.5356 29.1973 589.4648 821.1978%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 566.9291 850.3937%AI5_RulerUnits: 4%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -626 836.3945 1 1829 1029 18 0 0 50 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 128 8%%BeginData: 19456 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FFFFFFA9FD77FFA9FD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFAFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD33FFAFFFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFFFA8FFFFFFA8FFFFFFAFFD6BFFAFFFFFFFA8FFFFFFA8FFFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FD81FFA8FFA8FFA8FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FD15FFA7A7A6CECFFD2DFFAFFFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FD04FFA9FD2AFFCF81A57AA57AA5A7%FD45FFA9FD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA9FFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FFAD7A807AA57A807A80%A6FFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FD05FFA8FFA8FFFFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FD2DFFCF80A5A6CFA7CFA7CE81A5A7FD2DFF7D%FD04527DA8FD14FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD%17FFA6A57AA7FD05FFA57AA5CFFD2AFF7D27522727275227527DFFFFFFA8%FFFFFFA8FFFFFFA8FFAFFFA8FFA8FD2DFFA57AA5A6FFA7ADFFFF81A581CF%FD29FFA827522752A8A8525228527DFD12FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFFFFFCFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD05FF%7B817AA6FFA77BFFCFA57A81A7FD11FFA9FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFA827522752A8FFFFA827522752A8FFAFFFA8FFA8FF%A8FFA8FFA8FFA8FFA8FD0FFFCFA6A581A6A6CFFD17FFA57AA5A7FF8180AE%FF81A581CFFD28FFFD04522EFFFFFFA8525252277DFD13FFA8FFFFFFA8FF%FFFFA8FFFFA67A817A817A817AA6A8FD15FFA6807AADFFCFA7FFFFA57AA5%FD0DFFCF81A5A6CFA7CECFFD0FFFA8A87DA87D52275227277DFFFF7D2752%275227FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0DFFA67A817AA57ACE81%817AA6FD15FFCF7A81A6FFCFFFCFCF8180A7FD0DFF81817AA57A817AA6AE%CFFD0CFF7D52272E27522752275252FFFFFFA85227522752A8FD10FFA8FF%A8FFA8FFA8FFA8FFFFA77A817A817A81A8CF7A817AA7FD04FFA8FFFFFFA8%FFFFFFA8FD08FFA77A817A817A817A8081FD0BFFCFA67B817A817A817A81%568156A7FD0AFF5227275227522752275227A8FD04FF7D27275227A8FD04%FFA8FFA9FFA8FFA8FFA8FFA8FD0CFF81A581A57BA581CFFFCF818181FD16%FFCE7B817A817AA5A6FD0CFFA656807A8156817A815681567A7AFD09FFA8%52277DA8FFA8FF52522752FD06FF27522752A8FD10FFA8FFFFFFA8FFFFFF%A8FFA7817A817A817AA5CFFFFFAD7A8182ADA7A7A6ADAEFD11FFA7A57AA5%A8FD0DFFA7A782ADA7ADA7A783A782A782A7CFFD08FFA82752A8FD04FF7D%272752FD05FFA852272752FD05FFA9FFFFFFA8FFFFFFA8FD0DFFCF7A817A%817A8181CFA6FFA7817B817A817A807A81A7FD11FF8280A6FD12FFA87EA9%FD08FFA7ADCFFD05FF7D5252FD05FFA8522752A8FD04FFA8275227A8FD11%FFA8FFA8FFAFFFA8FFFFFFA7807A7B7A817AA6A77AA8A756817A817A817B%7B5680A7FD10FFA656A6FD06FFA8CFA6A681A6A6CEA8FFA8522727277DA8%FFFFFFA8CEA67A56A5AEFD04FFA82752A8FD05FF53FD0427525252272727%7DFD04FFA8FFFFFFA8FFFFFFA8FFA8FFA8FD0CFF7B8181FFFFFFCFCE7AA6%81817ACFFD04FFA7A57AA6FD10FF8281A6FD05FFA7A680A57AA580A57AA6%A75327522752277D53A8A87B56817A817A81A6FFFFFF7D5252FD07FF7D52%2752274C2728277DFD15FFA8FFFFFFA9FD04FFA65682FD04FF82817A7B56%A6FD06FF827A7BFD10FFA656A6FD04FFA6807AA57AA57AA57AA57A815027%2752FD0527512728277B7A817A7AA7FFFF7D2752A8FD07FFA87D27522752%52A8FD0EFFA8FFFFFFA8FD0CFFA8817AA6A7CFA6817A817A81A7FD06FFA7%5681FD10FF817A82FFFFFFA6A581A57AA581A57AA581A57AA557FD0B2752%CFAEFFAEFFFFFF7D2727FD0BFFA8FD18FFA8FFFFFFA8FFFFFFA8FFFFFFA7%7A567A567A567B567AA7FFA9FD05FF827A56FD09FFCFFFA8FFCFFF828156%A7FFFFA8817A817A817A817A817A817A817A815152275227522752275227%53FD07FF7D2727A8FD0FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8%FD0EFFAEA67A817A817AA6A8FD08FFAD5681FD07FFCF82817B817B817B81%7A81CFFFFFAD7AA581A57BA581A57BA581A57BA57AADFD12FF7D2727FD24%FFA8FD0EFFAEA6A7A7AECFFD09FFA67A56FD06FFAD567A567A567A567A56%81A8FFFFFF81817A817A817A817A817A817A817A8181FD12FF7D2727A8FF%CFADA6A7A6A6A6A7A6A6A6ADA7FD11FFA8FD21FFAD5681FD06FF7B7B7AFD%04A7ADA7CFFD05FFA67A817A817B817A817B817A817B817AA6FD12FF7D27%27FFFFCE7A80A6CEA6A7A6ADA7A67AA5CFFD16FFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FD0BFF827A57FD05FFA77A56A7FD0CFF7B817A817A817A%817A817A817A817A7A7BFD12FF7EF852A8FF82A681A6FD06FF7BA67BCFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD1FFFCF5681A7FD04FFCF56%81CFFD0CFFCE7A817B817B817B817B817B817B817AADFD12FF7D2727FFFF%ADA7FF81A6FFFFFFCF7AADFFA6AEFD32FFA881567B7B827B827B7B56817B%817B827B8282AEFD04FFCF8156817A817A817A817A817A815681AEFD12FF%A8F852A8FF82A7FFFF81A6CFCF7AADFFFF7BCFFD12FFA8FD20FFA7815656%567B567B5681567B567B567A567B56A7FD04FFA8817A817A817B817A817B%815681AEFD13FF7D2727FFFFA782FFFFAD7A817B81CFFFFFA6A8FD14FFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD0FFFA8A77B827B827B8157817B%817B827B82565756AEFD04FFA781567B5681567B56815681A7FD0FFFA8FF%FFFFA852F852A8FF82A7FFA67BCFA8FFA77BA7FF7BAEFD04FFA8FFFFFFA8%FFFFFFA8FFFFFFA8FD33FFCF7B7B82FD06FFA656817B817A8156A6FD0CFF%A8A8FD085227277DFFFFA782AD81FD05FFA781A782A8FD3BFFA852A8A8FD%06FFA65682FD07FF825681567B5682FD0CFFA827F827F827F827F827F827%52FFFFFFA75756827B827B827B8257567BFD3CFF7D2727287DFD05FF8256%81FD07FFA77A5681567AA7FD0CFF52272752775252527D527D7DFD05FFCF%CFA8CFA8CFA8CFA8CFA8FD18FFA8FFFFFFA8FD21FFA8A8522727FD04FF82%2C82FD07FFCF7B827B827BFD0CFFA8F8277DFD21FFA8FFFFFFA8FFFFFFA8%FFFFFFA8FD0CFFA8A8A8FD19FF7D277DFFA82727FFFFFF825681FD07FFCF%ADA7FFA7CFFD0CFF7D2727FD38FF7D5227522752277DA8FD16FFA85227F8%A87D2152FFFF823282FD07FFCFA7AEA8CFA7FD0CFF7DF827A8FD36FF5252%27522752285227527DFD17FFA82727FF5227A8FF82567BFD07FFAEA682A7%82A7FD0CFF7D2727FD30FFA8FD05FF52272752277D7D52275227287DFD14%FFA2F8A8A8F852A8F8A8FF823282FD08FFFD0556FD0CFF7DF827A8FD23FF%A8FFFFFFA8FFFFFFA8FD08FF7D522E52287DFFFFA85227525252A8FD13FF%7D277DFF277DA8277DFF82567BFD08FF8256575682FD0CFF7D2727FD34FF%A85227522752A8FFFFFF52282752277DFD14FFA8FFFFA8A8FFA8FFFF8232%82FD08FF82827B8182FD0CFF7DF827A8FD33FFA827525252277DFFFFA852%2752275252FD1DFF82567BFD19FF7D2727FD0CFFA87DFD0DFFCFCFA7CFFD%13FFA8FF7D272752272752FFFFA8275227522727A8FD1CFF822C82FD19FF%7DF827A8FD09FF52522752FD0CFF82817A817AA5A7FD05FFA8FFFFFFA8FF%FFFFA8FD05FFA82752285252FD04FFA82752275227A8FD1CFF82567BFD07%FF7DFD11FF7D2727FD0AFF7D27527DFD0BFF81A5A7FFFFFFA681A6FD12FF%7D27275227A8FD05FF5227522728A8FD1CFF822C82FD06FF5227A8FD10FF%7DF827A8FD08FFA8275352FD0BFF8181CFFD05FFA77AA6FD12FF27522752%A8FD05FF7D52275227FD1DFF825657FFFFFFA8A87D2727527DA8A8FD0DFF%7D2727FD06FFA8A8A8277DFD0CFFA781CFFFA87D53A8FFFFA681CFFD0CFF%A8FD04FF52272727FD06FF7D2752277DFD0BFFCEA6A681A6A7FD0CFF822C%7CFFFFFF52F8FD0627A8FD0DFF7DF827A8FD04FF7D2727277DA681A7FD0A%FFA67BFFFF52F827277DFFCF7AAEFD04FFA8FFFFFFA8FD08FFA84C27527D%A8A8FFA8A852522752A8FD09FFCFA67AA580A57AA5A5CFFD0AFF825657FF%FFFFA8522727274C27A8FD0EFF7D2727FD04FF7D27A87DA8FFA656CEFD0A%FF81A7FFFF2752272752FFFF81A7FD12FF7DFD0B277DFD09FFA8A57AA57A%7B51817AA57ACEFD09FF823282FD04FF7D272727F852FD0FFF7DF827A8FF%FF7D00A8FFCE81AD817AA7FD0AFFA67BFFA8272727F852FFFF7AAEFD13FF%7D52FD072752A8FFFFFFAEA6CFFD04FFA67AA5A57B275251A57AA581CFFD%08FF82567BFD04FFA8F8FD0427FD0FFF7D2727FFFF7D27A8A7CF827A81A6%56ADA7ADCFFD07FFA781CFFF7D272752A8FFA781CFFD0EFFA8FD05FFA87D%FD05277DA8FFFFAD567B5681A7FFFFCE7AA57AA5512827527AA57A80A6FD%08FF822C82FD04FF7D277DA85227A8FD0EFF7DF827A8FF27A9A7567B8256%827B7A828156ADFD08FF5682FFFFA8A8A8FFA87A7CFD07FFA8FFFFFFA8FD%0CFF27277DFD05FFA67A56815681CFFFA6A581A5A57B275251A581A581A5%FD08FF82567BFD09FFA8FD0FFF7D2727FD04FFCF5682827B82A656AD7B81%A7FD08FFCF56A6CFFFFFFFA7817BFD18FFA82727A8FD05FFAE7B815681A7%FFCFA67AA57AA5512727517AA57AA57AFD08FF822C82FD19FF7DF827A8FF%FFFFA7567B8256827B56828156ADFD09FFCF577AA7FF825682FD1AFF2727%A8FD08FFA7CFFFFFFFA5A581A557272727217BA5A57AA5CFFFFFA87DA87D%A8585751A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FFFFFF7D%F8F8FD04FFCF56828257828256AD8156A7FD0BFF7B82FF81A6FD10FFA8FF%FFFFA8FD05FFA827F87DFD0DFFA67AA57A51F827272726817A817BFFFFA8%FD052728FD17277DFFFFFF7DF827A8FFFFFFA7817CA657A78281828257AE%FD0BFFAE568256FD0DFFA8FD0EFF272727FD08A8FD05FFA7A5A5A5FD0627%7BA57AADFFFF7D5252A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA859527DFFFFFF5221F8A8FFFFFFCF7B827B827B827B827B81A7FD%0CFF8256A7FD1CFFA8F827F827F827F827F82727A8FD04FF7BA57A27F827%F821F87B80A5A8FFFF7D277DFD19FFA8277DFFFFFF7DF8F8A8FD07FFCFFF%FFFFCFFD0FFF8256A8FD1DFFA8FD0427F8272727F82727FD04FFCF7AA57B%7B5057517B7AA5A7FFFFFF7D2752FD19FFA8277DFFFFFF5227F85227524B%52275252522752525227524B5252FD0AFFCF7CFD14FFA8FD0BFFA8A87DA8%7DA87D7DF82752FD04FFCF7BA480A580A57AA5A7FD04FF7E277DFD19FFA8%277DFFFFFF76F827FD13F8A8FD16FFA8FFFFFFA8FD17FF7DF827FD06FFA7%A680A5A5CECFFD05FF7D2752FD19FFA8277DFFFFFF5227F8524B52525227%5252522752525227525252F82727FD32FF522127FD07FFCFA57ACEFD07FF%A8277DFD19FFA8277DFFFFFF7DF827A8FD10FF7DF8F87DFD28FFADADA6CE%CFFD04FF7DF827A8FD07FF81A5A7FD07FF7D2753FD19FF7D277DFFFFFF7D%F8F8FD12FF27F87DFD1BFFA8FFFFFFA8FD07FF82A5A6A7A6A5A7FFFFFF52%F8F8A8FD06FFA8A57AA7FD07FF7DF87DFD19FFA8F87DFFFFFF7DF827A8FD%11FFF8F852FD09FFCFCFA7CFFD0AFFA8FD0EFFA6A6FFCFA5FFCFA5CFFFFF%7DF827A8FD07FF81A5A7FD07FF7D2752FD19FF7D277DFFFFFF52F827FD05%FFCFCFAEFD0AFF27F87DFD07FFCFA6A580A581A6A6FD16FFCFA5A8FFA781%A8FFA6A6FFFF52F8F8A8FD06FFA8A57AADFD07FF7DF87DFD19FFA8F8527D%7D5227F852FD04FFA5A57AA57ACEFD08FF27F876FD06FFA77A817A817AA5%7A807BCFFD14FFCFA6AD7AA57B8181CFA6FFFF7DF827A8FD06FFCF7AA5A7%FD07FF7D2752FD19FF7D2727FD04F827A8FFFFFF81A5A7FFCFA67ACEFD07%FF27F87DFD05FFAD7A817AA57B817AA681817BFD0CFFA8FD07FFA7A6A7A6%7B8181A7A7A6FFFF52F820FD07FFA8817AADFD07FF7DF852FD19FFA82727%F827F852A8FFFFFFA680A7FFFFFFA7A57ACFFD06FFF8F87DFD04FFCF7A81%7A817B817AA7A7AD7A7A81FFFFFFA8FFFFFFA8FD0CFF81CFFFAD7AFFFFA6%A7FFFF7DF827A8FD06FFCF7BA5A7FD07FF7D2752FD19FF7D2752FFA8FD05%FFCFA580CFFD04FFA6A4A6FD06FF27F852FD04FF82817B81A6FFCFADA680%A7A67AA5CFFD12FFA78156CFA8A7CFA67BFFFFFF52F820FD07FFA8817AAD%FD07FF7DF852FD19FFA8F87DFD07FFCF7AA5A7FD04FFA67AA6FD06FF27F8%F87D7DA87D7B568156ADFFFFA6AD7BCF7B8156A7FD11FFA77A57AD81A682%8282FD04FF7DF827FD08FF7B81A7FD07FF7D2752FD19FF7D2777FD07FFCF%A57AA5CFFFFFCE8081A6FD06FFA8F8F8F827F8275681568182FFCFCFA681%A7AD7A8182FD08FFA8FFFFFFA8FFFFFFA75656CFFFFFA7A7A8FD05FF7DF8%F8A8FD06FFAE817AA7FD07FF7DF852527D527D527D527D527D527D527D52%7D527D527D527D527D5252F87DFD08FF81807AA6FFCF7A817AADFD07FFA8%2727F8F8F87B567B56CFFFFFA77A567BA78156A6FD04FFA8FD0BFFA77BCF%FD0BFFA8F82727FD05A87EA77B81A7FD07FFA8FD1D277DFD08FFCF7AA5A5%FFA7A57AA6FD0AFFA8A87DA87B8156A7FD04FF81817BCF8181A6FD10FFCF%FD0EFF7DFD05F820F8F8F8817AA7FD08FFA8A87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DFD0AFFCF7B81A6A67AA6CFFD0EFF%825656A7FD04FFCF82A7828156AEFD20FF7D2727F827F827F8277A81A7FD%07FF7D522752275227522752275227522752275227522752275227522752%27527DFD0BFF81807ACFFD10FFA7575682A8FFCFCF7B81577B5682FD0BFF%A8FFFFFFA9FD13FFFD05A8A9A78156ADFD06FFA827F82721FD1927F827A8%FD0AFFA67AA5CFFD11FF7C5656575657565656575657A8FFFFFFA8FFFFFF%A8FD22FF7A81A7FD06FFA82727277DFD18A82727F87DFD0AFFA68181FD13%FF82565657565756815681A7FD2AFFA88156ADFD06FF522727277DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A87DF82727FD0AFFA656%81CFFD13FFA77B565756565682A8FD2CFF7B80A7FD06FF27202727A87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D272727A8FD09FF%A6807BFD16FFCFA7ADA7FD0EFFA8FFFFFFA8FFFFFFAFFD17FFA88156A7FD%05FFA8F827F852FD1A7D2727F87DFD08FFCFA65681FD20FFA8FFFFFFA8FD%24FF7B81A7FD05FF52272727FD0EA87DFD0CA87D202727CEA7ADA7ADA7AD%A7A67A81A6FD48FFA88156A7FD04FFA827F827F852275227522752275227%5227FD057D275227522752275227522727F8275080567A5680567A568081%FD49FFCF7A81A7FD04FFA8F8272727F827F827F827F827F827F852FD05FF%52F827F827F827F827F8272027005181A57B817BA681A6A7FD2CFFA8FFFF%FFA8FD05FFA87D525227527DFD0DFFA87B56A7FD04FF52F8F827F827F827%F827F827F827F8277DFFA8FFFFFF52F8F827F827F827F827F827F82727FF%A78156AEFD0EFFA8CFA8FD13FFA8FFFFFFA8FFFFFFA8FD0CFF7D52275227%52275252FD0CFFCF7A81A7FFFFFFA827F8272127F8272127F8272127F827%20272752274B2727F827F8272027F8272027F8272027A8FF7A81A8FD0CFF%AD81817A81A6FD24FF7D7D7D52527D5252272E272752FD0BFFA87B56ADFD%04FF2727F8272727F8272727F8272727F827F827F827F827F8272727F827%2727F8272727F82720A8AE8156CFFD0BFF825681567B567A7BCFFD23FF7D%27277D7D7D2752275227277DFD0AFFCF7B7AA7FD2AFFCF5681A8FD0AFFAD%568156817B81568181FD1AFFA8FFFFFFA8FFFFFFA8522727277DFD08277D%FD09FFA87B56A7FD2AFFA87B5682A8FFAEFFFFFFAEFFFFFF567B7B81567B%7B81567AA7FD0DFFA8FFFFFFA8FFFFFFA8FD0BFFA87D5227522727275252%5227522727A8FD09FF7B7B7BFD2BFFA6817A817BA681817B8281817B81A7%AEA7ADA6ADA7CF56ADFD23FF7DFD042752A8FFA852F82727277DFD08FFA7%565656817B817B81577B56817B817B817BA6A8FD1BFF827B5656567B5656%567A565656CF7B82A7CF8181A78182FD05FFA8FFFFFFA8FD19FFA8FD0427%7DFD04FF52F827272752FD04A8FD04FFA75656567A567A56815656567A56%56567B5681A8FD1BFFA7ADA68156A6A7A7A7ADA68182ADA7827BADA7A656%AEFD04FF7D7D7D7E7DA852A8FD0FFFA8FFFFFFA8FFFFFFA852F827F852FF%FFA8FFFF7DFD0427F82727FD06FFCF82A782A7825756A683A782A782A77B%7B5682FD12FFA8A8A8FD09FF5656A7FD05FF7C56567B5657567B567BA8FF%FFA827527D275252287DF87DFFFFA8FFFFFFA8FFFFFFA8FD0CFF7DFD0427%A8FD06FF52272727F8A8FD0BFFCF5681AEFD07FFA67B56CFFD11FF7D2752%59A8FD06FFCF8156CFFD06FF7B8157815681567BA7FFFFFF52527D7D27A8%53527D7D277EFD17FF52F8F827F87DA8FFA8A827272027F852FD0CFFA756%56AEFD07FFCF5656A7FD11FFA87D5228277DA8FD04FFCF5656A7FD06FFCF%7B7B56565681A7FFFFFF7D7D7DA87D7DA8A87DA8A87D7DA8FD08FFAFFD0E%FFFD0427F8272727F8272027F827A8FD0CFFCF567BA7FD07FFA88156CFFD%12FFA8FFA87D2752FD04FFAE8156AEFD08FFA8ADA7AEFD04FFA827275252%27277D5227277D272752FD0AFFA8FFFFFFA8FFFFFFA8FD05FF27F8F827F8%27F827F827F827A8FFA8FD0BFFA75656AEFD07FFAE5656A7FD11FF522727%A8FF7DF87DFFFFFFCF5656A7FD10FF7DF8275252F8275252F827524CF827%A8FFA8FFFFFFA8FD12FF7D27F827F827F820F87DFD0FFFA65681CFFD07FF%A88156CFFD12FF7D52007DFF5227A8FFFFAE8156AEFD10FF7D7D52A87D7D%52A87D7D52A87D7D52FD0AFFA8FD0FFFA852F827F85252A8FD07FFAE7C82%7B827B827B8156567BFD08FFAE5656A7FD13FFA852F8A8A82752FFFFCF56%56A7FD10FF7D527D7D7D527D7D7D527D7D7D527DA8FD05FFAFFD14FF7D52%FF27A8FD08FFA7FD0A567BFD09FFAE5756CFFD11FFA827A8A82727FF2727%A8FFCF8156A6FD10FF7D21F87D5227F87D2727F87D2727F8A8FD0BFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFF7D27FFF8A8FD07FFA7565756827B827B82%7C8283FD0AFFCF5656A7FD11FF52F827FF52F8A852F8A8FFFF7C56568282%827C827C827C827CA7A7FD04FFA8F8F82752F8F85252F8275227F827A8FF%FFFFA8FFFFFFA8FD12FF7D52FF277DFD07FF7B577BFD13FFAE5756CFFD08%FFA8CFA8FD07FF7DFFFFFF7DFFA87DFD04FF575756565657565656575656%565782FD04FF7D52A8A87D7DA87D7D7DA87D7DA8FD0CFFA8FD0EFFA87DFF%7DFD08FF812CA6FD13FFCF5656A7FD05FFCF825657565757ADFD12FF8282%577B5781577B57815757565682FD04FF5227A852277D7D277D52277DFD05%FFA9FFFFFFA8FD1EFF7B5682FD13FFA85756CFFD04FFAE815657567B5657%56A6FD1CFFCF825681FD04FF7D27277DF87D27277DF827FD0CFFA8FFAFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FF822C82FD13FF%AE3256A7FD04FF7B32512751275227512CA7FD1CFF835656FFFFFFA8FFA8%FD0852FD05FFA8FFFFFFA8FFA8FD1CFFAEAD575757ADCFFD11FFA88156A7%FFFFFFAD5681515227522752275757FD1BFF8257565782FD09FFA8FFA8FD%0EFFA8FFFFFFA8FFFFFFAFFD11FF82573257565632577CFD11FF57565682%7CA65756565127272C5127275657A7FD18FFAE56567B83575657FD11FFA8%FFFFFFA8FD1CFF5757565756575657565757CFFD10FF5756565632575757%2C2727572727275756A7FD18FF5757A8FFCFFFA75682FD18FFA8FFA8FFA8%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD05FF5756565732572C7B8282325656%CFFD08FF7DFD07FF7C81577B56575651F8515657F827565682FD17FF8356%A7FFA7A7A7FF8256A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFA8FF%A8FD18FF8256565757825781A8A7A7A756577CFD07FFA8287DFD0AFFA756%572C272C575027275756CFFD17FFA756FFA7AEA7ADAEFF56AEFD19FFA8FF%FFFFA8FFFFFFA8FD0BFFA857565657FFFFAE82822C7B83575657A8FD05FF%7D5227A8FD0AFFA857562DF821F821F8272C81FD18FF8257AEA783A782FF%A856A7FD09FFAFFFFFFFA8FFFFFFA8FFFFFFA8FD17FFA7565756A7FFFFFF%A7A757A7A7325756A7FD04FF7D2727525252277DFD08FF82562C2D262D26%2D2657AEFD18FFCF32AEFFADA7AEFFA756FD18FFA8FFA8FFA8FFA8FFA8FF%AFFFA8FFFFFFA8FFFFFFA8FF8256325757FFFFAE82A75682A75732567CFF%FF7DFD042752FD0427FD09FF8257325632563257A7FD0FFFA9FFFFFFA8FF%FFFFA8FFFF822CAEFFCFA8A72CA7FD04FFA8FFFFFFA8FFFFFFA8FFA8FFA8%FFA8FFA8FFA8FD17FFA756575682FFFFCFAE565756AD82575682FFFF52FD%04275227522752A8FD09FFAEA77B8282ADFD1DFF825682828156A7FD19FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA9FD05FF82563257CFFFFFFFA756%325657A732567CFFFF52F827F8275252272752FD2EFFAE7C827CAEFFFFAE%FFFFFFAFFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD17FFAE565782FD%05FF7B575682A75732ADFFFF52F8F827F8525227277DFD4DFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8572CA7FD05FFCF83A7838232%57A8FFFF7D2727F8F8F852F827A8FFFFFFA8FFFFFFA8FFFFFFA9FFFFFFA9%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FD18FF835682FD05FF82575757565682FD06FFA87DFD04A8FD4EFFA8FFA8%FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD05FF7B56568157575657565756%5657FD41FFAFFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8%FD04FFAFFD15FF7C56325756575657565657FD57FFAFFD04FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFCBFF837B32563256327B83%FD05FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFA9FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FD1DFFCFA7A7A7CFFD5FFFA8FFA8FFA8FFA8FFA8FFAFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FD47FFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFA8FFA8FFA8FFA8FFA8FFFFA8FFFFFFA8FFFFFFAFFD6BFFAFFFFFFFA8FF%FFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FD7BFFA8FFFFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFAFFD27FFAFFFFFFFA9FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8%FFFFFFA8FFFFFFAFFD5FFFAFFFFFFFA8FFFFFFA8FFFFFFA8FD04FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFAFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFAFFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--3 Bn%AI5_BeginGradient: (Unnamed gradient 3)(Unnamed gradient 3) 1 2 Bd[<000000000000000000000000000000000000000000000000000000000000000001000001010102020304040505060708090A0B0C0E111314><00000000000000000000000000000000000000000000000000000000000000000000000000000101020102030303040506060709090B0C0E><000000000000000000000000000000000000000000000000000000000000000000000000000000010202020202030404050607080A0B0C0E>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFCFCFCFBFBFAF9F9F8F7F6F5F4F3F1F0EFEDEBE9E7><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFDFDFDFDFCFCFBFBFAFAF9F8F7F7F6F4F3F2F1EFEEECEAE8><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFDFDFDFCFCFCFBFAFAF9F9F8F7F6F5F4F3F1F0EEEDEBE9>4 %_Br[1 0 87 0 %_BS%_1 0 87 0 Bs0.9 0 50 100 %_BS%_0.9 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 32)(Unnamed gradient 32) 0 2 Bd[<4C4E4E505152535455565758595A5B5C5D5E5F6061626465666768696A6B6C6D6E6F7071737475767778797A7C7D7E7F8182838485868788898A8B8C8D8E8F9091919394959596><171718171817191817191819191A19191A191A1A1B1A1A1B1A1B1B1C1B1B1C1B1C1B1C1C1B1C1B1C1C1D1D1C1D1D1F1E1F1F1F201F202021212021212221222221222223222323>1<0000000000000000000000000000000000000000000000000000000000000000000000000000000100010101010101010101010101010101010101010101010101020202020202><C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79><C7C7C6C6C5C5C4C4C4C3C3C2C2C1C1C1C0C0BFBFBEBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B8B7B7B6B6B5B5B5B4B4B3B3B2B2B2B1B1B0B0AFAFAFAEAEADADACACACABABAAAAA9A9>04 %_Br[0.588235 0.137255 1 0.007843 0.47451 0.662745 0 2 50 100 %_BS%_0.588235 0.137255 1 0.007843 0.47451 0.662745 0 2 50 100 Bs0.298039 0.090196 1 0 0.752941 0.780392 0 2 50 0 %_BS%_0.298039 0.090196 1 0 0.752941 0.780392 0 2 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 34)(Unnamed gradient 34) 0 2 Bd[<9798999A9B9B9C9D9C9D9D9E9F9FA0A1A1A2A2A3A3A4A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAABA9A9AAAAABABABACACACADADAEAEAEADADADAEAEAEAFAFAFAFB0B0B0B1B1B0B0B0B1B1B1B2B2><8181828384848586878889898A8B8C8D8D8E8F8F90909192939494959596979898999A9A9B9B9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A4A4A5A5A5A6A6A7A7A7A8A8A9A9AAAAABABABACACAC><7B7C7C7D7E7F7F808181828283848485858687878889898A8B8B8C8C8D8D8E8E8F8F9090919194949595969697979898999A9A9B9B9B9C9C9D9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><2C2D2F303233343637393B3C3E3F4143444648494B4D4F5052545657595B5D5F61626466686A6D6F717375787A7C7E818385878A8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBD><69686766656463626261605F5E5D5C5B5A59585756555454535251504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A39383837363534333231302F2E2D2C2B2A2A29282726252423><6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948474544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs0.28 0 50 0 %_BS%_0.28 0 50 0 BsBD%AI5_EndGradient%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Linear Gradient 1)(Linear Gradient 1) 0 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[0 0 50 100 %_BS%_0 0 50 100 Bs1 0 50 0 %_BS%_1 0 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient 2)(Linear Gradient 2) 0 6 Bd[<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br[0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 1)(Radial Gradient 1) 1 2 Bd[<00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F2021222324252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F5152535455565658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F90909192939494959696979898999A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAABABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2><00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041434445464648494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F60616263646465666768696A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC><00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F8081818283838485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120>4 %_Br[1 0 50 0 %_BS%_1 0 50 0 Bs0 0 50 100 %_BS%_0 0 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient 2)(Radial Gradient 2) 1 6 Bd[0<FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDEDDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AEAEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E>101<000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F20212223242425262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F70707071717272727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F>04 %_Br0<9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444>101<7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF>04 %_Br<0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F303132343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282><444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18181515141212100F0F0C0C0B0909060606040402020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>10<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473><BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDEDFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDEDEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8><00000000000101010101010101010102020202020202020203030303030303030304040404040404040404050505050505050505050606060606060606060707070707070707070708080808080808080808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F>4 %_Br<8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5><00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E101012121313161618181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C59575553514E4D4A484644413F3C3A373633312E2C29282523>0<737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A59595858575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F0F0E0E0D0C0C0B0B0A09090807070606050404030302010100><F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0><0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F404141424344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F60616263636465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F80818283848586868788898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6>4 %_Br<C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADADADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDBDBDBDBDBDBDADBDBDADBDADADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6><3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E70727476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7><232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>0<0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F10101111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F20202021212222232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F303031313232323333343435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242><A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110><C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2>4 %_Br[0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Offset Squares Pattern)(Offset Squares Pattern) 0 0 55.0781 55.0801 [%AI3_Tile(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR0 0 m0 55.0801 L55.0781 55.0801 L55.0781 0 L0 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR26.1436 52.3262 m26.1436 29.4307 L3.03125 29.4307 L3.03125 52.3262 L26.1436 52.3262 Lf25.0264 50.123 m5.89063 50.123 L5.89063 32.4961 L25.0264 32.4961 L25.0264 50.123 Lf*U*u5.89063 50.123 m25.0264 50.123 L25.0264 32.4961 L5.89063 32.4961 L5.89063 50.123 Ln10.0313 34.2578 m24.1338 34.2578 L24.1338 48.3613 L10.0313 48.3613 L10.0313 34.2578 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR22.4082 48.793 m8.30566 48.793 L8.30566 34.6895 L22.4082 34.6895 L22.4082 48.793 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR52.6943 24.7852 m52.6943 1.67578 L28.9355 1.67578 L28.9355 24.7852 L52.6943 24.7852 Lf47.6777 22.582 m30.0527 22.582 L30.0527 4.95703 L47.6777 4.95703 L47.6777 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR30.0527 22.582 m50.6982 22.582 L50.6982 4.95703 L30.0527 4.95703 L30.0527 22.582 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR47.4199 21.252 m32.2393 21.252 L32.2393 6.50293 L47.4199 6.50293 L47.4199 21.252 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR27.5391 27.5391 m27.5391 0 L0 0 L0 27.5391 L27.5391 27.5391 Lf25.4316 26.1445 m2.75293 26.1445 L2.75293 2.16992 L25.4316 2.16992 L25.4316 26.1445 Lf*U*u4.95605 7.40039 m22.582 7.40039 L22.582 25.0273 L4.95605 25.0273 L4.95605 7.40039 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR22.582 5.67383 m4.95605 5.67383 L4.95605 25.0273 L22.582 25.0273 L22.582 5.67383 Lf20.3887 21.3281 m7.58105 21.3281 L7.58105 10.0313 L20.3887 10.0313 L20.3887 21.3281 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR6.93555 8.73633 m21.0371 8.73633 L21.0371 22.8379 L6.93555 22.8379 L6.93555 8.73633 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR55.0781 55.0801 m55.0781 27.5391 L27.5391 27.5391 L27.5391 55.0801 L55.0781 55.0801 Lf52.3252 50.9688 m30.292 50.9688 L30.292 28.9355 L52.3252 28.9355 L52.3252 50.9688 Lf*U*u30.292 50.9688 m52.3252 50.9688 L52.3252 28.9355 L30.292 28.9355 L30.292 50.9688 Ln32.4951 30.0527 m50.1221 30.0527 L50.1221 47.6777 L32.4951 47.6777 L32.4951 30.0527 Ln*U%AI6_EndPatternLayer) &(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa 0.043137 0 0.713725 0 1 1 0.4 XA) @(%AI6_BeginPatternLayer*u0 J 0 j 1 w 4 M []0 d0 XR50.1221 30.0527 m32.4951 30.0527 L32.4951 48.9727 L50.1221 48.9727 L50.1221 30.0527 Lf*U%AI6_EndPatternLayer) &(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa 0 0.901961 0 0 1 0.2 0.6 XA) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR34.9063 33.749 m49.0078 33.749 L49.0078 47.8506 L34.9063 47.8506 L34.9063 33.749 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed Brush Pat)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7907.8833 8616.3486 m-7816.0479 8616.3486 L-7816.0479 8612.0693 L-7907.8833 8612.0693 L-7907.8833 8616.3486 Ln0 O0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa-7907.6631 8613.6689 m-7908 8613.7354 -7907.4814 8613.9248 -7907.8833 8613.7822 C-7907.8379 8613.6641 -7907.7725 8613.5752 -7907.6631 8613.6689 Cf-7817.1675 8613.835 m-7818.2529 8614.5977 -7819.6816 8613.8271 -7820.8701 8614.3135 C-7821.0098 8614.3457 -7820.8354 8613.8945 -7821.1484 8613.9961 C-7822.3008 8614.5889 -7824.1162 8614.2354 -7825.5195 8613.7783 C-7825.4346 8613.6602 L-7825.7021 8613.5752 -7826.0283 8613.9658 -7826.3115 8613.9111 C-7826.3135 8613.833 -7826.2207 8613.7998 -7826.2861 8613.6914 C-7826.3574 8613.9287 -7826.7979 8613.8018 -7826.9189 8613.9775 C-7827.0303 8613.8857 -7827.0195 8613.6982 -7827.1641 8613.5938 C-7827.3262 8613.8633 L-7827.7769 8614.5029 -7828.4209 8613.8193 -7829.0361 8614.1494 C-7829.0063 8614.0869 -7828.9453 8614.0381 -7828.9941 8613.9775 C-7829.9814 8614.3662 -7831.2168 8614.293 -7832.3208 8614.4365 C-7832.2769 8614.3418 -7832.2363 8614.1689 -7832.3008 8614.0615 C-7832.3555 8614.3447 -7832.6963 8614.416 -7832.9922 8614.4717 C-7833.1255 8614.1807 -7833.4995 8614.7373 -7833.8467 8614.5762 C-7833.8169 8614.5127 L-7834.0732 8614.8174 -7834.1973 8614.3369 -7834.4053 8614.7021 C-7834.5684 8614.4736 L-7834.6807 8614.8838 -7834.9395 8614.2607 -7835.1514 8614.4697 C-7835.1445 8614.5537 L-7835.3442 8614.6533 -7835.4482 8614.4473 -7835.6338 8614.5166 C-7835.6514 8614.4697 L-7836.0854 8614.5762 -7836.3379 8614.3486 -7836.3271 8614.6689 C-7836.4795 8614.4121 -7835.9063 8614.5518 -7836.1455 8614.1777 C-7837.5732 8614.5088 -7839.0459 8614.4434 -7840.4834 8614.4502 C-7840.6465 8614.3213 -7840.7505 8614.2822 -7840.7871 8614.1602 C-7840.9307 8614.2256 -7841.3281 8614.2197 -7841.4585 8614.3838 C-7841.4102 8614.377 -7841.5513 8614.2197 -7841.6274 8614.2041 C-7841.8887 8614.083 -7841.9131 8614.5557 -7842.2002 8614.4121 C-7842.0859 8614.3271 -7842.0469 8614.2236 -7842.0854 8614.1045 C-7842.3301 8614.3545 -7842.6577 8614.3145 -7842.9473 8614.3945 C-7842.9023 8614.3418 -7842.8325 8614.3096 -7842.8433 8614.209 C-7843.1602 8614.4922 -7843.4209 8614.1494 -7843.6982 8614.3281 C-7843.5947 8614.1436 L-7844.0415 8613.9189 -7843.7266 8614.5303 -7844.1128 8614.3975 C-7844.02 8614.3389 -7844.0527 8614.2666 -7844.0361 8614.1914 C-7844.3965 8614.5273 -7844.9795 8614.416 -7845.3389 8614.5303 C-7845.3174 8614.5049 -7845.3232 8614.4541 Y-7845.7148 8614.4961 -7846.1245 8614.3916 -7846.5552 8614.5381 C-7846.7119 8614.4561 -7846.5039 8614.0869 -7846.9185 8614.1553 C-7846.9033 8614.5264 -7847.6221 8614.3066 -7847.3779 8614.7266 C-7847.7319 8614.667 -7848.2925 8614.5273 -7848.5283 8614.6533 C-7848.3691 8614.5127 -7848.7007 8614.2002 -7848.4063 8614.1689 C-7848.6289 8613.9434 L-7848.5957 8613.792 -7848.3999 8613.9951 -7848.4707 8613.8037 C-7848.6182 8613.8193 -7849.0479 8613.9658 -7849.1797 8613.9053 C-7849.4531 8614.1328 -7849.7041 8614.5576 -7850.1465 8614.6045 C-7849.9385 8614.46 -7850.2646 8614.1953 -7850.1235 8614.1318 C-7850.7407 8614.8418 L-7850.8877 8614.8594 -7850.7725 8614.5498 -7850.9854 8614.6465 C-7850.9746 8614.7441 -7851.0674 8614.8057 -7851.1318 8614.8857 C-7851.1875 8614.8418 -7851.7441 8614.9775 -7851.8081 8614.6113 C-7851.8735 8614.4697 -7851.5684 8614.5361 -7851.7314 8614.4053 C-7852.0029 8614.4082 -7852.0151 8614.5342 -7852.2871 8614.54 C-7852.2925 8614.4912 L-7852.4717 8614.4365 -7852.8213 8614.6465 -7852.6265 8614.8486 C-7852.5015 8614.8594 -7852.6738 8614.6289 -7852.4888 8614.7354 C-7852.6152 8614.9473 -7852.9312 8615.0059 -7853.2031 8615.0098 C-7853.1104 8614.9521 -7853.1216 8614.8545 -7853.0845 8614.751 C-7853.4497 8615.0381 -7853.8369 8615.1289 -7854.2451 8615.249 C-7854.2515 8615.4229 -7854.0928 8614.9326 -7854.0327 8615.0234 C-7854.5557 8614.7832 -7855.1128 8615.3662 -7855.5479 8615.0137 C-7855.4766 8614.9834 -7855.5098 8615.2607 -7855.5146 8615.2119 C-7855.7666 8615.1904 -7855.7549 8614.9385 -7855.9189 8615.0313 C-7855.9355 8614.8838 -7856.1255 8615.0791 -7856.2944 8615.124 C-7856.3818 8615.2305 -7856.3384 8615.0518 -7856.1914 8615.0361 C-7856.4268 8615.1602 -7857.3691 8615.3877 -7857.9131 8615.1729 C-7857.9023 8615.2705 -7858.2471 8615.5313 -7858.3721 8615.5205 C-7858.3232 8615.292 L-7858.4375 8615.1553 -7858.7422 8615.3105 -7858.7632 8615.1162 C-7859.0303 8615.3936 -7857.7344 8614.8799 -7858.0957 8615.0938 C-7858.1895 8614.9033 -7858.5991 8615.458 -7858.5215 8615.1465 C-7858.7725 8615.1553 -7859.0161 8615.4121 -7859.2559 8615.1982 C-7859.1865 8615.2354 -7859.0522 8614.8809 -7859.2549 8614.8975 C-7859.6123 8614.9385 -7859.3564 8615.0059 -7859.6465 8615.083 C-7859.8281 8615.1768 L-7859.8398 8615.3994 -7860.1475 8615.1465 -7860.0146 8615.3945 C-7860.0586 8615.2119 -7860.5337 8615.5088 -7860.4971 8615.1377 C-7860.4473 8614.8486 L-7860.6016 8614.8701 -7860.7002 8615.1553 -7860.8213 8615.2832 C-7860.8418 8615.2568 -7860.8823 8615.1982 -7860.8745 8615.1514 C-7860.8994 8615.5967 -7861.2432 8615.1143 -7861.4268 8615.458 C-7861.7505 8615.3037 -7862.2495 8615.4434 -7862.4023 8615.167 C-7862.6514 8615.3018 -7862.8784 8615.4609 -7863.1621 8615.3662 C-7863.1055 8615.3242 -7863.0283 8615.3105 -7863.0122 8615.2158 C-7863.1904 8615.085 -7863.2344 8615.2021 -7863.3975 8615.2744 C-7863.3608 8615.208 -7863.7539 8615.0137 -7863.9521 8614.8555 C-7864.1992 8614.9893 -7864.1143 8615.2295 -7864.1392 8615.376 C-7864.3652 8614.9365 -7864.8379 8615.6592 -7865.1211 8615.2607 C-7865.0352 8615.2002 -7864.7598 8615.0449 -7864.9658 8614.9346 C-7865.1919 8614.4961 -7865.4219 8615.2578 -7865.7861 8615.0479 C-7865.6968 8615.4121 L-7865.8594 8615.1865 -7866.2334 8615.624 -7866.1963 8615.2529 C-7866.3184 8615.3838 -7866.6265 8615.1318 -7866.5859 8615.4873 C-7867.1846 8615.1865 -7868.0425 8615.6689 -7868.4102 8615.0313 C-7868.4961 8615.0908 -7868.7104 8615.0303 -7868.6665 8615.2129 C-7868.5239 8615.4111 -7868.4673 8615.0713 -7868.4141 8615.2061 C-7868.4912 8615.2168 -7868.5078 8615.3145 -7868.5161 8615.3633 C-7868.7021 8615.2822 -7868.8486 8615.2568 -7868.6729 8614.9609 C-7869.0869 8614.7402 -7869.1001 8615.5654 -7869.6274 8615.4258 C-7869.6035 8615.2793 -7869.6436 8615.2236 -7869.7979 8615.2471 C-7870.0903 8615.499 L-7870.4312 8615.4395 -7870.2842 8615.1641 -7870.2925 8614.915 C-7870.4746 8614.958 -7870.6973 8614.9463 -7870.7803 8615.1318 C-7871.0015 8614.8193 L-7870.8398 8615.0449 -7871.1514 8614.9697 -7871.2368 8615.0303 C-7871.1514 8614.9697 L-7871.1846 8614.8633 -7871.3955 8614.9287 -7871.5024 8614.96 C-7871.4766 8615.1143 -7871.2617 8615.1768 -7871.1445 8615.2217 C-7871.2373 8615.3311 -7871.3823 8615.3057 -7871.5059 8615.4346 C-7871.4648 8615.1904 -7871.8027 8615.2607 -7871.9473 8615.2354 C-7872.1133 8615.1826 -7872.1348 8615.4541 -7872.1831 8615.4463 C-7872.1875 8615.3193 -7872.4541 8615.4248 -7872.3247 8615.2471 C-7872.2681 8615.2061 -7872.1953 8615.3701 -7872.1016 8615.2578 C-7872.2109 8615.1641 -7872.1982 8614.9434 -7872.4258 8615.1045 C-7872.5967 8615.2256 -7872.3818 8615.5869 -7872.7061 8615.4326 C-7872.6211 8615.3721 -7872.6055 8615.2744 -7872.5391 8615.1865 C-7872.8433 8615.0586 L-7872.8564 8615.2822 L-7872.8975 8615.2256 -7872.8691 8615.2061 -7872.8877 8615.1768 C-7872.9785 8615.4111 -7873.3521 8615.249 -7873.4209 8615.5127 C-7873.5742 8615.5361 -7873.7441 8615.3584 -7873.8906 8615.333 C-7873.8623 8615.3135 L-7874.0415 8615.1826 -7874.2793 8615.2686 -7874.4297 8615.4189 C-7874.4219 8615.3701 L-7874.5195 8615.3525 -7874.7505 8615.3877 -7874.8735 8615.5186 C-7875.1201 8615.3506 -7874.9561 8614.6777 -7875.2295 8614.958 C-7875.48 8614.9658 -7875.6221 8615.3662 -7875.5215 8615.5088 C-7875.9717 8615.3584 -7876.4834 8615.7217 -7876.9009 8615.376 C-7876.9658 8615.4658 -7876.9248 8615.5225 -7877.0586 8615.5752 C-7877.7197 8615.4873 -7878.4551 8615.8389 -7878.9814 8615.4014 C-7878.79 8615.3066 -7878.9688 8615.1777 -7878.9727 8615.0518 C-7879.1309 8615.251 -7879.1631 8614.8447 -7879.2197 8615.1865 C-7879.2041 8615.3877 -7879.2197 8615.4854 -7879.0337 8615.5664 C-7879.4282 8615.6748 -7880.0283 8615.6748 -7880.2471 8615.4873 C-7880.1377 8615.5801 -7880.2227 8615.6416 -7880.3086 8615.7021 C-7880.2803 8615.3809 -7880.5713 8615.333 -7880.7915 8615.4463 C-7880.8223 8615.6416 L-7880.9658 8615.4395 L-7881.0503 8615.5029 -7881.0591 8615.8506 -7881.2773 8615.6631 C-7881.2891 8615.5869 -7881.3018 8615.5098 -7881.3418 8615.4541 C-7881.5693 8615.6143 -7881.8906 8615.8857 -7882.1377 8615.7197 C-7882.3398 8615.4346 L-7882.4453 8615.4658 -7882.6235 8615.6377 -7882.4375 8615.7197 C-7882.8594 8615.5479 -7883.1309 8615.5264 -7883.2646 8615.2793 C-7883.9912 8615.8809 -7885.0459 8615.9053 -7885.8906 8615.8623 C-7885.8652 8615.7158 L-7886.0923 8615.5791 -7885.9834 8615.9717 -7886.1416 8615.8701 C-7886.0684 8615.7305 -7886.3145 8615.5664 -7886.1362 8615.3945 C-7886.4609 8615.2412 -7886.5547 8615.6494 -7886.7656 8615.7158 C-7886.7979 8615.9082 -7886.5957 8615.5928 -7886.6367 8615.8369 C-7886.6729 8615.9053 -7887.0859 8615.6865 -7887.1362 8615.9775 C-7887.2178 8615.8633 -7887.1543 8615.6494 -7887.1104 8615.5313 C-7887.3086 8615.6729 L-7887.5513 8615.333 -7886.7559 8615.0654 -7887.0107 8614.6465 C-7887.1934 8614.6914 L-7887.3682 8614.3877 -7886.71 8614.3486 -7887.1689 8614.2441 C-7887.3682 8614.3877 -7887.5381 8614.8096 -7887.3608 8614.9385 C-7887.7754 8615.0186 -7887.5527 8615.6318 -7887.9985 8615.6074 C-7888.1201 8615.4365 -7887.6416 8615.5664 -7887.7275 8615.3271 C-7887.9375 8615.0928 -7888.1484 8615.458 -7888.3354 8615.376 C-7888.1279 8615.4854 -7888.3032 8615.7793 -7888.4375 8615.833 C-7888.6641 8615.6953 -7888.29 8615.5576 -7888.6113 8615.5273 C-7888.6641 8615.6953 -7888.9595 8615.8213 -7888.7041 8615.9385 C-7888.8203 8616.3193 -7889.0381 8615.833 -7889.2129 8616.1279 C-7889.3174 8615.8594 -7888.8823 8615.5088 -7889.2354 8615.375 C-7889.1792 8615.6328 -7889.6704 8615.7256 -7889.4839 8616.1074 C-7889.6221 8616.0342 -7889.6367 8615.8311 -7889.5361 8615.6729 C-7889.7334 8615.5137 -7890.0151 8616.1436 -7890.0801 8615.6318 C-7890.1479 8615.8945 L-7890.21 8615.8096 -7890.2983 8615.7441 -7890.3994 8615.6025 C-7890.5732 8615.5977 -7890.96 8615.96 -7890.9443 8615.5615 C-7891 8615.6025 -7891.3975 8615.585 -7891.2441 8615.8594 C-7890.9971 8616.0273 -7890.96 8615.6592 -7890.8223 8616.0313 C-7890.9971 8615.7266 -7891.1787 8616.0713 -7891.3213 8616.1729 C-7891.3447 8616.0186 L-7891.4297 8616.0791 -7891.6255 8616.0449 -7891.6787 8616.2119 C-7891.6133 8616.124 -7891.6475 8616.0186 -7891.7148 8615.9814 C-7891.8042 8616.2158 L-7892.1494 8616.333 -7891.8857 8615.8037 -7892.2217 8615.8721 C-7891.9663 8615.6904 L-7892.0225 8615.7295 -7892.1367 8615.5098 -7892.2979 8615.583 C-7892.3604 8615.7969 -7892.4775 8616.0537 -7892.5313 8616.2197 C-7892.7207 8616.3135 -7892.6162 8615.9785 -7892.8027 8616.1982 C-7892.5586 8615.9404 L-7892.5215 8615.8701 -7892.7231 8615.5869 -7892.9761 8615.5928 C-7893.1377 8615.667 -7893.3887 8615.9756 -7893.1338 8616.0928 C-7893.2607 8616.0967 -7893.4385 8615.9658 -7893.3379 8615.8096 C-7893.6255 8615.8838 -7893.2998 8616.04 -7893.5479 8616.1729 C-7893.6494 8616.0303 -7893.9658 8615.8271 -7894.1563 8615.6201 C-7893.8975 8615.2617 L-7894.0693 8615.2578 L-7893.8467 8614.9717 -7894.1826 8615.04 -7894.0566 8614.7373 C-7894.1743 8614.6904 -7894.3169 8614.793 -7894.4307 8614.8721 C-7894.0864 8615.3564 -7894.8159 8615.5342 -7894.7158 8615.9756 C-7895.1875 8616.0967 -7895.0107 8614.9014 -7895.5024 8615.5928 C-7895.4219 8615.708 -7895.6533 8616.0439 -7895.3564 8615.916 C-7895.6494 8615.8682 -7895.5557 8616.3594 -7895.9014 8616.1768 C-7895.6455 8615.9951 -7896.1763 8615.7295 -7895.8066 8615.4658 C-7895.8311 8615.6113 -7895.6001 8615.5762 -7895.5435 8615.5361 C-7895.6641 8615.3662 -7895.5186 8615.0908 -7895.8184 8615.0908 C-7896.0015 8615.1328 -7896.2524 8615.1416 -7896.2158 8615.3721 C-7896.2085 8615.625 -7895.9365 8615.3447 -7896.0537 8615.6006 C-7896.4185 8615.6885 -7896.4795 8615.3037 -7896.6304 8615.7529 C-7896.3999 8615.7168 -7896.3423 8615.9775 -7896.3467 8616.1514 C-7896.6143 8616.2568 L-7896.5625 8616.0889 L-7896.9922 8615.9678 -7896.6895 8616.3936 -7897.1055 8616.3486 C-7897.3008 8616.0166 L-7897.2017 8615.7305 -7896.6953 8616.1436 -7896.7695 8615.6777 C-7897.04 8615.6592 -7897.1299 8615.8945 -7897.3848 8615.7754 C-7897.3281 8615.7354 -7897.2505 8615.7227 -7897.1943 8615.6826 C-7897.2915 8615.667 -7897.3877 8615.0498 -7897.7734 8615.4111 C-7897.9727 8615.5518 -7897.8262 8615.5762 -7897.8311 8615.751 C-7898.2656 8615.8037 -7898.3955 8615.9814 -7898.6753 8616.0088 C-7898.6177 8615.6689 -7899.1699 8615.9756 -7898.8608 8615.6279 C-7898.7188 8615.8271 -7898.0903 8615.8076 -7897.9365 8615.4834 C-7898.0947 8615.0801 -7897.5952 8615.54 -7897.5024 8615.1318 C-7897.8506 8615.1221 -7897.8335 8614.7256 -7897.8896 8614.4658 C-7897.9863 8614.4473 -7898.0801 8614.5576 -7898.1377 8614.5977 C-7898.1787 8614.8418 -7898.0522 8614.8389 -7898.0449 8615.0908 C-7898.4336 8615.0234 -7898.8081 8615.1602 -7899.0225 8615.3994 C-7899.1523 8615.2783 -7899.1113 8615.0342 -7898.9575 8615.0098 C-7899.4199 8615.083 -7899.9141 8615.0498 -7900.3535 8614.9756 C-7900.0693 8615.375 -7900.8433 8615.0693 -7900.6494 8615.4014 C-7900.4141 8615.4912 -7900.2119 8615.7754 -7900.3418 8615.9541 C-7900.4888 8615.9287 -7900.3369 8615.7793 -7900.3984 8615.6943 C-7900.5859 8615.9121 -7900.6895 8615.3447 -7900.8735 8615.6885 C-7900.4512 8615.5596 -7900.7915 8615.2021 -7900.7139 8614.8896 C-7901.0186 8615.0654 -7900.7007 8614.667 -7901.0024 8614.667 C-7901.3057 8614.8408 -7901.6787 8614.9775 -7902.0161 8615.0449 C-7902.4399 8614.749 -7903.0898 8615.04 -7903.4683 8615.0518 C-7903.6665 8614.8936 -7903.5322 8614.54 -7903.7471 8614.4785 C-7903.9995 8614.4854 -7903.5601 8614.8594 -7903.9336 8614.6982 C-7903.8975 8614.6279 L-7904.0107 8614.709 -7904.5825 8614.3877 -7904.6929 8614.8945 C-7904.5776 8614.5127 L-7904.6475 8614.4775 -7904.7119 8614.5654 -7904.7695 8614.6064 C-7904.7725 8614.4814 -7904.8535 8614.3682 -7904.7402 8614.2861 C-7904.9707 8614.0225 -7905.2241 8614.3281 -7905.4746 8614.3389 C-7905.3135 8614.5654 L-7905.7422 8614.7432 -7906.0293 8614.5186 -7906.4443 8614.5977 C-7906.4316 8614.376 L-7906.6787 8614.5088 L-7906.6182 8614.293 -7906.8447 8614.1553 -7906.9751 8614.335 C-7906.3335 8613.792 L-7906.1553 8613.9229 -7906.5283 8614.0586 -7906.4165 8614.2783 C-7906.3213 8614.4697 -7905.9375 8614.4082 -7905.8755 8614.1953 C-7906.0225 8614.1709 -7906.0293 8614.2197 -7906.1436 8614.2998 C-7906.1919 8613.9912 -7905.9688 8614.0029 -7905.8584 8613.7969 C-7905.9355 8613.8096 -7906.0449 8613.7158 -7906.0615 8613.8135 C-7905.9102 8613.6631 -7905.7578 8613.6396 -7905.5059 8613.6318 C-7905.6763 8613.7529 -7905.4131 8613.8232 -7905.4775 8613.9111 C-7905.4575 8613.6396 -7905.2168 8613.5557 -7904.9053 8613.6318 C-7904.6831 8613.9463 -7904.3208 8613.4297 -7903.96 8613.5166 C-7904.1064 8613.792 -7904.2935 8614.0127 -7904.5127 8614.124 C-7904.2861 8614.2617 -7904.2607 8614.1162 -7904.0337 8614.2549 C-7903.9238 8614.0498 -7903.8457 8613.7354 -7903.5503 8613.6104 C-7903.5342 8613.8135 L-7903.2666 8613.709 -7903.2666 8613.4082 -7902.9258 8613.4658 C-7902.3418 8613.5654 -7901.7407 8613.5654 -7901.2949 8613.5898 C-7901.2783 8613.793 L-7901.0303 8613.3594 -7900.4521 8613.6328 -7900.1182 8613.4395 C-7899.5503 8613.6357 -7898.8848 8613.2471 -7898.5938 8613.5967 C-7897.5913 8613.4395 -7896.7148 8613.2881 -7895.6768 8613.3623 C-7895.8516 8613.6572 L-7895.6655 8613.4395 -7895.7305 8613.8271 -7895.5479 8613.7832 C-7895.7578 8613.5479 -7895.2949 8613.4775 -7895.1665 8613.2969 C-7894.7041 8613.5264 -7894.1104 8613.2754 -7893.7007 8613.0693 C-7893.6846 8613.2725 L-7893.2705 8612.8906 -7892.7759 8613.2256 -7892.2598 8613.2881 C-7892.2007 8613.3721 -7892.1074 8613.5625 -7891.9536 8613.54 C-7891.6738 8613.2119 -7891.5273 8613.2354 -7891.1167 8613.0303 C-7890.8169 8613.0303 -7890.3301 8613.1113 -7890.0254 8613.2393 C-7888.8975 8612.7783 -7887.7456 8613.0732 -7886.5732 8612.7959 C-7886.4888 8613.0342 L-7885.3521 8612.5244 -7883.9541 8612.9873 -7882.9839 8612.7256 C-7883.0776 8613.1328 L-7882.7734 8613.2578 -7882.3843 8613.0264 -7882.4619 8612.7373 C-7882.1567 8612.8623 -7881.7007 8612.54 -7881.5068 8612.875 C-7881.1953 8612.9502 -7881.1255 8612.6865 -7880.8662 8612.6318 C-7880.2422 8612.7861 -7880.0107 8612.751 -7879.4224 8612.6748 C-7879.5684 8612.6494 L-7879.6328 8612.7393 -7879.6387 8612.9121 -7879.4922 8612.9385 C-7879.2725 8612.8242 -7878.6846 8613.0479 -7878.9033 8612.5615 C-7878.2754 8612.8418 -7877.4385 8612.333 -7876.8271 8612.7119 C-7876.8789 8612.5791 -7876.7246 8612.5537 -7876.6602 8612.4639 C-7876.1089 8612.458 -7875.5293 8612.7295 -7875.0898 8612.5029 C-7875.0024 8612.5693 -7875.2295 8612.7295 -7875.0049 8612.7432 C-7874.8721 8612.6914 -7875.0024 8612.5693 -7874.8384 8612.4951 C-7873.9453 8612.2471 -7873.0303 8612.751 -7872.2188 8612.6865 C-7870.7754 8612.4297 -7869.2695 8612.5596 -7867.8867 8612.5166 C-7867.9023 8612.6143 L-7867.4395 8612.2412 -7866.8159 8612.9961 -7866.4463 8612.4346 C-7866.3369 8612.5273 -7866.0283 8612.4785 -7866.1094 8612.667 C-7865.7407 8612.4033 -7865.0771 8612.915 -7864.5439 8612.5801 C-7864.5928 8612.5713 -7864.6211 8612.5898 -7864.6777 8612.6328 C-7864.1392 8612.8486 -7863.6641 8612.5537 -7863.0957 8612.749 C-7863.1533 8612.791 -7863.2583 8612.8213 -7863.2754 8612.9189 C-7863.0557 8613.1064 -7862.7549 8612.5068 -7862.6348 8612.9775 C-7862.5088 8612.9736 -7862.5449 8612.7402 -7862.6221 8612.7549 C-7861.3779 8612.9385 -7860.0498 8612.6377 -7858.7549 8612.5303 C-7857.8271 8612.8105 -7858.6982 8613.3232 -7857.9663 8612.9717 C-7857.9063 8613.0625 -7857.9229 8612.792 -7857.9131 8612.8896 C-7857.6299 8612.7578 -7857.4717 8613.415 -7857.2754 8613.1689 C-7857.3564 8612.8799 -7857.1445 8613.0059 -7857.1387 8612.8311 C-7856.5713 8613.0186 -7856.4575 8613.2793 -7856.0098 8613.0586 C-7856.0435 8613.2119 L-7855.5186 8612.7822 -7854.9102 8613.0127 -7854.4673 8612.5166 C-7851.5728 8612.4258 -7848.7983 8612.1514 -7845.9761 8612.0938 C-7843.1865 8612.1885 -7840.4551 8611.9658 -7837.6221 8612.2295 C-7836.9585 8612.6289 -7836.9087 8612.6182 -7836.1797 8612.4561 C-7836.2095 8612.5205 -7836.2549 8612.5361 -7836.2061 8612.5967 C-7836.1699 8612.2686 -7835.6929 8612.5654 -7835.6235 8612.2529 C-7834.5762 8612.3135 -7833.6113 8612.2236 -7832.5337 8612.2217 C-7832.7041 8612.2568 -7832.7896 8612.5244 -7832.5869 8612.5029 C-7832.3755 8612.293 L-7832.3408 8612.3857 L-7832.2021 8612.3369 -7832.0513 8612.1738 -7832.1943 8612.0693 C-7829.4873 8611.7861 -7826.8242 8612.4434 -7824.1729 8612.3633 C-7823.5439 8612.5 -7822.6475 8612.375 -7821.9629 8612.3066 C-7819.9355 8612.7441 -7818.1084 8613.0977 -7816.0479 8612.792 C-7816.3174 8613.6396 -7817.1675 8613.835 Vf-7907.2578 8613.6357 m-7907.1855 8613.7998 -7906.9497 8613.8896 -7907.1377 8614.1074 C-7907.1611 8613.9541 -7907.2822 8613.7822 -7907.2578 8613.6357 Cf-7900.9619 8615.3232 m-7900.9536 8615.2744 -7900.8721 8615.3896 -7900.8521 8615.416 C-7900.9297 8615.4287 -7901.0024 8615.5664 -7901.0645 8615.4814 C-7900.9854 8615.4697 -7900.9976 8615.3916 -7900.9619 8615.3232 Cf-7899.3521 8615.4209 m-7899.3765 8615.5664 -7899.7207 8615.6826 -7899.9238 8615.7002 C-7899.3521 8615.4209 Lf-7897.8521 8616.0225 m-7897.7227 8616.1455 -7897.7583 8616.2129 -7897.9326 8616.209 C-7897.9453 8616.1318 -7897.8877 8616.0928 -7897.8521 8616.0225 Cf-7897.7456 8615.6904 m-7897.6211 8615.6865 -7897.5591 8615.7725 -7897.4985 8615.8555 C-7897.5029 8615.7305 -7897.7871 8615.9346 -7897.7456 8615.6904 Cf-7894.4893 8616.1143 m-7894.4111 8616.1025 -7894.2417 8615.9814 -7894.1689 8616.1436 C-7894.2505 8616.0303 -7894.5498 8616.3281 -7894.4893 8616.1143 Cf-7892.9761 8615.8936 m-7892.9272 8615.9033 -7892.9072 8615.9297 -7892.8506 8615.8896 C-7892.7607 8615.9561 -7892.8555 8616.0625 -7892.9312 8616.0762 C-7892.9761 8615.8936 Lf-7865.4287 8615.3066 m-7865.5923 8615.3799 L-7865.5684 8615.2354 L-7865.4287 8615.3066 Lf-7853.3574 8615.2998 m-7853.1943 8615.208 -7853.2441 8615.4365 -7853.2168 8615.458 C-7853.3643 8615.4736 -7853.1621 8615.2783 -7853.3574 8615.2998 Cf-7846.8486 8614.5713 m-7846.8984 8614.5752 L-7846.8818 8614.2754 L-7846.8486 8614.5713 LfU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe ArtOnPath Br) -(ush Tool/ Charcoal/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -(1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 1 1 1 Xa(White)Pc0.74902 0.678431 0.670588 0.901961 0 0 0 Xa(Black)Pc0 0.992157 1 0 1 0 0 Xa(RGB Red)Pc0.062745 0 0.964706 0 1 1 0 Xa(RGB Yellow)Pc0.627451 0 1 0 0 1 0 Xa(RGB Green)Pc0.517647 0 0.12549 0 0 1 1 Xa(RGB Cyan)Pc0.882353 0.768627 0 0 0 0 1 Xa(RGB Blue)Pc0.270588 0.815686 0 0 1 0 1 Xa(RGB Magenta)Pc0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa(R=193 G=39 B=45)Pc0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa(R=237 G=28 B=36)Pc0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa(R=241 G=90 B=36)Pc0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa(R=247 G=147 B=30)Pc0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa(R=251 G=176 B=59)Pc0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa(R=252 G=238 B=33)Pc0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa(R=217 G=224 B=33)Pc0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa(R=140 G=198 B=63)Pc0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa(R=57 G=181 B=74)Pc0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa(R=0 G=146 B=69)Pc0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa(R=0 G=104 B=55)Pc0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa(R=34 G=181 B=115)Pc0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa(R=0 G=169 B=157)Pc0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa(R=41 G=171 B=226)Pc0.87451 0.52549 0 0 0 0.443137 0.737255 Xa(R=0 G=113 B=188)Pc0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa(R=46 G=49 B=146)Pc1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa(R=27 G=20 B=100)Pc0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa(R=102 G=45 B=145)Pc0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa(R=147 G=39 B=143)Pc0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa(R=158 G=0 B=93)Pc0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa(R=212 G=20 B=90)Pc0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa(R=237 G=30 B=121)Pc0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa(R=199 G=178 B=153)Pc0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa(R=153 G=134 B=117)Pc0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa(R=115 G=99 B=87)Pc0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa(R=83 G=71 B=65)Pc0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa(R=198 G=156 B=109)Pc0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa(R=166 G=124 B=82)Pc0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa(R=140 G=98 B=57)Pc0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa(R=117 G=76 B=36)Pc0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa(R=96 G=56 B=19)Pc0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa(R=66 G=33 B=11)PcBb2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 1)PcBb0 0 0 0 Bh2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 1)PcBb2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient 2)PcBb0 0 0 0 Bh2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient 2)Pc(Offset Squares Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Offset Squares Pattern)Pc0 g(K=100)Pc0.1 g(K=90)Pc0.2 g(K=80)Pc0.3 g(K=70)Pc0.4 g(K=60)Pc0.5 g(K=50)Pc0.6 g(K=40)Pc0.7 g(K=30)Pc0.8 g(K=20)Pc0.9 g(K=10)Pc0.95 g(R=241 G=241  B=242)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A1 Ap0 O0 J 0 j 1 w 4 M []0 d0 XR545.5781 155.1963 m20.604 155.1963 L20.604 690.791 L545.5781 690.791 L545.5781 155.1963 LBb0 0 0 0 Bh1 (Unnamed gradient 3) 248.7759 359.4131 -48.6215 343.474 1.20722 0 0 1.10135 -1658.2216 -906.3062 Bg274.0952 -283.8486 -311.1353 -250.057 280.7979 428.9067 Bmf0 BBuuu0 Ap75.3242 460.8501 m75.3311 456.4224 78.918 452.8315 83.3457 452.8247 C105.6504 452.8081 L115.3936 452.8032 123.2769 444.9146 123.2783 435.1772 C123.312 412.1035 L113.6763 412.1035 L113.6782 435.1772 L113.668 439.6108 110.0811 443.1929 105.6504 443.2026 C83.3457 443.2231 L73.6074 443.2251 65.7241 451.1167 65.7192 460.8501 C65.7192 494.6685 L75.3242 494.6685 L75.3242 460.8501 LBb1 (Unnamed gradient 34) 87.1655 523.8628 -84.4776 121.335 1 0 0 1 0 0 Bg11.6767 -120.7719 -60.4073 -5.8404 117.3716 526.7832 Xm767.1052 -7934.1733 -60.4073 -5.8404 -649.7334 8460.957 Bc11.6767 -120.7719 -60.4073 -5.8404 117.3716 526.7832 Bm767.1052 -7934.1733 -60.4073 -5.8404 129.0483 406.0117 Bcf0 BB131.3013 386.2422 m126.8755 386.248 123.2866 389.8398 123.2808 394.2656 C123.2808 428.0864 L113.6748 428.0864 L113.6748 394.2656 L113.6816 384.5332 121.564 376.6426 131.3013 376.6387 C162.5137 376.625 L162.5137 386.2305 L131.3013 386.2422 LBb1 (Unnamed gradient 34) 124.7827 527.501 -84.4776 121.3353 1 0 0 1 0 0 Bg11.6767 -120.7721 -52.5241 -5.07823 150.6235 529.9995 Xm763.9034 -7901.0557 -52.5241 -5.07823 -613.2798 8431.0547 Bc11.6767 -120.7721 -52.5241 -5.07823 150.6235 529.9995 Bm763.9034 -7901.0557 -52.5241 -5.07823 162.3003 409.2275 Bcf0 BBUuuu243.7949 263.5215 m243.7949 299.9004 L243.792 309.6367 235.9087 317.5254 226.165 317.5313 C226.165 317.5313 L188.6924 317.5313 L188.6924 317.5293 L188.6924 307.9277 L226.165 307.9277 L230.5972 307.918 234.1846 304.334 234.1938 299.9004 C234.1938 299.9004 L234.1899 263.5215 L243.7949 263.5215 L243.7949 263.5215 LBb1 (Unnamed gradient 32) 219.833 437.4106 -91.3995 204.9046 1 0 0 1 0 0 Bg-5.00443 -204.8435 -60.3873 1.47529 250.0264 436.6729 Xm-195.6638 -8008.9873 -60.3873 1.47529 445.6904 8445.6602 Bc-5.00443 -204.8435 -60.3873 1.47529 250.0264 436.6729 Bm-195.6638 -8008.9873 -60.3873 1.47529 245.022 231.8291 Bcf0 BBUu*u0 g268.8477 239.7813 m268.8477 239.7773 L268.8477 239.7813 L268.8477 239.7813 Lf268.8477 239.7813 m251.8501 239.7813 L251.8501 239.7813 L242.1108 239.7832 234.2285 247.6738 234.2236 257.4082 C234.2271 293.7852 L243.8252 293.7852 L243.8286 257.4082 L243.8286 257.4082 L243.834 252.9785 247.4224 249.3887 251.8501 249.3828 C268.8477 249.3828 L268.8477 239.7813 L268.8477 239.7813 LBb1 (Unnamed gradient 32) 255.6846 436.5337 -91.3995 204.9033 1 0 0 1 0 0 Bg-5.0044 -204.8422 -39.9178 0.975212 275.6436 436.0459 Xm-195.9645 -8021.2954 -39.9178 0.975212 471.6084 8457.3418 Bc-5.0044 -204.8422 -39.9178 0.975212 275.6436 436.0459 Bm-195.9645 -8021.2954 -39.9178 0.975212 270.6392 231.2041 Bcf0 BB*UUu*u0 g207.1162 307.9453 m207.1162 307.9434 L207.1162 307.9453 L207.1162 307.9453 Lf207.1162 307.9453 m174.1646 307.9453 L174.1646 307.9453 L164.4272 307.9473 156.5439 315.8379 156.5381 325.5723 C156.5381 454.7759 L166.144 454.7759 L166.144 325.5723 L166.144 325.5723 L166.1499 321.1445 169.7378 317.5547 174.1646 317.5488 C207.1162 317.5488 L207.1162 307.9453 L207.1162 307.9453 LBb1 (Unnamed gradient 32) 183.2197 438.3052 -91.3995 204.905 1 0 0 1 0 0 Bg-5.00444 -204.8439 -58.1321 1.4202 212.2842 437.5952 Xm-198.079 -8107.8491 -58.1321 1.4202 410.3633 8545.4443 Bc-5.00444 -204.8439 -58.1321 1.4202 212.2842 437.5952 Bm-198.079 -8107.8491 -58.1321 1.4202 207.2798 232.751 Bcf0 BB*UUU1 Ap189.5811 464.6548 m189.5811 448.9536 176.8535 436.2271 161.1538 436.2271 c145.4546 436.2271 132.7275 448.9536 132.7275 464.6548 c132.7275 480.353 145.4546 493.0801 161.1538 493.0801 c176.8535 493.0801 189.5811 480.353 189.5811 464.6548 cBb1 (Unnamed gradient 32) 160.5244 438.8599 -91.3995 204.9044 1 0 0 1 0 0 Bg-5.00443 -204.8433 -61.5851 1.50456 191.3169 438.1074 Xm-198.4664 -8123.7041 -61.5851 1.50456 389.7832 8561.8115 Bc-5.00443 -204.8433 -61.5851 1.50456 191.3169 438.1074 Bm-198.4664 -8123.7041 -61.5851 1.50456 186.3125 233.2637 Bcf0 BB310.5586 244.041 m310.5586 230.2441 299.373 219.0605 285.5762 219.0605 c271.7783 219.0605 260.5938 230.2441 260.5938 244.041 c260.5938 257.8398 271.7783 269.0234 285.5762 269.0234 c299.373 269.0234 310.5586 257.8398 310.5586 244.041 cBb1 (Unnamed gradient 32) 290.2598 435.6904 -91.3995 204.9052 1 0 0 1 0 0 Bg-5.00445 -204.8441 -54.6087 1.33412 317.5635 435.0234 Xm-196.2374 -8032.4683 -54.6087 1.33412 513.8008 8467.4922 Bc-5.00445 -204.8441 -54.6087 1.33412 317.5635 435.0234 Bm-196.2374 -8032.4683 -54.6087 1.33412 312.5586 230.1797 Bcf0 BBUuu0 Ap375.9492 282.5801 m375.9561 278.1543 379.543 274.5625 383.9707 274.5547 C419.1904 274.541 L428.9336 274.5352 436.8164 266.6445 436.8184 256.9082 C436.8516 246.5879 L427.2158 246.5879 L427.2178 256.9082 L427.208 261.3418 423.6211 264.9258 419.1904 264.9355 C383.9707 264.9531 L374.2324 264.957 366.3496 272.8477 366.3438 282.5801 C366.3438 316.4004 L375.9492 316.4004 L375.9492 282.5801 LBb1 (Unnamed gradient 32) 386.4287 408.4033 -83.7635 162.7687 1 0 0 1 0 0 Bg17.6819 -161.8054 -72.9417 -7.97097 422.9023 412.3887 Xm891.6666 -8159.5767 -72.9417 -7.97097 -468.7642 8571.9648 Bc17.6819 -161.8054 -72.9417 -7.97097 422.9023 412.3887 Bm891.6666 -8159.5767 -72.9417 -7.97097 440.584 250.583 Bcf0 BBUu373.0137 399.0645 m373.0137 361.8906 L373.0078 357.4648 369.4189 353.875 364.9932 353.8672 C348.2109 353.8672 L348.2109 353.8496 L329.1611 353.8496 L325.6348 353.8496 322.3594 352.8027 319.6055 351.0215 C324.1416 342.4727 L325.5176 343.5762 327.2607 344.2422 329.1611 344.2461 C349.8936 344.2461 L349.8936 344.2637 L364.9932 344.2637 L374.7295 344.2676 382.6143 352.1563 382.6191 361.8906 C382.6191 399.0645 L373.0137 399.0645 LBb1 (Unnamed gradient 32) 347.9258 404.1973 -83.7635 162.7717 1 0 0 1 0 0 Bg17.6822 -161.8084 -71.4341 -7.80621 383.6426 408.1006 Xm896.3318 -8202.2686 -71.4341 -7.80621 -512.6895 8610.3691 Bc17.6822 -161.8084 -71.4341 -7.80621 383.6426 408.1006 Bm896.3318 -8202.2686 -71.4341 -7.80621 401.3252 246.292 Bcf0 BBU363.1836 321.9043 m358.7539 321.9102 355.1641 325.498 355.1592 329.9258 C355.1592 346.9238 L345.5557 346.9238 L345.5557 329.9258 L345.5586 320.1875 353.4502 312.3066 363.1836 312.3008 C369.2979 312.3008 L369.2979 312.2656 L410.6182 312.2676 L410.6182 321.9043 L363.1836 321.9043 LBb1 (Unnamed gradient 32) 369.2256 406.5244 -83.7635 162.7734 1 0 0 1 0 0 Bg17.6824 -161.8102 -68.4538 -7.48053 402.9795 410.2129 Xm893.339 -8174.8823 -68.4538 -7.48053 -490.3594 8585.0957 Bc17.6824 -161.8102 -68.4538 -7.48053 402.9795 410.2129 Bm893.339 -8174.8823 -68.4538 -7.48053 420.6621 248.4023 Bcf0 BB1 Ap442.5742 317.7969 m442.5742 305.7441 432.8037 295.9727 420.75 295.9727 c408.6963 295.9727 398.9238 305.7441 398.9238 317.7969 c398.9238 329.8516 408.6963 339.623 420.75 339.623 c432.8037 339.623 442.5742 329.8516 442.5742 317.7969 cBb1 (Unnamed gradient 32) 410.5596 411.04 -83.7635 162.77 1 0 0 1 0 0 Bg17.682 -161.8068 -49.7143 -5.4327 435.417 413.7568 Xm896.2959 -8201.9404 -49.7143 -5.4327 -460.8789 8615.6973 Bc17.682 -161.8068 -49.7143 -5.4327 435.417 413.7568 Bm896.2959 -8201.9404 -49.7143 -5.4327 453.0986 251.9502 Bcf0 BB449.9014 235.3848 m449.9014 224.4238 441.0156 215.5352 430.0527 215.5352 c419.0918 215.5352 410.2041 224.4238 410.2041 235.3848 c410.2041 246.3477 419.0918 255.2344 430.0527 255.2344 c441.0156 255.2344 449.9014 246.3477 449.9014 235.3848 cBb1 (Unnamed gradient 32) 410.8535 411.0723 -83.7635 162.7684 1 0 0 1 0 0 Bg17.6818 -161.8052 -45.5729 -4.98014 433.6406 413.5625 Xm887.0921 -8117.7173 -45.5729 -4.98014 -453.4517 8531.2793 Bc17.6818 -161.8052 -45.5729 -4.98014 433.6406 413.5625 Bm887.0921 -8117.7173 -45.5729 -4.98014 451.3223 251.7568 Bcf0 BB398.0615 399.4277 m398.0615 388.3867 389.1113 379.4375 378.0703 379.4375 c367.0303 379.4375 358.0791 388.3867 358.0791 399.4277 c358.0791 410.4688 367.0303 419.4199 378.0703 419.4199 c389.1113 419.4199 398.0615 410.4688 398.0615 399.4277 cBb1 (Unnamed gradient 32) 376.9316 409.8467 -83.7635 186.7086 1 0 0 1 0 0 Bg20.2825 -185.6036 -45.8719 -5.01282 399.8682 412.3535 Xm901.4836 -8249.4131 -45.8719 -5.01282 -501.6152 8661.7666 Bc20.2825 -185.6036 -45.8719 -5.01282 399.8682 412.3535 Bm901.4836 -8249.4131 -45.8719 -5.01282 420.1504 226.75 Bcf0 BBU120.7144 612.1909 m120.7144 596.8096 108.2451 584.3413 92.8638 584.3413 c77.4824 584.3413 65.0132 596.8096 65.0132 612.1909 c65.0132 627.5728 77.4824 640.0425 92.8638 640.0425 c108.2451 640.0425 120.7144 627.5728 120.7144 612.1909 cBb1 (Unnamed gradient 32) 93.1079 651.8682 -90.3526 139.9114 1 0 0 1 0 0 Bg-0.860974 -139.9088 -59.8885 0.368543 123.0522 651.6841 Xm-49.1827 -7992.2246 -59.8885 0.368543 172.2349 8643.9082 Bc-0.860974 -139.9088 -59.8885 0.368543 123.0522 651.6841 Bm-49.1827 -7992.2246 -59.8885 0.368543 122.1914 511.7754 Bcf0 BB104.0298 505.292 m104.0298 487.5327 89.6333 473.1353 71.8735 473.1353 c54.1143 473.1353 39.7173 487.5327 39.7173 505.292 c39.7173 523.0513 54.1143 537.4482 71.8735 537.4482 c89.6333 537.4482 104.0298 523.0513 104.0298 505.292 cBb1 (Unnamed gradient 34) 70.2363 522.2261 -84.4776 121.3351 1 0 0 1 0 0 Bg11.6767 -120.772 -71.1006 -6.87427 105.7861 525.6631 Xm769.6815 -7960.8188 -71.1006 -6.87427 -663.8955 8486.4824 Bc11.6767 -120.772 -71.1006 -6.87427 105.7861 525.6631 Bm769.6815 -7960.8188 -71.1006 -6.87427 117.4629 404.8906 Bcf0 BBu0 Ap462.043 283.166 m462.1709 278.6289 462.9355 274.3652 464.1904 270.5508 C475.5938 270.5508 L475.5938 283.166 L462.043 283.166 LBb1 (Unnamed gradient 34) 468.8184 323.1553 -90 71.4605 1 0 0 1 0 0 Bg-0.000003 -71.4605 -17.5508 0.000001 477.5938 323.1553 Xm-0.000365 -8339.8291 -17.5508 0.000001 477.5938 8662.9844 Bc-0.000003 -71.4605 -17.5508 0.000001 477.5938 323.1553 Bm-0.000365 -8339.8291 -17.5508 0.000001 477.5938 251.6943 Bcf0 BB462.0938 267.5879 m451.8545 267.5879 L452.9424 265.9844 454.1797 264.4863 455.5469 263.1191 c459.6045 259.0645 464.7969 256.1563 470.6074 254.8984 C467.0225 257.9766 464.1025 262.3574 462.0938 267.5879 CBb1 (Unnamed gradient 34) 461.2305 323.1572 -90 71.4618 1 0 0 1 0 0 Bg-0.000003 -71.4618 -22.7529 0.000001 472.6074 323.1572 Xm-0.000364 -8316.6611 -22.7529 0.000001 472.6074 8639.8184 Bc-0.000003 -71.4618 -22.7529 0.000001 472.6074 323.1572 Bm-0.000364 -8316.6611 -22.7529 0.000001 472.6074 251.6953 Bcf0 BB483.5371 254.8984 m489.3496 256.1543 494.542 259.0645 498.6006 263.1191 c499.9678 264.4863 501.2051 265.9844 502.292 267.5879 C492.0527 267.5879 L490.043 262.3574 487.123 257.9766 483.5371 254.8984 CBb1 (Unnamed gradient 34) 492.9141 323.1572 -90 71.4618 1 0 0 1 0 0 Bg-0.000003 -71.4618 -22.7549 0.000001 504.292 323.1572 Xm-0.000365 -8348.3447 -22.7549 0.000001 504.292 8671.502 Bc-0.000003 -71.4618 -22.7549 0.000001 504.292 323.1572 Bm-0.000365 -8348.3447 -22.7549 0.000001 504.292 251.6953 Bcf0 BB478.5518 270.5508 m489.957 270.5508 L491.21 274.3652 491.9746 278.6289 492.1035 283.166 C478.5518 283.166 L478.5518 270.5508 LBb1 (Unnamed gradient 34) 485.3281 323.1553 -90 71.4605 1 0 0 1 0 0 Bg-0.000003 -71.4605 -17.5518 0.000001 494.1035 323.1553 Xm-0.000365 -8356.3389 -17.5518 0.000001 494.1035 8679.4941 Bc-0.000003 -71.4605 -17.5518 0.000001 494.1035 323.1553 Bm-0.000365 -8356.3389 -17.5518 0.000001 494.1035 251.6943 Bcf0 BB488.8525 301.707 m486.3887 307.541 482.7324 312.0254 478.5518 314.3242 C478.5518 301.707 L488.8525 301.707 LBb1 (Unnamed gradient 34) 483.7021 323.1553 -90 71.4573 1 0 0 1 0 0 Bg-0.000003 -71.4573 -14.3008 0.000001 490.8525 323.1553 Xm-0.000367 -8385.8711 -14.3008 0.000001 490.8525 8709.0264 Bc-0.000003 -71.4573 -14.3008 0.000001 490.8525 323.1553 Bm-0.000367 -8385.8711 -14.3008 0.000001 490.8525 251.6982 Bcf0 BB461.0791 298.7461 m450.0908 298.7461 L448.0996 294.9414 446.8848 290.668 446.666 286.125 C459.0889 286.125 L459.2246 290.5938 459.9053 294.8574 461.0791 298.7461 CBb1 (Unnamed gradient 34) 453.873 323.1582 -90 71.4652 1 0 0 1 0 0 Bg-0.000003 -71.4652 -18.4131 0.000001 463.0791 323.1582 Xm-0.000365 -8340.4609 -18.4131 0.000001 463.0791 8663.6191 Bc-0.000003 -71.4652 -18.4131 0.000001 463.0791 323.1582 Bm-0.000365 -8340.4609 -18.4131 0.000001 463.0791 251.6934 Bcf0 BB493.0771 270.5508 m504.0557 270.5508 L506.0488 274.3516 507.2617 278.625 507.4795 283.166 C495.0615 283.166 L494.9287 278.7012 494.2471 274.4375 493.0771 270.5508 CBb1 (Unnamed gradient 34) 500.2783 323.1553 -90 71.4605 1 0 0 1 0 0 Bg-0.000003 -71.4605 -18.4023 0.000001 509.4795 323.1553 Xm-0.000366 -8371.2891 -18.4023 0.000001 509.4795 8694.4443 Bc-0.000003 -71.4605 -18.4023 0.000001 509.4795 323.1553 Bm-0.000366 -8371.2891 -18.4023 0.000001 509.4795 251.6943 Bcf0 BB492.1035 286.125 m491.9736 290.6621 491.207 294.9297 489.9512 298.7461 C478.5518 298.7461 L478.5518 286.125 L492.1035 286.125 LBb1 (Unnamed gradient 34) 485.3281 323.1582 -90 71.4652 1 0 0 1 0 0 Bg-0.000003 -71.4652 -17.5518 0.000001 494.1035 323.1582 Xm-0.000366 -8371.916 -17.5518 0.000001 494.1035 8695.0742 Bc-0.000003 -71.4652 -17.5518 0.000001 494.1035 323.1582 Bm-0.000366 -8371.916 -17.5518 0.000001 494.1035 251.6934 Bcf0 BB470.6299 314.4004 m464.8096 313.1465 459.6113 310.2344 455.5469 306.1699 c454.1797 304.8047 452.9424 303.3086 451.8525 301.707 C462.1016 301.707 L464.1143 306.9395 467.041 311.3223 470.6299 314.4004 CBb1 (Unnamed gradient 34) 461.2412 323.1553 -90 71.4554 1 0 0 1 0 0 Bg-0.000003 -71.4554 -22.7773 0.000001 472.6299 323.1553 Xm-0.000366 -8363.4863 -22.7773 0.000001 472.6299 8686.6416 Bc-0.000003 -71.4554 -22.7773 0.000001 472.6299 323.1553 Bm-0.000366 -8363.4863 -22.7773 0.000001 472.6299 251.7002 Bcf0 BB459.0879 283.166 m446.666 283.166 L446.8848 278.625 448.0996 274.3516 450.0908 270.5508 C461.0723 270.5508 L459.9004 274.4375 459.2217 278.7012 459.0879 283.166 CBb1 (Unnamed gradient 34) 453.8691 323.1553 -90 71.4605 1 0 0 1 0 0 Bg-0.000003 -71.4605 -18.4063 0.000001 463.0723 323.1553 Xm-0.000364 -8324.8799 -18.4063 0.000001 463.0723 8648.0352 Bc-0.000003 -71.4605 -18.4063 0.000001 463.0723 323.1553 Bm-0.000364 -8324.8799 -18.4063 0.000001 463.0723 251.6943 Bcf0 BB465.2871 267.5879 m467.752 261.748 471.4082 257.2578 475.5938 254.9531 C475.5938 267.5879 L465.2871 267.5879 LBb1 (Unnamed gradient 34) 470.4404 323.1572 -90 71.4616 1 0 0 1 0 0 Bg-0.000003 -71.4616 -14.3066 0.000001 477.5938 323.1572 Xm-0.000364 -8325.8711 -14.3066 0.000001 477.5938 8649.0283 Bc-0.000003 -71.4616 -14.3066 0.000001 477.5938 323.1572 Bm-0.000364 -8325.8711 -14.3066 0.000001 477.5938 251.6953 Bcf0 BB492.0459 301.707 m502.292 301.707 L501.2051 303.3086 499.9678 304.8047 498.6006 306.1699 c494.5352 310.2363 489.3359 313.1465 483.5156 314.4023 C487.1074 311.3223 490.0322 306.9395 492.0459 301.707 CBb1 (Unnamed gradient 34) 492.9043 323.1572 -90 71.4617 1 0 0 1 0 0 Bg-0.000003 -71.4617 -22.7764 0.000001 504.292 323.1572 Xm-0.000367 -8395.1494 -22.7764 0.000001 504.292 8718.3066 Bc-0.000003 -71.4617 -22.7764 0.000001 504.292 323.1572 Bm-0.000367 -8395.1494 -22.7764 0.000001 504.292 251.6953 Bcf0 BB475.5938 298.7461 m464.1973 298.7461 L462.9395 294.9297 462.1738 290.6621 462.0449 286.125 C475.5938 286.125 L475.5938 298.7461 LBb1 (Unnamed gradient 34) 468.8193 323.1582 -90 71.4652 1 0 0 1 0 0 Bg-0.000003 -71.4652 -17.5488 0.000001 477.5938 323.1582 Xm-0.000365 -8355.4072 -17.5488 0.000001 477.5938 8678.5654 Bc-0.000003 -71.4652 -17.5488 0.000001 477.5938 323.1582 Bm-0.000365 -8355.4072 -17.5488 0.000001 477.5938 251.6934 Bcf0 BB475.5938 314.3242 m471.4131 312.0215 467.7578 307.5352 465.2939 301.707 C475.5938 301.707 L475.5938 314.3242 LBb1 (Unnamed gradient 34) 470.4434 323.1553 -90 71.4573 1 0 0 1 0 0 Bg-0.000003 -71.4573 -14.2998 0.000001 477.5938 323.1553 Xm-0.000366 -8372.6123 -14.2998 0.000001 477.5938 8695.7676 Bc-0.000003 -71.4573 -14.2998 0.000001 477.5938 323.1553 Bm-0.000366 -8372.6123 -14.2998 0.000001 477.5938 251.6982 Bcf0 BB478.5518 254.9531 m482.7363 257.2559 486.3945 261.7461 488.8594 267.5879 C478.5518 267.5879 L478.5518 254.9531 LBb1 (Unnamed gradient 34) 483.7051 323.1572 -90 71.4616 1 0 0 1 0 0 Bg-0.000003 -71.4616 -14.3076 0.000001 490.8594 323.1572 Xm-0.000365 -8339.1357 -14.3076 0.000001 490.8594 8662.293 Bc-0.000003 -71.4616 -14.3076 0.000001 490.8594 323.1572 Bm-0.000365 -8339.1357 -14.3076 0.000001 490.8594 251.6953 Bcf0 BB495.0596 286.125 m507.4795 286.125 L507.2617 290.668 506.0488 294.9414 504.0547 298.7461 C493.0703 298.7461 L494.2422 294.8574 494.9248 290.5938 495.0596 286.125 CBb1 (Unnamed gradient 34) 500.2754 323.1582 -90 71.4652 1 0 0 1 0 0 Bg-0.000003 -71.4652 -18.4092 0.000001 509.4795 323.1582 Xm-0.000367 -8386.8633 -18.4092 0.000001 509.4795 8710.0215 Bc-0.000003 -71.4652 -18.4092 0.000001 509.4795 323.1582 Bm-0.000367 -8386.8633 -18.4092 0.000001 509.4795 251.6934 Bcf0 BBU188.8623 314.6367 m188.8647 291.5645 L188.8555 287.1309 185.269 283.5488 180.8359 283.5391 C158.5313 283.5195 L148.7935 283.5156 140.9102 275.625 140.9048 265.8926 C140.9048 239.377 L143.8579 241.0566 147.1494 241.2852 150.5103 240.5957 C150.5103 265.8926 L150.5171 270.3184 154.104 273.9102 158.5313 273.918 C180.8359 273.9316 L190.5791 273.9375 198.4629 281.8281 198.4653 291.5645 C198.498 314.6367 L188.8623 314.6367 LBb1 (Unnamed gradient 32) 173.5889 438.54 -91.3995 204.9037 1 0 0 1 0 0 Bg-5.00441 -204.8426 -61.3655 1.49919 204.2729 437.7905 Xm-194.4415 -7958.957 -61.3655 1.49919 398.7148 8396.748 Bc-5.00441 -204.8426 -61.3655 1.49919 204.2729 437.7905 Bm-194.4415 -7958.957 -61.3655 1.49919 199.2686 232.9482 Bcf0 BB416.6514 436.9429 m421.0771 436.937 424.6699 433.3501 424.6758 428.9224 C424.6914 406.6172 L424.6963 396.875 432.5859 388.9902 442.3232 388.9883 C465.3965 388.9551 L465.3965 398.5918 L442.3232 398.5898 L437.8906 398.5996 434.3066 402.1855 434.2969 406.6172 C434.2783 428.9224 L434.2744 438.6606 426.3848 446.5425 416.6514 446.5493 C346.6045 446.5493 L346.6045 436.9429 L416.6514 436.9429 LBb1 (Unnamed gradient 34) 402.6006 650.9624 -89.1647 196.9019 1 0 0 1 0 0 Bg2.87053 -196.881 -122.2067 -1.78178 463.7031 651.8535 Xm118.232 -8109.1641 -122.2067 -1.78178 345.4707 8761.0176 Bc2.87053 -196.881 -122.2067 -1.78178 463.7031 651.8535 Bm118.232 -8109.1641 -122.2067 -1.78178 466.5732 454.9727 Bcf0 BBuu146.5566 593.4009 m146.5566 575.9634 L146.5601 566.2271 154.4434 558.3369 164.1865 558.332 C164.1865 558.332 L201.6602 558.332 L201.6602 558.3335 L201.6602 567.937 L164.1865 567.937 L159.7559 567.9458 156.167 571.5298 156.1577 575.9634 C156.1577 575.9634 L156.1621 593.4009 L146.5566 593.4009 L146.5566 593.4009 LBb1 (Unnamed gradient 32) 174.5728 651.3652 -90.3526 139.909 1 0 0 1 0 0 Bg-0.860959 -139.9063 -59.3172 0.365028 204.2314 651.1826 Xm-49.3989 -8027.3438 -59.3172 0.365028 253.6304 8678.5264 Bc-0.860959 -139.9063 -59.3172 0.365028 204.2314 651.1826 Bm-49.3989 -8027.3438 -59.3172 0.365028 203.3706 511.2764 Bcf0 BBUu138.502 617.1426 m105.2793 617.1426 L106.9751 614.2856 107.7446 610.9658 108.2979 607.5396 C138.502 607.5396 L142.9297 607.5332 146.5181 603.9438 146.5229 599.5142 C146.5264 582.0776 L156.126 582.0776 L156.1284 599.5142 L156.1235 609.248 148.2407 617.1392 138.502 617.1426 CBb1 (Unnamed gradient 32) 131.0229 651.6348 -90.3526 139.9118 1 0 0 1 0 0 Bg-0.860977 -139.9092 -55.0605 0.338832 158.5532 651.4653 Xm-49.2766 -8007.4824 -55.0605 0.338832 207.8301 8658.9473 Bc-0.860977 -139.9092 -55.0605 0.338832 158.5532 651.4653 Bm-49.2766 -8007.4824 -55.0605 0.338832 157.6924 511.5562 Bcf0 BBUu*u0 g183.2358 567.918 m183.2358 567.9224 L183.2358 567.918 L183.2358 567.918 Lf183.2358 567.918 m216.1865 567.918 L216.1865 567.918 L225.9248 567.9155 233.8081 560.0254 233.813 550.2925 C233.813 457.8091 L224.208 457.8091 L224.208 550.2925 L224.208 550.2925 L224.2021 554.7183 220.6143 558.3086 216.1865 558.3149 C183.2358 558.3149 L183.2358 567.918 L183.2358 567.918 LBb1 (Unnamed gradient 32) 209.3755 651.1519 -90.3526 139.9109 1 0 0 1 0 0 Bg-0.860971 -139.9083 -55.2529 0.340016 237.002 650.9819 Xm-49.4588 -8037.0894 -55.2529 0.340016 286.4609 8688.0713 Bc-0.860971 -139.9083 -55.2529 0.340016 237.002 650.9819 Bm-49.4588 -8037.0894 -55.2529 0.340016 236.1411 511.0737 Bcf0 BB*UUUuu364.3955 545.9126 m381.8623 545.9126 L391.6162 545.915 399.5195 553.8135 399.5244 563.5718 C399.5244 563.5718 L399.5244 601.1104 L399.5215 601.1104 L389.9023 601.1104 L389.9023 563.5718 L389.8936 559.1323 386.3037 555.5386 381.8623 555.5303 C381.8623 555.5303 L364.3955 555.5337 L364.3955 545.9126 L364.3955 545.9126 LBb1 (Unnamed gradient 34) 380.8359 650.6411 -89.1647 196.8984 1 0 0 1 0 0 Bg2.87048 -196.8775 -39.9254 -0.582115 400.7988 650.9321 Xm120.1586 -8241.3027 -39.9254 -0.582115 280.6401 8892.2344 Bc2.87048 -196.8775 -39.9254 -0.582115 400.7988 650.9321 Bm120.1586 -8241.3027 -39.9254 -0.582115 403.6689 454.0547 Bcf0 BBUu*u0 g340.6152 435.3579 m340.6113 435.3579 L340.6152 435.3579 L340.6152 435.3579 Lf340.6152 435.3579 m340.6152 537.8433 L340.6152 537.8433 L340.6162 547.5991 348.5215 555.4951 358.2715 555.5 C375.7383 555.4976 L375.7383 545.8813 L358.2715 545.8779 L358.2715 545.8779 L353.834 545.873 350.2383 542.2793 350.2314 537.8433 C350.2314 435.3579 L340.6152 435.3579 L340.6152 435.3579 LBb1 (Unnamed gradient 34) 355.918 650.2773 -89.1647 196.8977 1 0 0 1 0 0 Bg2.87047 -196.8768 -40.8711 -0.595903 376.3525 650.5752 Xm119.1392 -8171.3853 -40.8711 -0.595903 257.2134 8821.9609 Bc2.87047 -196.8768 -40.8711 -0.595903 376.3525 650.5752 Bm119.1392 -8171.3853 -40.8711 -0.595903 379.2227 453.6982 Bcf0 BB*UUu*u0 g389.9229 582.6548 m389.918 582.6548 L389.9229 582.6548 L389.9229 582.6548 Lf389.9229 582.6548 m389.9229 615.6611 L389.9229 615.6611 L389.9238 625.416 397.8281 633.313 407.5781 633.3179 C428.8584 633.3179 L428.8584 623.6958 L407.5781 623.6958 L407.5781 623.6958 L403.1436 623.689 399.5479 620.0952 399.54 615.6611 C399.54 582.6548 L389.9229 582.6548 L389.9229 582.6548 LBb1 (Unnamed gradient 34) 408.7607 651.0488 -89.1647 196.898 1 0 0 1 0 0 Bg2.87048 -196.8771 -43.6707 -0.63672 430.5967 651.3672 Xm121.0334 -8301.3047 -43.6707 -0.63672 309.5635 8952.6719 Bc2.87048 -196.8771 -43.6707 -0.63672 430.5967 651.3672 Bm121.0334 -8301.3047 -43.6707 -0.63672 433.4668 454.4902 Bcf0 BB*UUu*u0 g350.2441 456.7134 m350.25 456.7134 L350.2441 456.7134 L350.2441 456.7134 Lf350.2441 456.7134 m350.2441 423.707 L350.2441 423.707 L350.2432 413.9512 342.3389 406.0547 332.5898 406.0508 C319.7998 406.0508 L319.7998 415.6719 L332.5898 415.6719 L332.5898 415.6719 L337.0234 415.6777 340.6191 419.2715 340.627 423.707 C340.627 456.7134 L350.2441 456.7134 L350.2441 456.7134 LBb1 (Unnamed gradient 34) 331.8389 649.9302 -89.1647 196.9016 1 0 0 1 0 0 Bg2.87053 -196.8806 -35.1808 -0.512938 349.4297 650.1865 Xm117.3498 -8048.6597 -35.1808 -0.512938 232.0801 8698.8457 Bc2.87053 -196.8806 -35.1808 -0.512938 349.4297 650.1865 Bm117.3498 -8048.6597 -35.1808 -0.512938 352.2998 453.3057 Bcf0 BB*UUUuuu*u1 D0 g320.7109 462.5962 m203.5771 462.5962 L201.8057 462.5962 200.3696 461.1587 200.3696 459.3882 C200.3696 387.6309 L200.3696 385.8574 201.8057 384.4219 203.5771 384.4219 C320.7109 384.4219 L322.4834 384.4219 323.9199 385.8574 323.9199 387.6309 C323.9199 459.3882 L323.9199 461.1587 322.4834 462.5962 320.7109 462.5962 Cf0 D315.6621 392.0371 m208.6279 392.0371 L208.6279 454.8325 L315.6621 454.8325 L315.6621 392.0371 LBb1 (Unnamed gradient 34) 261.3276 456.5796 -88.5856 139.5213 1 0 0 1 0 0 Bg3.44391 -139.4788 -129.3322 -3.19338 325.9941 458.1763 Xm201.9087 -8177.3184 -129.3322 -3.19338 124.0854 8635.4941 Bc3.44391 -139.4788 -129.3322 -3.19338 325.9941 458.1763 Bm201.9087 -8177.3184 -129.3322 -3.19338 329.4385 318.6973 Bcf0 BB*UU1 Ap337.1221 331.4082 m186.8413 331.4082 l185.0693 331.4082 184.0898 332.7676 184.6533 334.4492 c199.1865 377.7871 l199.75 379.4668 201.6426 380.8262 203.415 380.8262 c320.5498 380.8262 l322.3203 380.8262 324.2139 379.4668 324.7754 377.7871 c339.3096 334.4492 l339.873 332.7676 338.8945 331.4082 337.1221 331.4082 cBb1 (Unnamed gradient 34) 258.9453 456.5181 -88.5856 139.5177 1 0 0 1 0 0 Bg3.44382 -139.4752 -159.6877 -3.9429 338.7695 458.4893 Xm199.8323 -8093.2246 -159.6877 -3.9429 138.937 8551.7139 Bc3.44382 -139.4752 -159.6877 -3.9429 338.7695 458.4893 Bm199.8323 -8093.2246 -159.6877 -3.9429 342.2129 319.0137 Bcf0 BBu0 Ap0 0 0 0 1 1 1 Xa206.5493 351.8555 m319.6201 351.8555 l319.9141 351.8555 320.0771 352.084 319.9834 352.3633 c319.1572 354.8281 l319.0635 355.1074 318.7471 355.334 318.4531 355.334 c207.7163 355.334 l207.4204 355.334 207.105 355.1074 207.0117 354.8281 c206.1846 352.3633 l206.0903 352.084 206.2544 351.8555 206.5493 351.8555 cf312.6816 372.541 m213.4858 372.541 l213.1909 372.541 212.8755 372.3145 212.7813 372.0352 c212.1265 370.082 l212.0332 369.8027 212.1963 369.5742 212.4912 369.5742 c313.6777 369.5742 l313.9717 369.5742 314.1348 369.8027 314.041 370.082 c313.3867 372.0352 l313.292 372.3145 312.9775 372.541 312.6816 372.541 cf208.5117 357.709 m317.6563 357.709 l317.9521 357.709 318.1152 357.9355 318.0205 358.2148 c317.168 360.7598 l317.0742 361.041 316.7578 361.2676 316.4619 361.2676 c209.7056 361.2676 l209.4106 361.2676 209.0952 361.041 209.001 360.7598 c208.147 358.2148 l208.0537 357.9355 208.2168 357.709 208.5117 357.709 cf210.9907 366.6953 m210.1362 364.1465 l210.0439 363.8672 210.207 363.6406 210.501 363.6406 c315.666 363.6406 l315.9629 363.6406 316.124 363.8672 316.0293 364.1465 c315.1777 366.6953 l315.083 366.9746 314.7686 367.2012 314.4727 367.2012 c211.6953 367.2012 l211.4009 367.2012 211.085 366.9746 210.9907 366.6953 cfU277.9048 338.9844 m252.7969 338.9844 l252.5024 338.9844 252.3384 339.2109 252.4326 339.4902 c255.4614 348.5215 l255.5547 348.8008 255.8706 349.0273 256.166 349.0273 c274.5347 349.0273 l274.8306 349.0273 275.146 348.8008 275.2402 348.5215 c278.2681 339.4902 l278.3623 339.2109 278.1997 338.9844 277.9048 338.9844 cfUUuu76.7324 333.1035 m75.9976 333.1035 75.3232 332.8594 74.7729 332.4551 C75.5728 332.1973 76.1597 331.457 76.1597 330.5703 c76.1597 329.4746 75.2725 328.5801 74.1714 328.5801 c73.9731 328.5801 73.7881 328.6172 73.6084 328.6719 C74.0659 327.3828 75.2861 326.4531 76.7324 326.4531 c78.5664 326.4531 80.0542 327.9434 80.0542 329.7793 c80.0542 331.6172 78.5664 333.1035 76.7324 333.1035 cBb1 (Unnamed gradient 34) 75.7295 346.4854 -86.3357 67.8523 1 0 0 1 0 0 Bg4.3365 -67.7136 -10.5989 -0.678772 81.084 346.8281 Xm509.584 -7957.0576 -10.5989 -0.678772 -428.5 8303.8857 Bc4.3365 -67.7136 -10.5989 -0.678772 81.084 346.8281 Bm509.584 -7957.0576 -10.5989 -0.678772 85.4204 279.1143 Bcf0 BBU66.4087 332.1738 m54.9487 334.3242 l61.5757 326.9805 l55.4844 320 l66.7637 321.252 l66.4087 332.1738 lBb1 (Unnamed gradient 34) 59.7056 345.46 -86.3357 67.8612 1 0 0 1 0 0 Bg4.33707 -67.7225 -15.6476 -1.0021 67.5298 345.9609 Xm508.7236 -7943.623 -15.6476 -1.0021 -441.1938 8289.584 Bc4.33707 -67.7225 -15.6476 -1.0021 67.5298 345.9609 Bm508.7236 -7943.623 -15.6476 -1.0021 71.8667 278.2383 Bcf0 BBuu*u1 D0 g82.4346 342.998 m42.3936 338.4375 71.9121 275.2852 108.7344 282.0762 c125.0039 285.0762 134.9478 297.3887 141.0483 311.6035 C109.5552 304.959 113.1416 346.4961 82.4346 342.998 cf0 D0 g76.7324 324.6582 m73.8989 324.6582 71.6079 326.9492 71.6079 329.7793 c71.6079 332.6094 73.8989 334.9082 76.7324 334.9082 c79.5601 334.9082 81.8521 332.6094 81.8521 329.7793 c81.8521 326.9492 79.5601 324.6582 76.7324 324.6582 cf104.9019 297.2598 m85.5811 295.0508 77.0151 317.2168 91.4414 319.4043 c103.6504 321.252 103.4697 303.168 120.1196 306.5703 C117.5869 302.6055 111.1689 297.9766 104.9019 297.2598 cBb1 (Unnamed gradient 34) 100.1655 348.0508 -86.3357 67.8635 1 0 0 1 0 0 Bg4.33721 -67.7247 -100.5323 -6.43827 140.5532 350.6377 Xm511.8482 -7992.4121 -100.5323 -6.43827 -371.2949 8343.0498 Bc4.33721 -67.7247 -100.5323 -6.43827 140.5532 350.6377 Bm511.8482 -7992.4121 -100.5323 -6.43827 144.8906 282.9131 Bcf0 BB*UUU93.4365 295.7305 m93.4365 268.1719 L93.4365 266.9473 94.4307 265.9551 95.6509 265.9551 c96.8755 265.9551 97.8638 266.9473 97.8638 268.1719 C97.8638 295.7305 L93.4365 295.7305 LBb1 (Unnamed gradient 34) 91.4502 347.4971 -86.3357 67.8689 1 0 0 1 0 0 Bg4.33756 -67.7301 -10.2364 -0.655554 96.5317 347.8223 Xm508.1336 -7934.4092 -10.2364 -0.655554 -411.6021 8282.2314 Bc4.33756 -67.7301 -10.2364 -0.655554 96.5317 347.8223 Bm508.1336 -7934.4092 -10.2364 -0.655554 100.8691 280.0918 Bcf0 BB103.4043 295.7305 m103.4043 268.1719 L103.4043 266.9473 104.3989 265.9551 105.623 265.9551 c106.8442 265.9551 107.8364 266.9473 107.8364 268.1719 C107.8364 295.7305 L103.4043 295.7305 LBb1 (Unnamed gradient 34) 101.3804 348.1299 -86.3357 67.8651 1 0 0 1 0 0 Bg4.33731 -67.7263 -10.2417 -0.655897 106.4639 348.4551 Xm508.7277 -7943.6865 -10.2417 -0.655897 -402.2637 8292.1416 Bc4.33731 -67.7263 -10.2417 -0.655897 106.4639 348.4551 Bm508.7277 -7943.6865 -10.2417 -0.655897 110.8013 280.7285 Bcf0 BBUu55.5977 390.4609 m69.604 403.6953 L73.7793 399.0762 L59.8711 385.9355 L58.8008 384.9238 57.1143 384.9707 56.1021 386.043 C55.4912 386.6914 L54.479 387.7598 54.5273 389.4492 55.5977 390.4609 CBb1 (Unnamed gradient 32) 64.9209 426.3418 -91.1459 50.0518 1 0 0 1 0 0 Bg-1.00093 -50.0418 -23.0652 0.461347 76.3198 426.1138 Xm-159.0504 -7951.7827 -23.0652 0.461347 235.3701 8377.8965 Bc-1.00093 -50.0418 -23.0652 0.461347 76.3198 426.1138 Bm-159.0504 -7951.7827 -23.0652 0.461347 75.3188 376.0723 Bcf0 BBu*u1 D0 g65.478 411.1348 m65.478 401.1367 73.5845 393.0293 83.5864 393.0293 c93.585 393.0293 101.6934 401.1367 101.6934 411.1348 c101.6934 421.1367 93.585 429.2437 83.5864 429.2437 c73.5845 429.2437 65.478 421.1367 65.478 411.1348 cf0 D68.5161 411.1348 m68.5161 419.457 75.2642 426.2046 83.5864 426.2046 c91.9072 426.2046 98.6533 419.457 98.6533 411.1348 c98.6533 402.8145 91.9072 396.0703 83.5864 396.0703 c75.2642 396.0703 68.5161 402.8145 68.5161 411.1348 cBb1 (Unnamed gradient 32) 83.8828 425.9639 -91.1459 50.054 1 0 0 1 0 0 Bg-1.00097 -50.044 -40.6003 0.812081 104.1826 425.5576 Xm-159.95 -7996.7573 -40.6003 0.812081 264.1328 8422.3145 Bc-1.00097 -50.044 -40.6003 0.812081 104.1826 425.5576 Bm-159.95 -7996.7573 -40.6003 0.812081 103.1816 375.5137 Bcf0 BB*UUu1 Ap80.7861 401.3125 m80.7861 400.0273 81.8267 398.9863 83.1118 398.9863 C84.0601 398.9863 L85.3442 398.9863 86.3828 400.0273 86.3828 401.3125 C86.3828 420.9629 L86.3828 422.2461 85.3442 423.2871 84.0601 423.2871 C83.1118 423.2871 L81.8267 423.2871 80.7861 422.2461 80.7861 420.9629 C80.7861 401.3125 LBb1 (Unnamed gradient 32) 83.8818 425.9639 -91.1459 50.0534 1 0 0 1 0 0 Bg-1.00096 -50.0434 -10.038 0.200779 88.8999 425.8633 Xm-159.8276 -7990.6362 -10.038 0.200779 248.7275 8416.5 Bc-1.00096 -50.0434 -10.038 0.200779 88.8999 425.8633 Bm-159.8276 -7990.6362 -10.038 0.200779 87.8989 375.8203 Bcf0 BB93.4106 408.3359 m94.6934 408.3359 95.7358 409.377 95.7358 410.6621 C95.7358 411.6094 L95.7358 412.8945 94.6934 413.9375 93.4106 413.9375 C73.7588 413.9375 L72.4756 413.9375 71.437 412.8945 71.437 411.6094 C71.437 410.6621 L71.437 409.377 72.4756 408.3359 73.7588 408.3359 C93.4106 408.3359 LBb1 (Unnamed gradient 32) 83.8838 425.9697 -91.1459 50.0724 1 0 0 1 0 0 Bg-1.00134 -50.0623 -28.3586 0.567224 98.062 425.686 Xm-159.6443 -7981.4741 -28.3586 0.567224 257.7065 8407.1602 Bc-1.00134 -50.0623 -28.3586 0.567224 98.062 425.686 Bm-159.6443 -7981.4741 -28.3586 0.567224 97.0605 375.624 Bcf0 BBUUu0 Ap227.9829 224.4355 m215.2651 224.4355 L213.8677 224.4355 212.731 225.5879 212.731 227 c212.731 228.459 213.8677 229.6094 215.2651 229.6094 C227.9829 229.6094 L229.3804 229.6094 230.519 228.459 230.519 227.043 c230.519 225.5879 229.3804 224.4355 227.9829 224.4355 C227.9829 224.4355 LBb1 (Unnamed gradient 34) 221.3438 239.8232 -88.7411 30.3808 1 0 0 1 0 0 Bg0.667481 -30.3735 -21.8414 -0.479982 232.2642 240.0635 Xm178.4508 -8120.3359 -21.8414 -0.479982 53.8135 8360.3994 Bc0.667481 -30.3735 -21.8414 -0.479982 232.2642 240.0635 Bm178.4508 -8120.3359 -21.8414 -0.479982 232.9316 209.6904 Bcf0 BB229.2798 218.0762 m213.4507 218.0762 L212.0552 218.0762 210.9185 219.2266 210.9185 220.6426 c210.9185 222.0977 212.0552 223.25 213.4507 223.25 C229.2798 223.25 L230.6787 223.25 231.8154 222.0977 231.8154 220.6816 c231.8154 219.2266 230.6787 218.0762 229.2798 218.0762 C229.2798 218.0762 LBb1 (Unnamed gradient 34) 220.9458 239.8115 -88.7411 30.372 1 0 0 1 0 0 Bg0.667288 -30.3647 -24.9491 -0.548275 233.4209 240.0859 Xm178.3033 -8113.6245 -24.9491 -0.548275 55.1177 8353.7109 Bc0.667288 -30.3647 -24.9491 -0.548275 233.4209 240.0859 Bm178.3033 -8113.6245 -24.9491 -0.548275 234.0884 209.7217 Bcf0 BB227.9829 211.7148 m215.2651 211.7148 L213.8677 211.7148 212.731 212.8672 212.731 214.2813 c212.731 215.7383 213.8677 216.8887 215.2651 216.8887 C227.9829 216.8887 L229.3804 216.8887 230.519 215.7383 230.519 214.3223 c230.519 212.8672 229.3804 211.7148 227.9829 211.7148 C227.9829 211.7148 LBb1 (Unnamed gradient 34) 221.064 239.8174 -88.7411 30.3761 1 0 0 1 0 0 Bg0.667378 -30.3688 -21.8414 -0.479982 231.9854 240.0576 Xm178.1653 -8107.3418 -21.8414 -0.479982 53.8203 8347.3994 Bc0.667378 -30.3688 -21.8414 -0.479982 231.9854 240.0576 Bm178.1653 -8107.3418 -21.8414 -0.479982 232.6528 209.6885 Bcf0 BB225.0049 205.3555 m217.3403 205.3555 L215.9414 205.3555 214.8042 206.5039 214.8042 207.9219 c214.8042 209.377 215.9414 210.5273 217.3403 210.5273 C225.0049 210.5273 L226.4023 210.5273 227.5391 209.377 227.5391 207.9609 c227.5391 206.5039 226.4023 205.3555 225.0049 205.3555 C225.0049 205.3555 LBb1 (Unnamed gradient 34) 220.4712 239.7969 -88.7411 30.3673 1 0 0 1 0 0 Bg0.667184 -30.3599 -16.7914 -0.369003 228.8677 239.9814 Xm178.0116 -8100.3525 -16.7914 -0.369003 50.856 8340.334 Bc0.667184 -30.3599 -16.7914 -0.369003 228.8677 239.9814 Bm178.0116 -8100.3525 -16.7914 -0.369003 229.5347 209.6211 Bcf0 BBu212.6201 230.2109 m213.2925 230.7871 214.1484 231.1426 215.082 231.1875 c216.2773 234.2383 216.2559 237.6758 214.4497 240.1641 c213 242.1621 211.0576 240.7422 210.2642 238.4023 c209.1055 234.9902 206.2485 232.8242 203.3223 230.9785 c202.771 230.6309 202.2598 230.2813 201.8022 229.918 c200.4404 228.8301 199.5928 227.5996 199.5962 225.8281 C192.2544 225.8281 l191.7158 225.8281 191.2754 225.3789 191.2754 224.8262 C191.2754 207.8613 l191.2754 207.3086 191.7158 206.8594 192.2544 206.8594 C200.21 206.8594 l200.6338 205.6094 201.8042 204.7051 203.1982 204.7051 C214.7388 204.7051 l213.8125 205.4668 213.2202 206.623 213.2202 207.918 c213.2202 208.8203 213.5029 209.6543 213.9805 210.3398 c212.3374 210.8867 211.147 212.4434 211.147 214.2793 c211.147 215.2168 211.4546 216.0781 211.9644 216.7773 c210.4287 217.3809 209.3359 218.8828 209.3359 220.6426 c209.3359 222.416 210.4253 223.9316 211.9556 224.541 c211.5605 225.084 211.2915 225.7207 211.1924 226.4141 c211.1655 226.6074 211.147 226.8027 211.147 227.002 c211.147 228.2891 211.7202 229.4414 212.6201 230.2109 CBb1 (Unnamed gradient 34) 203.1997 239.417 -88.7411 30.3666 1 0 0 1 0 0 Bg0.667169 -30.3593 -29.6344 -0.65124 218.2109 239.7471 Xm178.3285 -8114.7705 -29.6344 -0.65124 39.8823 8354.5176 Bc0.667169 -30.3593 -29.6344 -0.65124 218.2109 239.7471 Bm178.3285 -8114.7705 -29.6344 -0.65124 218.8779 209.3877 Bcf0 BBUU274.3359 473.0142 m267.0137 476.7651 l265.8149 477.3843 263.8789 477.3628 262.689 476.7222 c255.4463 472.8198 l254.2583 472.1802 253.4712 472.7407 253.6851 474.0718 c254.9922 482.1968 l255.2061 483.5269 254.5894 485.3643 253.6138 486.2954 c247.6631 491.978 l246.687 492.9072 246.9771 493.8325 248.3105 494.0386 c256.4404 495.3052 l257.7734 495.5142 259.3267 496.6709 259.9106 497.8862 c263.478 505.3013 l264.061 506.5181 265.0322 506.5273 265.6372 505.3237 c269.3589 497.9834 l269.9648 496.7788 271.543 495.6567 272.8794 495.4771 c281.0366 494.3784 l282.3735 494.1953 282.6821 493.2793 281.7251 492.3267 c275.8926 486.5254 l274.938 485.5703 274.3564 483.7236 274.5996 482.397 c276.0723 474.3032 l276.3145 472.9722 275.5376 472.396 274.3359 473.0142 cBb1 (Unnamed gradient 34) 266.4404 507.7505 -96.8924 39.4599 1 0 0 1 0 0 Bg-4.73541 -39.1748 -39.4036 4.76307 286.1572 505.3672 Xm-981.1721 -8116.9707 -39.4036 4.76307 1267.3291 8622.3379 Bc-4.73541 -39.1748 -39.4036 4.76307 286.1572 505.3672 Bm-981.1721 -8116.9707 -39.4036 4.76307 281.4219 466.1924 Bcf0 BBuu*u1 D0 g456.4033 583.5684 m415.4941 583.5684 L412.6113 583.5684 410.2656 581.2246 410.2656 578.3403 C410.2656 553.6309 L410.2656 550.7485 412.6113 548.4028 415.4941 548.4028 C456.4033 548.4028 L459.2842 548.4028 461.6299 550.7485 461.6299 553.6309 C461.6299 578.3403 L461.6299 581.2246 459.2842 583.5684 456.4033 583.5684 Cf0 D458.4131 553.6309 m458.4131 552.521 457.5137 551.6216 456.4033 551.6216 C415.4951 551.6216 L414.3838 551.6216 413.4824 552.521 413.4824 553.6309 C413.4824 578.3403 L413.4824 579.4521 414.3838 580.3516 415.4951 580.3516 C456.4033 580.3516 L457.5137 580.3516 458.4131 579.4521 458.4131 578.3403 C458.4131 553.6309 LBb1 (Unnamed gradient 32) 435.5684 584.9116 -88.8542 43.058 1 0 0 1 0 0 Bg0.860988 -43.0494 -55.9527 -1.11905 463.5459 585.4712 Xm166.8802 -8344.0156 -55.9527 -1.11905 296.666 8929.4863 Bc0.860988 -43.0494 -55.9527 -1.11905 463.5459 585.4712 Bm166.8802 -8344.0156 -55.9527 -1.11905 464.4072 542.4219 Bcf0 BB*UUu455.7715 581.6396 m438.6582 565.1567 L437.2129 563.8818 434.8701 563.8818 433.4248 565.1567 C416.3105 581.6396 L414.6211 580.2808 L414.6611 580.2441 412.7773 579.9297 411.1514 581.5337 C431.082 562.5635 L432.4277 561.3799 434.1885 560.7256 436.04 560.7256 c437.8945 560.7256 439.6553 561.3799 441.002 562.5654 C460.9287 581.5337 L459.4844 580.1636 458.8691 581.1841 458.9092 581.2178 C455.7715 581.6396 LBb1 (Unnamed gradient 32) 435.9717 584.9194 -88.8542 43.0591 1 0 0 1 0 0 Bg0.861009 -43.0505 -53.7568 -1.07514 462.8506 585.457 Xm166.8482 -8342.417 -53.7568 -1.07514 296.002 8927.874 Bc0.861009 -43.0505 -53.7568 -1.07514 462.8506 585.457 Bm166.8482 -8342.417 -53.7568 -1.07514 463.7119 542.4067 Bcf0 BBUu413.1904 550.3369 m413.1543 550.3047 413.124 550.2729 413.0889 550.2393 C417.873 550.2393 L431.583 562.4829 L429.1094 564.5547 L413.1904 550.3369 LBb1 (Unnamed gradient 32) 421.7705 584.6387 -88.8542 43.0614 1 0 0 1 0 0 Bg0.861056 -43.0528 -22.7303 -0.454606 433.1357 584.8662 Xm166.2175 -8310.8818 -22.7303 -0.454606 266.9185 8895.748 Bc0.861056 -43.0528 -22.7303 -0.454606 433.1357 584.8662 Bm166.2175 -8310.8818 -22.7303 -0.454606 433.9971 541.8135 Bcf0 BB458.4834 550.2393 m458.4473 550.2729 458.417 550.3047 458.3799 550.3369 C441.6846 565.2456 L439.4229 562.9839 L453.6963 550.2393 L458.4834 550.2393 LBb1 (Unnamed gradient 32) 448.3818 585.167 -88.8542 43.0556 1 0 0 1 0 0 Bg0.86094 -43.047 -22.7967 -0.455934 459.7803 585.395 Xm166.7584 -8337.9307 -22.7967 -0.455934 293.0215 8923.3262 Bc0.86094 -43.047 -22.7967 -0.455934 459.7803 585.395 Bm166.7584 -8337.9307 -22.7967 -0.455934 460.6416 542.3481 Bcf0 BBUUu321.1025 306.6113 m319.9463 306.6797 319.0029 305.7324 319.0029 304.5723 C319.0029 301.8926 L319.0029 300.7305 319.9463 299.7988 321.1025 299.7148 c335.3535 298.6816 346.7725 287.1973 347.7939 272.8672 c347.876 271.709 348.8096 270.7676 349.9678 270.7676 C352.6504 270.7676 L353.8096 270.7676 354.7588 271.709 354.6895 272.8672 c353.6436 290.9941 339.1504 305.5566 321.1025 306.6113 cBb1 (Unnamed gradient 34) 335.4824 301.1191 -84.29 40.2334 1 0 0 1 0 0 Bg4.00295 -40.0338 -37.3139 -3.731 354.4521 303.0156 Xm821.1742 -8212.6084 -37.3139 -3.731 -466.7222 8515.624 Bc4.00295 -40.0338 -37.3139 -3.731 354.4521 303.0156 Bm821.1742 -8212.6084 -37.3139 -3.731 358.4551 262.9814 Bcf0 BB323.7539 280.3418 m321.123 280.3418 318.9873 278.207 318.9873 275.5742 c318.9873 272.9434 321.123 270.8086 323.7539 270.8086 c326.3887 270.8086 328.5205 272.9434 328.5205 275.5742 c328.5205 278.207 326.3887 280.3418 323.7539 280.3418 cBb1 (Unnamed gradient 34) 321.3408 299.708 -84.29 40.2399 1 0 0 1 0 0 Bg4.0036 -40.0403 -13.9407 -1.39393 328.3105 300.4053 Xm817.1477 -8172.3398 -13.9407 -1.39393 -488.8369 8472.7451 Bc4.0036 -40.0403 -13.9407 -1.39393 328.3105 300.4053 Bm817.1477 -8172.3398 -13.9407 -1.39393 332.3145 260.3652 Bcf0 BB321.0918 294.3809 m319.9365 294.4824 318.9941 293.5332 318.9941 292.373 C318.9941 289.6914 L318.9941 288.5332 319.9375 287.6055 321.0898 287.4609 c324.7617 287.0039 328.1563 285.3457 330.8135 282.6758 c333.4766 279.998 335.1328 276.5762 335.585 272.8691 c335.7275 271.7188 336.6543 270.7754 337.8135 270.7754 C340.4941 270.7754 L341.6553 270.7754 342.6055 271.7168 342.5029 272.873 c341.502 284.2676 332.4385 293.373 321.0918 294.3809 cBb1 (Unnamed gradient 34) 328.8271 300.4541 -84.29 40.2345 1 0 0 1 0 0 Bg4.00306 -40.0349 -25.8433 -2.58406 341.7646 301.748 Xm819.3045 -8193.9102 -25.8433 -2.58406 -477.54 8495.6582 Bc4.00306 -40.0349 -25.8433 -2.58406 341.7646 301.748 Bm819.3045 -8193.9102 -25.8433 -2.58406 345.7676 261.7129 Bcf0 BBUu185.4556 551.0547 m184.4111 551.1172 183.5586 550.2612 183.5586 549.2134 C183.5586 546.7905 L183.5586 545.7427 184.4111 544.9009 185.4556 544.8252 c198.3315 543.8901 208.6499 533.5142 209.5728 520.5664 c209.647 519.5215 210.4902 518.6689 211.5381 518.6689 C213.9604 518.6689 L215.0078 518.6689 215.8647 519.52 215.8032 520.5664 c214.8584 536.9443 201.7617 550.103 185.4556 551.0547 cBb1 (Unnamed gradient 34) 198.2695 560.0591 -86.9413 56.4746 1 0 0 1 0 0 Bg3.01343 -56.3941 -34.8112 -1.86014 215.6519 560.9878 Xm432.2658 -8089.5391 -34.8112 -1.86014 -216.6138 8650.5273 Bc3.01343 -56.3941 -34.8112 -1.86014 215.6519 560.9878 Bm432.2658 -8089.5391 -34.8112 -1.86014 218.6655 504.5938 Bcf0 BB187.8516 527.3208 m185.4741 527.3208 183.5454 525.3921 183.5454 523.0127 c183.5454 520.6348 185.4741 518.7065 187.8516 518.7065 c190.2314 518.7065 192.1582 520.6348 192.1582 523.0127 c192.1582 525.3921 190.2314 527.3208 187.8516 527.3208 cBb1 (Unnamed gradient 34) 185.9072 559.4004 -86.9413 56.4763 1 0 0 1 0 0 Bg3.01352 -56.3959 -12.8362 -0.685903 192.3257 559.7432 Xm430.335 -8053.4067 -12.8362 -0.685903 -238.0093 8613.1504 Bc3.01352 -56.3959 -12.8362 -0.685903 192.3257 559.7432 Bm430.335 -8053.4067 -12.8362 -0.685903 195.3394 503.3472 Bcf0 BB185.4453 540.0049 m184.4014 540.0967 183.5503 539.2397 183.5503 538.1904 C183.5503 535.7676 L183.5503 534.7207 184.4028 533.8843 185.4438 533.7544 c188.7622 533.3408 191.8296 531.8398 194.23 529.4297 c196.6362 527.0112 198.1328 523.917 198.5425 520.5693 c198.6694 519.5298 199.5068 518.6772 200.5547 518.6772 C202.9771 518.6772 L204.0254 518.6772 204.8848 519.5283 204.792 520.5728 c203.8882 530.8672 195.6987 539.0938 185.4453 540.0049 cBb1 (Unnamed gradient 34) 192.4824 559.7495 -86.9413 56.4733 1 0 0 1 0 0 Bg3.01336 -56.3928 -24.4588 -1.30696 204.7031 560.4023 Xm431.3698 -8072.7725 -24.4588 -1.30696 -226.6665 8633.1748 Bc3.01336 -56.3928 -24.4588 -1.30696 204.7031 560.4023 Bm431.3698 -8072.7725 -24.4588 -1.30696 207.7163 504.0098 Bcf0 BBUuuuu*u1 D0 g470.9805 511.7046 m457.5186 511.7046 446.6055 500.7925 446.6055 487.3281 c446.6055 476.7251 453.3809 467.7065 462.835 464.353 C469.4434 445.8657 L470.1924 443.7729 471.4668 443.7505 472.291 445.8149 C479.7842 464.6001 L488.8906 468.1284 495.3555 476.9736 495.3555 487.3281 c495.3555 500.7925 484.4414 511.7046 470.9805 511.7046 cf0 D478.1211 468.894 m476.249 468.1685 L475.5059 466.3062 L471.0361 455.0991 L467.1738 465.9048 L466.4365 467.9634 L464.374 468.6948 L456.502 471.4849 451.2148 478.9741 451.2148 487.3281 c451.2148 498.229 460.0791 507.0952 470.9805 507.0952 c481.8809 507.0952 490.75 498.229 490.75 487.3281 c490.75 479.1025 485.792 471.8657 478.1211 468.894 CBb1 (Unnamed gradient 32) 468.1094 515.729 -84.2257 77.0189 1 0 0 1 0 0 Bg7.74891 -76.6281 -54.6447 -5.52587 495.5742 518.5063 Xm842.7311 -8333.6699 -54.6447 -5.52587 -347.1567 8852.1758 Bc7.74891 -76.6281 -54.6447 -5.52587 495.5742 518.5063 Bm842.7311 -8333.6699 -54.6447 -5.52587 503.3232 441.8784 Bcf0 BB*UUUU1 Ap480.9297 486.6978 m480.9297 481.2036 476.4766 476.7505 470.9805 476.7505 c465.4873 476.7505 461.0322 481.2036 461.0322 486.6978 c461.0322 492.1924 465.4873 496.646 470.9805 496.646 c476.4766 496.646 480.9297 492.1924 480.9297 486.6978 cBb1 (Unnamed gradient 34) 468.0459 515.7207 -84.2257 77.0139 1 0 0 1 0 0 Bg7.74841 -76.6231 -24.775 -2.50534 480.4336 516.9736 Xm841.1367 -8317.9043 -24.775 -2.50534 -360.7031 8834.8779 Bc7.74841 -76.6231 -24.775 -2.50534 480.4336 516.9736 Bm841.1367 -8317.9043 -24.775 -2.50534 488.1816 440.3506 Bcf0 BBUuu378.5498 460.7817 m378.5498 460.0083 377.9238 459.3804 377.1504 459.3804 C371.0547 459.3804 L370.2803 459.3804 369.6543 460.0083 369.6543 460.7817 C369.6543 477.2544 L369.6543 478.0308 370.2803 478.6577 371.0547 478.6577 C377.1504 478.6577 L377.9238 478.6577 378.5498 478.0308 378.5498 477.2544 C378.5498 460.7817 LBb1 (Unnamed gradient 32) 372.9824 508.749 -88.3865 61.156 1 0 0 1 0 0 Bg1.72202 -61.1317 -13.3946 -0.377313 379.6797 508.9375 Xm232.4146 -8250.707 -13.3946 -0.377313 147.2651 8759.6445 Bc1.72202 -61.1317 -13.3946 -0.377313 379.6797 508.9375 Bm232.4146 -8250.707 -13.3946 -0.377313 381.4014 447.8057 Bcf0 BB389.7793 460.7817 m389.7793 460.0083 389.1504 459.3804 388.377 459.3804 C382.2813 459.3804 L381.5078 459.3804 380.8809 460.0083 380.8809 460.7817 C380.8809 482.8315 L380.8809 483.6069 381.5078 484.2334 382.2813 484.2334 C388.377 484.2334 L389.1504 484.2334 389.7793 483.6069 389.7793 482.8315 C389.7793 460.7817 LBb1 (Unnamed gradient 32) 384.2803 509.0664 -88.3865 61.1541 1 0 0 1 0 0 Bg1.72197 -61.1299 -13.5537 -0.381795 391.0576 509.2573 Xm232.8807 -8267.2568 -13.5537 -0.381795 158.1768 8776.5137 Bc1.72197 -61.1299 -13.5537 -0.381795 391.0576 509.2573 Bm232.8807 -8267.2568 -13.5537 -0.381795 392.7793 448.1274 Bcf0 BB413.0146 460.7817 m413.0146 460.0083 412.3848 459.3804 411.6133 459.3804 C405.5156 459.3804 L404.7432 459.3804 404.1152 460.0083 404.1152 460.7817 C404.1152 477.7471 L404.1152 478.519 404.7432 479.147 405.5156 479.147 C411.6133 479.147 L412.3848 479.147 413.0146 478.519 413.0146 477.7471 C413.0146 460.7817 LBb1 (Unnamed gradient 32) 407.4248 509.7163 -88.3865 61.1501 1 0 0 1 0 0 Bg1.72186 -61.1258 -13.4122 -0.377808 414.1309 509.9053 Xm233.3709 -8284.6572 -13.4122 -0.377808 180.7598 8794.5625 Bc1.72186 -61.1258 -13.4122 -0.377808 414.1309 509.9053 Bm233.3709 -8284.6572 -13.4122 -0.377808 415.8525 448.7793 Bcf0 BB401.0039 460.7817 m401.0039 460.0083 400.3789 459.3804 399.6035 459.3804 C393.5078 459.3804 L392.7354 459.3804 392.1084 460.0083 392.1084 460.7817 C392.1084 492.0107 L392.1084 492.7832 392.7354 493.4106 393.5078 493.4106 C399.6035 493.4106 L400.3789 493.4106 401.0039 492.7832 401.0039 492.0107 C401.0039 460.7817 LBb1 (Unnamed gradient 32) 395.626 509.3867 -88.3865 61.1555 1 0 0 1 0 0 Bg1.72201 -61.1313 -13.809 -0.388986 402.5303 509.5811 Xm233.4496 -8287.4502 -13.809 -0.388986 169.0806 8797.0313 Bc1.72201 -61.1313 -13.809 -0.388986 402.5303 509.5811 Bm233.4496 -8287.4502 -13.809 -0.388986 404.252 448.4497 Bcf0 BBUu0 Ap358.1504 474.3433 m357.3096 475.2388 357.3516 476.6479 358.2471 477.4897 C358.2471 477.4897 L377.7686 495.8438 L382.9258 492.5884 L399.6621 508.8174 L400.5449 509.6733 401.9531 509.6499 402.8086 508.77 C402.8086 508.77 L403.6641 507.8872 403.6406 506.479 402.7607 505.6216 C402.7607 505.6216 L383.5107 486.9556 L378.3057 490.2417 L361.2939 474.2456 L361.2969 474.2456 L360.8662 473.8423 360.3184 473.6421 359.7725 473.6421 C359.7725 473.6421 L359.1816 473.6421 358.5898 473.8774 358.1504 474.3433 C358.1504 474.3433 LBb1 (Unnamed gradient 34) 380 508.9458 -88.3865 61.1536 1 0 0 1 0 0 Bg1.72195 -61.1293 -51.2351 -1.44324 405.6143 509.6675 Xm233.4612 -8287.8604 -51.2351 -1.44324 172.1533 8797.5273 Bc1.72195 -61.1293 -51.2351 -1.44324 405.6143 509.6675 Bm233.4612 -8287.8604 -51.2351 -1.44324 407.3359 448.5381 Bcf0 BBUu400.2021 497.1328 m399.2178 497.5068 398.7236 498.6094 399.0986 499.5938 C399.0986 499.5938 L402.4004 508.2651 L393.0234 505.0649 L392.0244 504.7227 390.9434 505.2549 390.6006 506.252 C390.6006 506.252 L390.2607 507.25 390.7939 508.334 391.7891 508.6743 C391.7891 508.6743 L405.0068 513.188 L405.709 513.4272 406.4805 513.2417 406.9971 512.7085 C406.9971 512.7085 L407.5117 512.1753 407.6719 511.3979 407.4063 510.7041 C407.4063 510.7041 L402.665 498.2368 L402.375 497.4751 401.6504 497.0073 400.8828 497.0073 C400.8828 497.0073 L400.6543 497.0073 400.4277 497.0459 400.2021 497.1328 C400.2021 497.1328 LBb1 (Unnamed gradient 34) 399.0049 509.481 -88.3865 61.1555 1 0 0 1 0 0 Bg1.72201 -61.1313 -21.5125 -0.605986 409.7188 509.7827 Xm234.0979 -8310.4648 -21.5125 -0.605986 175.6211 8820.248 Bc1.72201 -61.1313 -21.5125 -0.605986 409.7188 509.7827 Bm234.0979 -8310.4648 -21.5125 -0.605986 411.4404 448.6514 Bcf0 BBU1 Ap413.4619 453.8267 m413.4619 453.5464 413.248 453.3208 412.9844 453.3208 C369.6455 453.3208 L369.3838 453.3208 369.1689 453.5464 369.1689 453.8267 C369.1689 456.7886 L369.1689 457.0669 369.3838 457.2925 369.6455 457.2925 C412.9844 457.2925 L413.248 457.2925 413.4619 457.0669 413.4619 456.7886 C413.4619 453.8267 LBb1 (Unnamed gradient 32) 389.7959 509.2217 -88.3865 61.1542 1 0 0 1 0 0 Bg1.72197 -61.1299 -48.3553 -1.36212 413.9736 509.9028 Xm232.2874 -8246.1914 -48.3553 -1.36212 181.6865 8756.0938 Bc1.72197 -61.1299 -48.3553 -1.36212 413.9736 509.9028 Bm232.2874 -8246.1914 -48.3553 -1.36212 415.6953 448.7729 Bcf0 BBUuu0 Ap367.2275 606.9956 m367.0479 606.9956 366.875 606.9805 366.6982 606.9712 c366.0068 610.374 362.998 612.9351 359.3936 612.9351 c356.1924 612.9351 353.4688 610.9121 352.416 608.0762 c351.3945 608.4341 350.3037 608.6377 349.1621 608.6377 c343.7188 608.6377 339.3047 604.2271 339.3047 598.7847 C339.3184 598.5313 L376.7568 598.5313 l376.1924 603.2988 372.1426 606.9956 367.2275 606.9956 CBb1 (Unnamed gradient 32) 357.3486 642.8628 -89.1152 111.5121 1 0 0 1 0 0 Bg1.72201 -111.4988 -41.4394 -0.639996 378.0674 643.1826 Xm127.2206 -8237.4609 -41.4394 -0.639996 250.8467 8880.6436 Bc1.72201 -111.4988 -41.4394 -0.639996 378.0674 643.1826 Bm127.2206 -8237.4609 -41.4394 -0.639996 379.7891 531.6836 Bcf0 BBUu346.8164 604.0493 m343.79 604.0493 341.0566 602.791 339.1084 600.772 c336.9316 603.8647 333.4521 605.876 329.5176 605.876 c328.4785 605.876 327.4795 605.7227 326.5195 605.4595 c324.8887 609.916 320.1748 613.1396 314.6104 613.1396 c308.832 613.1396 303.9795 609.6592 302.5352 604.9316 c302.2188 604.9561 301.9004 604.9805 301.5762 604.9805 c294.3672 604.9805 288.5254 599.1367 288.5254 591.9268 c288.5254 591.7495 288.5439 591.5771 288.5508 591.4023 C357.3721 591.4023 l357.4814 592.0234 357.5518 592.6611 357.5518 593.3169 c357.5518 599.2446 352.7422 604.0493 346.8164 604.0493 CBb1 (Unnamed gradient 34) 323.4502 611.9541 -91.2189 40.476 1 0 0 1 0 0 Bg-0.860992 -40.4668 -73.1319 1.55599 359.9473 611.1777 Xm-175.1844 -8233.7031 -73.1319 1.55599 535.1318 8844.8809 Bc-0.860992 -40.4668 -73.1319 1.55599 359.9473 611.1777 Bm-175.1844 -8233.7031 -73.1319 1.55599 359.0859 570.7109 Bcf0 BBUu341.8369 628.8188 m340.7568 628.8188 339.7285 628.6035 338.7871 628.2202 c336.8516 631.4976 333.1641 633.7139 328.9307 633.7139 c326.7549 633.7139 324.7285 633.1187 323.0049 632.1055 c321.0225 634.3403 318.1348 635.7568 314.915 635.7568 c309.5898 635.7568 305.1787 631.9097 304.2764 626.8442 c303.8906 626.8906 303.498 626.9233 303.0996 626.9233 c297.9883 626.9233 293.7871 623.0308 293.2969 618.0464 C349.4814 618.0464 l349.7744 618.8828 349.9414 619.7783 349.9414 620.7168 c349.9414 625.1914 346.3125 628.8188 341.8369 628.8188 CBb1 (Unnamed gradient 32) 320.4336 634.7144 -85.5328 27.6342 1 0 0 1 0 0 Bg2.15236 -27.5502 -60.8434 -4.75339 351.0166 637.1035 Xm641.274 -8208.3057 -60.8434 -4.75339 -290.2573 8845.4092 Bc2.15236 -27.5502 -60.8434 -4.75339 351.0166 637.1035 Bm641.274 -8208.3057 -60.8434 -4.75339 353.1689 609.5532 Bcf0 BBUuu1 Ap312.373 580.8677 m312.373 564.7944 297.0566 551.7646 278.1655 551.7646 c259.2749 551.7646 243.9614 564.7944 243.9614 580.8677 c243.9614 596.9424 259.2749 609.9712 278.1655 609.9712 c297.0566 609.9712 312.373 596.9424 312.373 580.8677 cBb1 (Unnamed gradient 32) 277.7549 603.0342 -88.9342 92.5701 1 0 0 1 0 0 Bg1.72193 -92.5541 -72.9849 -1.35785 314.2471 603.7129 Xm152.4575 -8194.6162 -72.9849 -1.35785 161.7896 8798.3291 Bc1.72193 -92.5541 -72.9849 -1.35785 314.2471 603.7129 Bm152.4575 -8194.6162 -72.9849 -1.35785 315.9688 511.1587 Bcf0 BB0 Ap300.1992 559.0161 m256.1328 559.0161 L261.9316 554.5947 266.9312 552.5024 267.5161 542.2002 C288.3359 542.2002 L288.5371 547.2988 291.2559 552.7852 300.1992 559.0161 CBb1 (Unnamed gradient 32) 277.3472 603.0254 -88.9342 92.5712 1 0 0 1 0 0 Bg1.72195 -92.5552 -48.0508 -0.893965 301.373 603.4722 Xm151.5034 -8143.3311 -48.0508 -0.893965 149.8696 8746.8027 Bc1.72195 -92.5552 -48.0508 -0.893965 301.373 603.4722 Bm151.5034 -8143.3311 -48.0508 -0.893965 303.0947 510.917 Bcf0 BBU1 Ap288.1016 528.7896 m267.769 528.7896 L269.3022 516.0986 L286.5684 516.0986 L288.1016 528.7896 LBb1 (Unnamed gradient 32) 276.5547 603.0112 -88.9342 92.5699 1 0 0 1 0 0 Bg1.72193 -92.5538 -24.3249 -0.452555 288.7168 603.2373 Xm150.9224 -8112.1055 -24.3249 -0.452555 137.7944 8715.3428 Bc1.72193 -92.5538 -24.3249 -0.452555 288.7168 603.2373 Bm150.9224 -8112.1055 -24.3249 -0.452555 290.4385 510.6836 Bcf0 BB287.2773 526.1899 m286.1777 526.1899 L286.1777 543.9966 L287.2773 543.9966 L287.2773 526.1899 LBb1 (Unnamed gradient 32) 285.4609 603.1787 -88.9342 92.5718 1 0 0 1 0 0 Bg1.72196 -92.5558 -5.42972 -0.101018 288.1758 603.229 Xm151.3645 -8135.8687 -5.42972 -0.101018 136.811 8739.0977 Bc1.72196 -92.5558 -5.42972 -0.101018 288.1758 603.229 Bm151.3645 -8135.8687 -5.42972 -0.101018 289.8975 510.6733 Bcf0 BB281.3906 526.1899 m280.2891 526.1899 L280.2891 543.9966 L281.3906 543.9966 L281.3906 526.1899 LBb1 (Unnamed gradient 32) 279.5752 603.0688 -88.9342 92.5718 1 0 0 1 0 0 Bg1.72196 -92.5558 -5.43168 -0.101054 282.291 603.1191 Xm151.2571 -8130.0938 -5.43168 -0.101054 131.0342 8733.2129 Bc1.72196 -92.5558 -5.43168 -0.101054 282.291 603.1191 Bm151.2571 -8130.0938 -5.43168 -0.101054 284.0127 510.5635 Bcf0 BB275.5005 526.1899 m274.4009 526.1899 L274.4009 543.9966 L275.5005 543.9966 L275.5005 526.1899 LBb1 (Unnamed gradient 32) 273.688 602.959 -88.9342 92.5718 1 0 0 1 0 0 Bg1.72196 -92.5558 -5.42972 -0.101018 276.4028 603.0093 Xm151.1496 -8124.3164 -5.42972 -0.101018 125.2534 8727.3262 Bc1.72196 -92.5558 -5.42972 -0.101018 276.4028 603.0093 Bm151.1496 -8124.3164 -5.42972 -0.101018 278.125 510.4536 Bcf0 BB269.6113 526.1899 m268.5093 526.1899 L268.5093 543.9966 L269.6113 543.9966 L269.6113 526.1899 LBb1 (Unnamed gradient 32) 267.7998 602.8496 -88.9342 92.5718 1 0 0 1 0 0 Bg1.72196 -92.5558 -5.43217 -0.101063 270.5156 602.8999 Xm151.0421 -8118.5391 -5.43217 -0.101063 119.4736 8721.4395 Bc1.72196 -92.5558 -5.43217 -0.101063 270.5156 602.8999 Bm151.0421 -8118.5391 -5.43217 -0.101063 272.2378 510.3442 Bcf0 BBUU0 Ap0 0 0 0 1 1 1 Xa89.4136 596.2905 m88.4067 596.2031 87.3276 596.2251 86.2026 596.3564 c83.7163 596.6411 81.6099 597.3828 79.9448 598.5601 c77.7002 600.1616 77.3818 601.813 77.5063 602.9155 c77.6348 604.022 78.3198 605.5571 80.8696 606.6055 c81.9038 607.0283 83.041 607.2969 84.249 607.4009 c85.2588 607.4878 86.3413 607.4692 87.4604 607.3354 c89.5229 607.1025 91.2964 606.5713 92.7349 605.7588 C93.5728 605.2871 L93.6855 606.2397 L96.1719 627.9585 L96.3667 629.6567 L96.3882 629.8369 L96.5366 631.1846 96.9937 631.9019 97.7407 631.9668 C97.8789 631.981 L97.9771 631.9624 L98.5757 631.8984 98.8408 631.3647 99.3413 630.0801 C99.4106 629.9048 L99.5269 629.6133 99.6431 629.3267 99.7573 629.0859 c100.7964 626.9521 102.8301 623.8657 106.6006 621.2598 c109.4185 619.3145 110.3691 615.5088 109.272 610.5488 c108.5508 607.2598 107.3843 604.7642 106.5015 604.6079 C106.4961 604.6079 106.4961 604.6079 106.4912 604.6079 c106.1646 604.5791 105.9126 604.665 105.729 604.835 c105.3311 605.187 105.3115 605.686 105.29 606.8804 c105.2651 608.627 105.2144 611.5249 103.4336 612.7822 c102.6855 613.3076 101.811 613.6631 100.8843 614.0347 c100.1929 614.3149 99.4106 614.6284 98.6948 615.0396 C97.8501 615.5264 L97.7437 614.561 L96.1636 600.7788 L96.0332 599.6748 95.3496 598.1348 92.8003 597.0859 c91.7642 596.6685 90.6279 596.3999 89.4136 596.2905 C89.4136 596.2905 Lf/BBAccumRotation (0.087148) XTu1 Ap79.0708 516.8604 m79.0708 512.5137 75.5493 508.9907 71.2007 508.9907 c66.8555 508.9907 63.332 512.5137 63.332 516.8604 c63.332 521.2056 66.8555 524.7285 71.2007 524.7285 c75.5493 524.7285 79.0708 521.2056 79.0708 516.8604 cfu0 Ap71.2007 510.4946 m64.0469 510.4946 58.2485 502.0059 58.2485 491.5322 c58.2485 490.5981 58.3101 489.6875 58.4014 488.7905 C62.0024 487.46 66.4214 486.6738 71.2007 486.6738 c75.9814 486.6738 80.4009 487.46 84.002 488.7905 C84.0913 489.6875 84.1563 490.5981 84.1563 491.5322 c84.1563 502.0059 78.3574 510.4946 71.2007 510.4946 cfUUuu102.7432 477.0327 m101.9756 477.0327 101.353 476.4116 101.353 475.644 C101.353 467.4517 L101.353 466.6851 101.9756 466.063 102.7432 466.063 C113.4033 466.063 L113.4033 477.0327 L102.7432 477.0327 LBb1 (Unnamed gradient 32) 108.0029 488.5376 -92.0216 28.3757 1 0 0 1 0 0 Bg-1.00097 -28.358 -16.397 0.578774 116.1885 488.2485 Xm-282.4761 -8002.7119 -16.397 0.578774 398.6641 8490.9609 Bc-1.00097 -28.358 -16.397 0.578774 116.1885 488.2485 Bm-282.4761 -8002.7119 -16.397 0.578774 115.1875 459.8906 Bcf0 BB112.9365 480.501 m124.1167 472.6733 l125.0034 472.0513 125.0034 471.0444 124.1167 470.4224 c112.9365 462.5942 l112.0503 461.9731 111.3306 462.3472 111.3306 463.4282 c111.3306 479.665 l111.3306 480.749 112.0503 481.123 112.9365 480.501 cBb1 (Unnamed gradient 32) 118.5 488.167 -92.0216 28.3762 1 0 0 1 0 0 Bg-1.00099 -28.3586 -17.9956 0.635202 127.5977 487.8457 Xm-282.9889 -8017.2397 -17.9956 0.635202 410.5869 8505.0859 Bc-1.00099 -28.3586 -17.9956 0.635202 127.5977 487.8457 Bm-282.9889 -8017.2397 -17.9956 0.635202 126.5967 459.4873 Bcf0 BBUU1 Ap513.2656 393.4375 m513.2656 376.7891 499.7676 363.291 483.1182 363.291 c466.4678 363.291 452.9707 376.7891 452.9707 393.4375 c452.9707 410.0879 466.4678 423.5859 483.1182 423.5859 c499.7676 423.5859 513.2656 410.0879 513.2656 393.4375 cBb1 (Unnamed gradient 32) 487.6914 420.5908 -99.5603 55.2976 1 0 0 1 0 0 Bg-9.18411 -54.5296 -68.0301 11.4579 521.7061 414.8623 Xm-1395.7228 -8286.9355 -68.0301 11.4579 1917.4287 8701.7979 Bc-9.18411 -54.5296 -68.0301 11.4579 521.7061 414.8623 Bm-1395.7228 -8286.9355 -68.0301 11.4579 512.5215 360.333 Bcf0 BBuu*u0 Ap1 D0 0 0 0 1 1 1 Xa497.2334 398.9102 m498.2969 400.123 498.9014 401.6953 498.9014 403.3789 c498.9014 407.1387 495.8428 410.1992 492.0811 410.1992 c488.3193 410.1992 485.2637 407.1387 485.2637 403.3789 c485.2637 401.6953 485.8691 400.123 486.9287 398.9102 C483.8564 396.4395 481.916 391.873 481.916 386.7109 c481.916 386.1074 481.9502 385.4805 482.0244 384.7422 C482.126 383.7246 L483.0879 383.3672 L485.7363 382.3887 488.8467 381.8711 492.0811 381.8711 c495.3193 381.8711 498.4277 382.3887 501.0732 383.3672 C502.0332 383.7227 L502.1377 384.7383 L502.2109 385.4746 502.2471 386.1016 502.2471 386.7109 c502.2471 391.873 500.3066 396.4395 497.2334 398.9102 Cf0 D500.1367 385.1914 m497.7637 384.3496 494.9844 383.9063 492.083 383.9063 c489.1768 383.9063 486.3994 384.3496 484.0283 385.1914 C483.9746 385.7598 483.9502 386.2461 483.9502 386.7109 c483.9502 392.1406 486.4209 396.9355 489.9609 398.3633 C490.7813 398.6973 L489.9863 399.084 L488.3281 399.8945 487.2969 401.541 487.2969 403.3789 c487.2969 406.0176 489.4453 408.166 492.083 408.166 c494.7217 408.166 496.8682 406.0176 496.8682 403.3789 c496.8682 401.541 495.8359 399.8945 494.1787 399.084 C493.3828 398.6973 L494.2051 398.3633 L497.7412 396.9355 500.2139 392.1406 500.2139 386.7109 c500.2139 386.25 500.1885 385.7617 500.1367 385.1914 Cf*UUu1 Ap483.4648 400.6055 m483.4648 397.2773 480.7676 394.582 477.4414 394.582 c474.1152 394.582 471.418 397.2773 471.418 400.6055 c471.418 403.9316 474.1152 406.627 477.4414 406.627 c480.7676 406.627 483.4648 403.9316 483.4648 400.6055 cfu0 Ap477.4414 395.7324 m471.9648 395.7324 467.5254 389.2363 467.5254 381.2188 c467.5254 380.5039 467.5742 379.8066 467.6445 379.1191 C470.4004 378.1016 473.7822 377.5 477.4414 377.5 c481.1006 377.5 484.4824 378.1016 487.2383 379.1191 C487.3076 379.8066 487.3574 380.5039 487.3574 381.2188 c487.3574 389.2363 482.918 395.7324 477.4414 395.7324 cfUUU1 Ap179.7656 220.5156 m179.7656 202.1387 164.8706 187.2461 146.4966 187.2461 c128.123 187.2461 113.2285 202.1387 113.2285 220.5156 c113.2285 238.8867 128.123 253.7813 146.4966 253.7813 c164.8706 253.7813 179.7656 238.8867 179.7656 220.5156 cBb1 (Unnamed gradient 32) 151.8369 439.0684 -91.3995 204.9015 1 0 0 1 0 0 Bg-5.00436 -204.8404 -71.3937 1.74419 187.5322 438.1963 Xm-192.4044 -7875.5737 -71.3937 1.74419 379.9365 8313.7695 Bc-5.00436 -204.8404 -71.3937 1.74419 187.5322 438.1963 Bm-192.4044 -7875.5737 -71.3937 1.74419 182.5278 233.3555 Bcf0 BBuu*u0 Ap1 D0 0 0 0 1 1 1 Xa161.3159 226.5879 m162.5913 228.043 163.3169 229.9316 163.3169 231.9512 c163.3169 236.4648 159.6465 240.1367 155.1318 240.1367 c150.6172 240.1367 146.9478 236.4648 146.9478 231.9512 c146.9478 229.9316 147.6753 228.043 148.9473 226.5879 C145.2607 223.625 142.9316 218.1426 142.9316 211.9453 c142.9316 211.2227 142.9712 210.4707 143.062 209.584 C143.1841 208.3613 L144.3384 207.9336 L147.5166 206.7598 151.249 206.1387 155.1318 206.1387 c159.0166 206.1387 162.7476 206.7598 165.9243 207.9336 C167.0767 208.3613 L167.2007 209.5801 L167.29 210.4629 167.3335 211.2148 167.3335 211.9453 c167.3335 218.1426 165.0034 223.625 161.3159 226.5879 Cf0 D164.7998 210.123 m161.9521 209.1113 158.6157 208.5801 155.1343 208.5801 c151.6475 208.5801 148.313 209.1113 145.4658 210.123 C145.4009 210.8047 145.3716 211.3887 145.3716 211.9453 c145.3716 218.4648 148.3398 224.2188 152.5859 225.9336 C153.5718 226.332 L152.6167 226.7969 L150.6265 227.7715 149.3896 229.7441 149.3896 231.9512 c149.3896 235.1172 151.9668 237.6953 155.1343 237.6953 c158.2979 237.6953 160.877 235.1172 160.877 231.9512 c160.877 229.7461 159.6392 227.7715 157.6489 226.7969 C156.6948 226.332 L157.6797 225.9336 L161.9253 224.2188 164.8906 218.4648 164.8906 211.9453 c164.8906 211.3945 164.8613 210.8086 164.7998 210.123 Cf*UUu1 Ap144.7891 228.6211 m144.7891 224.6289 141.5527 221.3926 137.5601 221.3926 c133.5669 221.3926 130.3315 224.6289 130.3315 228.6211 c130.3315 232.6133 133.5669 235.8496 137.5601 235.8496 c141.5527 235.8496 144.7891 232.6133 144.7891 228.6211 cfu0 Ap137.5601 222.7734 m130.9883 222.7734 125.6606 214.9766 125.6606 205.3535 c125.6606 204.4961 125.7178 203.6602 125.8008 202.8359 C129.1084 201.6133 133.1685 200.8906 137.5601 200.8906 c141.9512 200.8906 146.0107 201.6133 149.3184 202.8359 C149.4014 203.6602 149.4609 204.4961 149.4609 205.3535 c149.4609 214.9766 144.1338 222.7734 137.5601 222.7734 cfUUUu1 Ap168.8931 475.6089 m168.8931 471.3921 165.4771 467.9751 161.2588 467.9751 c157.0439 467.9751 153.626 471.3921 153.626 475.6089 c153.626 479.8247 157.0439 483.2422 161.2588 483.2422 c165.4771 483.2422 168.8931 479.8247 168.8931 475.6089 cBb1 (Unnamed gradient 34) 161.1895 484.0161 -89.5262 40.37 1 0 0 1 0 0 Bg0.333802 -40.3686 -19.3358 -0.159885 170.8574 484.0962 Xm66.7394 -8071.1748 -19.3358 -0.159885 104.1182 8555.2715 Bc0.333802 -40.3686 -19.3358 -0.159885 170.8574 484.0962 Bm66.7394 -8071.1748 -19.3358 -0.159885 171.1914 443.7275 Bcf0 BBu0 Ap161.2588 469.4351 m154.3198 469.4351 148.6953 461.2007 148.6953 451.0415 c148.6953 450.1353 148.7554 449.2524 148.8438 448.3813 C152.3359 447.0923 156.6235 446.3286 161.2588 446.3286 c165.8965 446.3286 170.1836 447.0923 173.6758 448.3813 C173.7627 449.2524 173.8257 450.1353 173.8257 451.0415 c173.8257 461.2007 168.2012 469.4351 161.2588 469.4351 cBb1 (Unnamed gradient 34) 160.9878 484.0151 -89.5262 40.3704 1 0 0 1 0 0 Bg0.333806 -40.369 -29.2207 -0.241622 175.6362 484.1362 Xm66.6237 -8057.1885 -29.2207 -0.241622 109.0127 8541.3242 Bc0.333806 -40.369 -29.2207 -0.241622 175.6362 484.1362 Bm66.6237 -8057.1885 -29.2207 -0.241622 175.9702 443.7671 Bcf0 BBUUu*u1 D0 g298.3574 259.1465 m275.1963 259.1465 L274.3037 259.1465 273.5815 258.4238 273.5815 257.5332 C273.5815 254.2227 L275.8691 254.2227 L276.6626 254.2227 277.3076 253.5801 277.3076 252.7852 C277.3076 252.584 L277.3076 251.7871 276.6626 251.1445 275.8691 251.1445 C273.5815 251.1445 L273.5815 248.2402 L275.8691 248.2402 L276.6626 248.2402 277.3076 247.5957 277.3076 246.8008 C277.3076 246.5996 L277.3076 245.8047 276.6626 245.1602 275.8691 245.1602 C273.5815 245.1602 L273.5815 242.2578 L275.8691 242.2578 L276.6626 242.2578 277.3076 241.6133 277.3076 240.8184 C277.3076 240.6172 L277.3076 239.8223 276.6626 239.1797 275.8691 239.1797 C273.5815 239.1797 L273.5815 236.2734 L275.8691 236.2734 L276.6626 236.2734 277.3076 235.6289 277.3076 234.8359 C277.3076 234.6328 L277.3076 233.8398 276.6626 233.1953 275.8691 233.1953 C273.5815 233.1953 L273.5815 229.8965 L273.5815 229.0078 274.3037 228.2852 275.1963 228.2852 C298.3574 228.2852 L299.248 228.2852 299.9727 229.0078 299.9727 229.8965 C299.9727 257.5332 L299.9727 258.4238 299.248 259.1465 298.3574 259.1465 Cf0 D292.7832 235.7793 m291.0928 235.1543 289.0195 234.7852 286.7773 234.7852 c284.5332 234.7852 282.4595 235.1543 280.771 235.7793 C280.729 236.1992 280.6978 236.627 280.6978 237.0664 c280.6978 241.1582 282.5869 244.5977 285.1582 245.6348 C283.9307 246.2363 283.0854 247.4922 283.0854 248.9512 c283.0854 250.9922 284.7383 252.6445 286.7773 252.6445 c288.8164 252.6445 290.4688 250.9922 290.4688 248.9512 c290.4688 247.4922 289.6211 246.2363 288.3936 245.6348 C290.9658 244.5977 292.8555 241.1582 292.8555 237.0664 c292.8555 236.627 292.8262 236.1992 292.7832 235.7793 CBb1 (Unnamed gradient 34) 286.1631 261.1064 -87.9793 28.3754 1 0 0 1 0 0 Bg1.00055 -28.3578 -31.3926 -1.10763 301.8594 261.6602 Xm288.9884 -8190.5269 -31.3926 -1.10763 12.8711 8452.1875 Bc1.00055 -28.3578 -31.3926 -1.10763 301.8594 261.6602 Bm288.9884 -8190.5269 -31.3926 -1.10763 302.8604 233.3027 Bcf0 BB*UUuu0 0 0 0 1 1 1 Xa416.5977 314.7383 m416.3711 314.2363 415.915 313.8906 415.3848 313.8906 C408.7734 313.9004 L408.0186 313.9043 407.4082 314.5977 407.4092 315.4531 C407.415 318.7109 L407.416 319.5684 408.0283 320.2617 408.7813 320.2598 C415.3936 320.25 L415.8477 320.25 416.2451 319.9941 416.4932 319.6074 C416.584 319.6191 416.6738 319.6367 416.7656 319.6367 C419.2568 319.6426 L419.2578 319.7793 L419.2588 321.207 418.2432 322.3633 416.9844 322.3672 C407.1973 322.3828 L405.9414 322.3848 404.9219 321.2285 404.9189 319.8008 C404.9111 314.3711 L404.9072 312.9434 405.9248 311.7871 407.1816 311.7832 C416.9697 311.7676 L418.2266 311.7676 419.2471 312.9219 419.249 314.3477 C419.25 314.7266 L416.7588 314.7207 L416.7041 314.7207 416.6533 314.7324 416.5977 314.7383 Cf436.0459 314.5215 m436.0547 319.9512 L436.0576 321.3789 435.04 322.5371 433.7822 322.5391 C423.9961 322.5547 L422.7383 322.5566 421.7168 321.4023 421.7148 319.9727 C421.7148 319.6465 L424.3984 319.6523 L424.6357 320.1172 425.0723 320.4336 425.5801 320.4316 C432.1914 320.4219 L432.9463 320.4199 433.5566 319.7266 433.5566 318.8691 C433.5498 315.6094 L433.5479 314.7539 432.9365 314.0605 432.1816 314.0625 C425.5693 314.0742 L425.1064 314.0742 424.7012 314.3359 424.4551 314.7363 C421.708 314.7305 L421.7061 314.543 L421.7031 313.1172 422.7227 311.957 423.9805 311.9551 C433.7656 311.9395 L435.0215 311.9375 436.0449 313.0938 436.0459 314.5215 CfU415.124 317.1504 m415.125 317.8223 415.6309 318.3672 416.248 318.3672 C424.4629 318.3828 L425.083 318.3828 425.583 317.8359 425.583 317.1641 c425.5811 316.4883 425.0781 315.9473 424.457 315.9473 C416.2432 315.9316 L415.626 315.9316 415.123 316.4785 415.124 317.1504 C415.124 317.1504 LfUu431.5674 237.5313 m431.4678 237.7363 431.2529 238.0176 431.0928 238.1523 c430.9941 238.2324 430.8877 238.3008 430.7734 238.3555 c430.5488 238.4609 430.293 238.5176 430.0039 238.5176 c429.4297 238.5176 428.9121 238.291 428.4492 237.8438 c427.9893 237.3965 427.6338 236.8164 427.3848 236.1016 c427.1377 235.3848 427.0137 234.6445 427.0137 233.8789 c427.0137 233.0938 427.1787 232.4922 427.5029 232.0742 c427.8311 231.6563 428.2578 231.4473 428.7881 231.4473 c429.4014 231.4473 429.9443 231.6914 430.4102 232.1836 c430.8779 232.6719 431.2324 233.293 431.4766 234.041 c431.7168 234.7871 431.8379 235.5117 431.8379 236.2129 c431.8379 236.377 431.8301 236.5352 431.8096 236.6836 c431.7793 236.9453 431.667 237.3281 431.5674 237.5313 cf*u1 D430.0342 248.7051 m422.3857 248.7051 416.1846 242.5039 416.1846 234.8555 c416.1846 227.2051 422.3857 221.0039 430.0342 221.0039 c437.6816 221.0039 443.8838 227.2051 443.8838 234.8555 c443.8838 242.5039 437.6816 248.7051 430.0342 248.7051 cf0 D439.126 228.8457 m438.9023 228.5332 438.6572 228.2402 438.3828 227.9668 c437.8379 227.418 437.1973 226.9551 436.4658 226.5801 c435.7344 226.2031 434.9141 225.918 434.0059 225.7207 c433.0977 225.5254 432.1035 225.4258 431.0342 225.4258 c429.4238 225.4258 427.9785 225.6387 426.6904 226.0605 c425.4023 226.4805 424.3193 227.0898 423.4385 227.8828 c422.5605 228.6758 421.8945 229.625 421.4424 230.7266 c420.9922 231.8281 420.7686 233.0449 420.7686 234.3789 c420.7686 235.7715 421 237.0723 421.4639 238.2813 c421.9268 239.4902 422.5957 240.541 423.4688 241.4336 c424.3428 242.3262 425.4072 243.0234 426.666 243.5273 c427.9238 244.0313 429.3105 244.2813 430.8271 244.2813 c432.0703 244.2813 433.209 244.1016 434.2461 243.7383 c435.2803 243.375 436.1699 242.8535 436.9063 242.1738 c437.6445 241.4961 438.21 240.6875 438.5977 239.7559 c438.9883 238.8242 439.1816 237.7988 439.1816 236.6719 c439.1816 235.7988 439.0254 234.9414 438.7109 234.0996 c438.3984 233.2598 437.9492 232.5039 437.3623 231.834 c436.7783 231.166 436.0889 230.6348 435.2969 230.2461 c434.5068 229.8574 433.6543 229.6641 432.7393 229.6641 c432.21 229.6641 431.7998 229.752 431.5049 229.9336 c431.3506 230.0273 431.2207 230.1504 431.123 230.3027 c430.9619 230.5488 430.5635 230.4121 430.0156 230.1113 c429.6836 229.9297 429.3311 229.8008 428.9561 229.7266 c428.584 229.6523 428.2227 229.6328 427.8662 229.668 c427.2607 229.7266 426.3262 230.1113 425.8555 230.5156 c425.5791 230.7539 425.3369 231.0352 425.125 231.3691 c424.6982 232.043 424.4844 232.873 424.4844 233.8613 c424.4844 234.8848 424.7051 235.8965 425.1475 236.8887 c425.5879 237.8828 426.2129 238.6973 427.0283 239.332 c427.8408 239.9648 428.7627 240.2813 429.7881 240.2813 c430.3545 240.2813 430.8496 240.1797 431.2715 239.9746 c432.0264 239.6074 432.4316 239.2012 432.499 239.502 c432.5664 239.8047 433.2021 240.0469 433.917 240.0469 c434.6309 240.0469 435.0547 239.3125 434.8633 238.4102 C433.7217 233.0176 L433.6309 232.5703 433.584 232.2773 433.584 232.1348 c433.584 231.9824 433.6211 231.8652 433.6963 231.7813 c433.7715 231.6953 433.8594 231.6523 433.9648 231.6523 c434.1738 231.6523 434.418 231.7324 434.6973 231.8926 c435.0703 232.1074 435.7578 232.6836 436.1582 233.2109 c436.3867 233.5137 436.5986 233.8516 436.7959 234.2285 c437.209 235.0215 437.416 235.8887 437.416 236.8301 c437.416 237.6152 437.2695 238.3535 436.9717 239.0469 c436.8242 239.3926 436.6406 239.7188 436.4258 240.0195 c436.0654 240.5195 435.2822 241.2266 434.7002 241.5547 c434.3623 241.7441 433.9941 241.9082 433.5986 242.0469 c432.7695 242.334 431.835 242.4785 430.7891 242.4785 c429.7246 242.4785 428.7461 242.3379 427.8574 242.0605 c426.9668 241.7832 426.1865 241.3848 425.5137 240.8652 c424.8408 240.3457 424.2773 239.7051 423.8271 238.9395 c423.4287 238.2715 423.126 237.5332 422.9141 236.7227 c422.7051 235.9102 422.6016 235.0859 422.6016 234.2422 c422.6016 233.1172 422.8252 232.0879 423.2705 231.1563 c423.7207 230.2246 424.3721 229.4453 425.2246 228.8125 c426.0771 228.1836 427.1074 227.7363 428.3164 227.4707 c429.5264 227.207 430.8926 227.1523 432.415 227.3086 c433.624 227.4531 434.6514 227.7285 435.4922 228.1328 c435.9092 228.3379 436.2979 228.5781 436.6543 228.8633 c437.2461 229.3398 438.0898 229.8398 438.667 229.8398 c439.2441 229.8398 439.4941 229.3652 439.126 228.8457 cf*UUuuu228.2666 625.7749 m228.396 625.479 L228.2666 625.7749 L227.7813 624.9678 L228.2666 625.7749 L223.9717 635.5903 L223.6553 635.5903 L223.6523 598.0503 L223.647 593.6211 220.0586 590.0317 215.6318 590.0249 C198.6333 590.0249 L198.6333 580.4224 L215.6318 580.4224 L225.3706 580.4258 233.2524 588.3164 233.2573 598.0503 C233.2559 634.0903 L228.2666 625.7749 LBb1 (Unnamed gradient 32) 216.2969 651.1104 -90.3526 139.9125 1 0 0 1 0 0 Bg-0.860981 -139.9098 -38.6282 0.237711 235.6377 650.9912 Xm-49.9178 -8111.6709 -38.6282 0.237711 285.5557 8762.6621 Bc-0.860981 -139.9098 -38.6282 0.237711 235.6377 650.9912 Bm-49.9178 -8111.6709 -38.6282 0.237711 234.7769 511.0815 Bcf0 BBUUuu189.667 561.8018 m189.668 572.3599 L189.6729 576.7891 193.2612 580.3784 197.6885 580.3853 C214.6865 580.3853 L214.6865 589.9878 L197.6885 589.9878 L187.9492 589.9849 180.0679 582.0938 180.0625 572.3599 C180.063 561.8018 L189.667 561.8018 LBb1 (Unnamed gradient 32) 197.835 651.2236 -90.3526 139.9121 1 0 0 1 0 0 Bg-0.860978 -139.9094 -38.6277 0.237708 217.1221 651.105 Xm-49.5232 -8047.5522 -38.6277 0.237708 266.6455 8698.6572 Bc-0.860978 -139.9094 -38.6277 0.237708 217.1221 651.105 Bm-49.5232 -8047.5522 -38.6277 0.237708 216.2612 511.1953 Bcf0 BBUUUu1 Ap251.9414 642.48 m251.9414 628.7329 240.7969 617.5889 227.0493 617.5889 c213.3022 617.5889 202.1577 628.7329 202.1577 642.48 c202.1577 656.2271 213.3022 667.3726 227.0493 667.3726 c240.7969 667.3726 251.9414 656.2271 251.9414 642.48 cBb1 (Unnamed gradient 32) 227.1021 651.043 -90.3526 139.9127 1 0 0 1 0 0 Bg-0.860982 -139.9101 -53.9506 0.332003 254.0771 650.877 Xm-50.1805 -8154.3613 -53.9506 0.332003 304.2578 8805.2383 Bc-0.860982 -139.9101 -53.9506 0.332003 254.0771 650.877 Bm-50.1805 -8154.3613 -53.9506 0.332003 253.2163 510.9668 Bcf0 BBu*u0 Ap1 D0 0 0 0 1 1 1 Xa237.3965 655.7358 m217.189 655.7358 L216.4102 655.7358 215.7803 655.1035 215.7803 654.3267 C215.7803 651.4395 L217.7759 651.4395 L218.4688 651.4395 219.0303 650.8779 219.0303 650.1851 C219.0303 650.0083 L219.0303 649.314 218.4688 648.7524 217.7759 648.7524 C215.7803 648.7524 L215.7803 646.2183 L217.7759 646.2183 L218.4688 646.2183 219.0303 645.6567 219.0303 644.9639 C219.0303 644.7881 L219.0303 644.0952 218.4688 643.5317 217.7759 643.5317 C215.7803 643.5317 L215.7803 640.9995 L217.7759 640.9995 L218.4688 640.9995 219.0303 640.437 219.0303 639.7432 C219.0303 639.5674 L219.0303 638.8755 218.4688 638.313 217.7759 638.313 C215.7803 638.313 L215.7803 635.7788 L217.7759 635.7788 L218.4688 635.7788 219.0303 635.2153 219.0303 634.5244 C219.0303 634.3477 L219.0303 633.6548 218.4688 633.0918 217.7759 633.0918 C215.7803 633.0918 L215.7803 630.2144 L215.7803 629.4375 216.4102 628.8086 217.189 628.8086 C237.3965 628.8086 L238.1743 628.8086 238.8057 629.4375 238.8057 630.2144 C238.8057 654.3267 L238.8057 655.1035 238.1743 655.7358 237.3965 655.7358 Cf0 D232.5332 635.3477 m231.0591 634.8018 229.25 634.48 227.293 634.48 c225.335 634.48 223.5254 634.8018 222.0527 635.3477 C222.0156 635.7148 221.9893 636.0874 221.9893 636.4697 c221.9893 640.04 223.6372 643.04 225.8804 643.9453 C224.8091 644.4712 224.0718 645.5664 224.0718 646.8403 c224.0718 648.6196 225.5137 650.0625 227.293 650.0625 c229.0718 650.0625 230.5146 648.6196 230.5146 646.8403 c230.5146 645.5664 229.7749 644.4712 228.7041 643.9453 C230.9468 643.04 232.5967 640.04 232.5967 636.4697 c232.5967 636.0874 232.5703 635.7148 232.5332 635.3477 Cf*UUUuu1 Ap374.0732 386.3262 m374.0732 385.8945 374.4717 385.5469 374.96 385.5469 C380.9609 385.5469 L381.4492 385.5469 381.8438 385.8945 381.8438 386.3262 C381.8438 386.3262 L381.8438 386.7559 381.4492 387.1016 380.9609 387.1016 C374.96 387.1016 L374.4717 387.1016 374.0732 386.7559 374.0732 386.3262 C374.0732 386.3262 Lf375.2705 384.127 m375.2705 383.6953 375.6689 383.3457 376.1553 383.3457 C379.7637 383.3457 L380.249 383.3457 380.6455 383.6953 380.6455 384.127 C380.6455 384.127 L380.6455 384.5547 380.249 384.9043 379.7637 384.9043 C376.1553 384.9043 L375.6689 384.9043 375.2705 384.5547 375.2705 384.127 C375.2705 384.127 LfUu*u0 Ap1 D385.5508 411.1738 m383.5215 413.2012 381.0449 414.2266 378.1533 414.2266 c378.1221 414.2266 378.0879 414.2266 378.0713 414.2266 c378.0439 414.2266 378.0098 414.2266 377.9795 414.2266 c377.9609 414.2266 377.9287 414.2266 377.8994 414.2266 c375.0078 414.2266 372.5303 413.2012 370.498 411.1738 c368.4756 409.1289 367.4512 406.6699 367.4512 403.7793 c367.4512 402.9961 367.5303 402.2305 367.6768 401.4961 c367.9473 400.2813 368.3633 399.1953 368.9219 398.2207 c369.4814 397.2461 370.6787 395.8887 372.5 394.1309 c374.0693 392.6309 374.7832 390.8359 374.6563 388.7598 c374.6211 388.1934 374.9902 387.7402 375.5566 387.7402 C380.4951 387.7402 L381.0625 387.7402 381.4316 388.1934 381.3945 388.7598 c381.2686 390.8359 381.9844 392.6309 383.5527 394.1309 c385.373 395.8887 386.5693 397.2461 387.1299 398.2207 c387.6885 399.1953 388.1035 400.2813 388.377 401.4961 c388.5195 402.2305 388.6006 402.9961 388.6006 403.7793 c388.6006 406.6699 387.5771 409.1289 385.5508 411.1738 cf0 D386.8262 402.1289 m386.6016 401.2363 386.417 401.2969 386.3975 402.2363 c386.3457 404.5449 385.6182 406.7695 384.1533 408.6211 c382.6904 410.4766 380.6904 411.6953 378.458 412.2813 c377.5479 412.5215 377.5313 412.7148 378.4551 412.7305 c381.3574 412.7754 383.9385 411.7852 385.5596 409.7305 c387.1807 407.6816 387.5439 404.9414 386.8262 402.1289 cf*UUU1 Ap478.2959 627.9546 m478.2959 611.7783 465.1826 598.666 449.0068 598.666 c432.832 598.666 419.7207 611.7783 419.7207 627.9546 c419.7207 644.1279 432.832 657.2412 449.0068 657.2412 c465.1826 657.2412 478.2959 644.1279 478.2959 627.9546 cBb1 (Unnamed gradient 34) 448.6631 651.6299 -89.1647 196.8973 1 0 0 1 0 0 Bg2.87047 -196.8764 -63.0333 -0.919029 480.1797 652.0894 Xm121.9565 -8364.6143 -63.0333 -0.919029 358.2236 9016.7031 Bc2.87047 -196.8764 -63.0333 -0.919029 480.1797 652.0894 Bm121.9565 -8364.6143 -63.0333 -0.919029 483.0498 455.2129 Bcf0 BBu0 0 0 0 1 1 1 Xa456.1592 639.6455 m456.1592 635.5288 452.8232 632.1929 448.7051 632.1929 c444.5898 632.1929 441.2529 635.5288 441.2529 639.6455 c441.2529 643.7612 444.5898 647.0977 448.7051 647.0977 c452.8232 647.0977 456.1592 643.7612 456.1592 639.6455 cfu0 Ap448.7051 633.6177 m441.9307 633.6177 436.4395 625.5776 436.4395 615.6587 c436.4395 614.7739 436.498 613.9121 436.584 613.063 C439.9941 611.8027 444.1797 611.0576 448.7051 611.0576 c453.2334 611.0576 457.4189 611.8027 460.8291 613.063 C460.9131 613.9121 460.9756 614.7739 460.9756 615.6587 c460.9756 625.5776 455.4834 633.6177 448.7051 633.6177 cfUUUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF