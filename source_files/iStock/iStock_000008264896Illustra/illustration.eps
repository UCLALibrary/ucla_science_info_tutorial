%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.2
%%For: (Administrator) ()
%%Title: (chevron_set.eps)
%%CreationDate: 1/15/2009 11:36 AM
%%BoundingBox: 24 0 1876 2800
%%HiResBoundingBox: 24.4912 0 1875.5088 2800
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_Cropmarks: 0 0 1900 2800
%AI3_TemplateBox: 950.5 1399.5 950.5 1399.5
%AI3_TileBox: 652.3999 1012.4004 1247.5996 1787.6001
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1900 2800
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1914.0659 4450.0278 0.1667 1059 922 26 0 0 1444 96 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 28.875 2 28.875 2 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
3 Bn
%AI5_BeginGradient: (Unnamed gradient 108)
(Unnamed gradient 108) 0 2 Bd
[
<
7070707070707071717171717272727273737373747474757575767676777778787A7A7A7B7B7C7C
7D7D7E7E7F7F8080818182838384848586868788898A8A8B8C8C8D8E8E8F90909192939394959696
9798999A9A9B9C9D9E9E9E9FA0A1A2A2A3A4A5A6A7A7A8A9AAAAABACACADAEAFAFB0B1B2B3B4B4B5
>
<
040404040404040505050505040606060507070706080807070908080A09090A0A0B0B0B0D0D0E0E
0D0F0E101011111212131314141515171618181A191B1C1C1D1D1E1F1F2020212222232524252727
282928292B2C2B2C2D2D2E2F30303132333434353637373738393A3B3B3C3D3D3E3F404041414243
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFDFDFCFDFCFBFBFAFAF7F7F6F5F4F4
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000010101010101010101010202020202030303
03040404040505050606060707070808090A0A0A0B0C0D0D0D0E0F1010111213141516161718191A
>
<
9D9D9D9D9D9D9D9C9C9C9C9C9B9B9B9B9A9A9A9A9999999898989797979696959594949493939292
919190908F8F8E8E8D8D8C8B8B8A8A8988888787868585848383828181807F7F7E7D7C7C7B7A7979
78777675757473727171706F6E6D6C6C6B6A69686766656463636261605F5E5D5C5B5A5958575655
>
<
C8C8C8C8C8C8C8C7C7C7C7C7C7C6C6C6C6C5C5C5C5C4C4C4C4C3C3C3C2C2C2C1C1C0C0C0BFBFBEBE
BEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B2B2B1B1B0AFAFAEAEADACACABAAAAA9A8A8
A7A6A6A5A4A3A3A2A1A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8E8D8C8C8B8A8988
>
<
3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C
3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3E3E3E3E3E3E3F
3F3F3F3F3F3F3F3F3F3F3F3F40404040404040404040404141414141414141414141424242424242
>
4 %_Br
[
0.709804 0.262745 0.956863 0.101961 0.333333 0.533333 0.258824 2 50 100 %_BS
%_0.709804 0.262745 0.956863 0.101961 0.333333 0.533333 0.258824 2 50 100 Bs
0.439216 0.015686 1 0 0.615686 0.784314 0.231373 2 65.9341 0 %_BS
%_0.439216 0.015686 1 0 0.615686 0.784314 0.231373 2 65.9341 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 112)
(Unnamed gradient 112) 0 2 Bd
[
<
AEAEAEAEAEAEAEAFAFAFAFB0B0B0B0B0B0B1B1B2B2B2B2B3B3B3B4B4B5B5B5B5B6B7B7B7B7B8B9B9
B9B9BABBBBBCBDBDBDBEBFBFBFC0C1C1C2C2C3C3C4C5C6C6C6C7C8C8C9CACACBCCCCCDCECECFD0D1
D1D2D3D4D5
>
<
5B5B5B5B5B5B5A5C5C5C5C5C5C5D5D5D5D5E5E5E5E60605F5F616060626161636364646466656767
6669686A6A6B6B6D6C6E6E706F71717272747375777778787A797B7D7D7F8180828484868687898B
8B8D8F8E90
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000010202040303050507080809
0B0B0C0E0E
>
0
<
47474747474747474747464646464646464646454545454545454444444444444343434343424242
424241414141404040403F3F3F3F3E3E3E3E3D3D3D3C3C3C3C3B3B3B3A3A3A393939383838373737
3636363535
>
<
919191919191919090909090908F8F8F8F8E8E8E8E8D8D8D8D8C8C8C8B8B8B8A8A89898988888787
8786868585848483838282818180807F7F7E7E7D7C7C7B7B7A7A7978787776767574747373727170
706F6E6E6D
>
<
E0E0E0E0E0E0DFDFDFDFDFDEDEDEDDDDDDDCDCDCDBDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D2D2
D1D1D0CFCFCECDCDCCCBCACAC9C8C8C7C6C5C4C4C3C2C1C0C0BFBEBDBCBBBAB9B9B8B7B6B5B4B3B2
B1B0AFAEAD
>
4 %_Br
[
0.835294 0.564706 0.054902 0 0.207843 0.427451 0.678431 2 50 100 %_BS
%_0.835294 0.564706 0.054902 0 0.207843 0.427451 0.678431 2 50 100 Bs
0.682353 0.356863 0 0 0.278431 0.568627 0.878431 2 65.9341 0 %_BS
%_0.682353 0.356863 0 0 0.278431 0.568627 0.878431 2 65.9341 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 13)
(Unnamed gradient 13) 0 2 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001010102020203030303040404050505
06060607060607070708080809090909090A0A0A0B0B0B0C0B0D0C0C0D0D0F0F0F10101111111212
13131414141514161516161617171818191819191A1A1B1B1C1C1C1D
>
<
7D7D7D7D7D7D7D7F7F7F7F7E7E80808080808181818182828284848485858587878688888989898B
8B8C8C8E8E8E8F8F919192929494959596969797999A9A9C9C9D9D9E9F9FA1A2A2A3A3A4A5A5A7A8
A8A9AAAAABADADAEAFB1B1B2B3B5B5B6B7B8B8BABBBCBCBDBFC0C1C1C2C3C4C5C6C6C7C8C9CACBCC
CCCDCECFD0D1D2D3D4D5D6D6D7D8D9DBDCDDDEDFE0E1E2E3E4E5E6E7
>
<
FDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFDFDFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000001010101010101010101010101010101010101010101010202
02020202020202030303030303030303030304040404040404040505
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFAFA
FAFAFAF9F9F9F9F9F8F8F8F8F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F2F2F2F2F1F1F1F0F0F0
EFEFEFEEEEEEEDEDEDECECECEBEBEBEAEAE9E9E9E8E8E8E7E7E6E6E6E5E5E4E4E4E3E3E2E2E2E1E1
E0E0DFDFDFDEDEDDDDDCDCDCDBDBDADAD9D9D8D8D7D7D6D6D5D5D4D4
>
<
969696969696969595959595959494949494939393939292929191919090908F8F8F8E8E8D8D8D8C
8C8B8B8A8A8A898988888787868685858484838382818180807F7F7E7D7D7C7B7B7A7A7978787776
7675747473727271706F6F6E6D6C6C6B6A696968676666656463626261605F5E5D5D5C5B5A595857
57565554535251504F4E4D4D4C4B4A494847464544434241403F3E3D
>
<
13131313131313131313131313131313131314141414141414141414141414141414141515151515
15151515151515161616161616161616161717171717171717171718181818181818181919191919
1919191A1A1A1A1A1A1A1B1B1B1B1B1B1B1C1C1C1C1C1C1C1D1D1D1D1D1D1D1E1E1E1E1E1E1F1F1F
1F1F1F20202020202121212121212222222222222323232323242424
>
4 %_Br
[
0.113725 0.905882 1 0.019608 0.831373 0.239216 0.141176 2 50 100 %_BS
%_0.113725 0.905882 1 0.019608 0.831373 0.239216 0.141176 2 50 100 Bs
0 0.490196 0.992157 0 1 0.588235 0.07451 2 65.9341 0 %_BS
%_0 0.490196 0.992157 0 1 0.588235 0.07451 2 65.9341 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Linear Gradient 1)
(Linear Gradient 1) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Linear Gradient 2)
(Linear Gradient 2) 0 6 Bd
[
<
C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2
D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADA
DADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDADBDA
DADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6
>
<
3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E7072
7476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3
B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCF
CFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7
>
<
232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
0
<
0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010
1111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F202020212122
22232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131323232333334
3435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242
>
<
A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D
7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
>
<
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9
C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCF
D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2
>
4 %_Br
<
8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E
8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C
9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9
AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9
B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3
C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E1010121213131616
18181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5
D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4
A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C
59575553514E4D4A484644413F3C3A373633312E2C29282523
>
0
<
737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665
656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A5959585857575656555554545353
5252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E
3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827
272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F
0F0E0E0D0C0C0B0B0A09090807070606050404030302010100
>
<
F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEE
EDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBE
BEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACAC
ABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0
>
<
0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425
252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F40414142
4344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F6061626363
6465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F808182838485868687
88898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
4 %_Br
<
0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F3031
32343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A
5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575
757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282
>
<
444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18
181515141212100F0F0C0C0B09090606060404020201000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
>
1
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D
8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473
>
<
BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECF
CFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDE
DFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDED
EEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8
>
<
00000000000101010101010101010102020202020202020203030303030303030304040404040404
04040405050505050505050505060606060606060606070707070707070707070808080808080808
0808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F
>
4 %_Br
0
<
9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A
6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444
>
1
0
1
<
7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4
A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF
>
0
4 %_Br
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2
F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDE
DDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6
C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AE
AEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1
A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F202122232424
25262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444
454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E
5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707070717172
72727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D
7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F
>
0
4 %_Br
[
0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS
%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs
0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS
%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs
0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS
%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs
0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS
%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs
0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS
%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs
0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS
%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient 1)
(Radial Gradient 1) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F7F8081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9AAAAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2F2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A1A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
1 0 50 0 %_BS
%_1 0 50 0 Bs
0 0 50 100 %_BS
%_0 0 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Radial Gradient 2)
(Radial Gradient 2) 1 6 Bd
[
0
<
FDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F8F8F8F7F7F6F6F5F5F5F5F4F4F3F3F2F2
F1F1F0F0EFEFEFEEEEEDEDECECECEBEBEAE9E9E9E8E7E7E7E6E6E5E5E4E3E3E3E2E1E0E0E0DFDEDE
DDDDDCDCDBDADAD9D8D8D7D7D6D6D5D4D4D3D2D2D1D1D0CFCFCECDCDCCCCCBCACAC9C9C8C7C7C6C6
C5C5C4C3C3C2C2C1C1C0C0BEBEBDBDBCBCBBBBBABAB9B9B7B7B6B6B5B5B3B3B3B2B2B1B1B1B0B0AE
AEAEADADACACACABABABAAAAAAA9A9A9A8A8A8A6A6A6A6A5A5A5A5A4A4A4A4A2A2A2A2A2A1A1A1A1
A19F9F9F9F9F9F9F9F9E9E9E9E9E9E9E9E9E
>
1
0
1
<
000102030405060708090A0B0C0D0E0F10111112131415161718191A1B1C1D1D1E1F202122232424
25262728292A2A2B2C2D2E2F2F3031323334343536373838393A3B3B3C3D3E3E3F40414142434444
454647474849494A4B4B4C4D4E4E4F505051525253535455555657575858595A5A5B5B5C5D5D5E5E
5F5F606161626263636464656566666767686869696A6A6B6B6C6C6D6D6E6E6E6F6F707070717172
72727373747474757575767676777777787878797979797A7A7A7A7B7B7B7B7C7C7C7C7C7D7D7D7D
7D7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F
>
0
4 %_Br
0
<
9E9D9B999896959392908F8E8C8B8A88878684838181807E7D7B7A79777675737272706F6D6C6B6A
6A68676564626261605E5D5D5C5A595757565555535251514F4E4E4D4B4B4A4A4848474745454444
>
1
0
1
<
7F808182838485868788898A8B8C8D8E8F90919293939495969798999A9B9C9D9E9E9FA0A1A2A3A4
A4A5A6A7A8A9A9AAABACADADAEAFB0B1B1B2B3B3B4B5B6B6B7B8B8B9BABABBBBBCBCBDBDBEBEBFBF
>
0
4 %_Br
<
0001030405050608090A0B0D0E0F111213151618191A1C1D1E1F202123242627282A2B2C2D2F3031
32343536373838393B3C3D3E3F4141434445464748494A4B4C4D4F4F51525353535455565758595A
5B5C5C5D5E5F60616162626364656667676869696A6A6B6B6C6D6D6E6F7070707172737374757575
757576767778787879797A7B7B7B7C7C7D7D7D7D7E7E7F80808081818182828282
>
<
444341413F3E3E3C3C3A3939373634343232312F2E2C2C2B292927262624232120201E1D1B1B1A18
181515141212100F0F0C0C0B09090606060404020201000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000
>
1
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBABAB9B8B7B6B5B4B3B2
B1B0AFAEADACABAAAAA9A8A7A6A5A4A3A2A1A09F9E9E9D9C9B9A99989796959594939291908F8E8D
8D8C8B8A8988878786858483828281807F7E7D7D7C7B7A79797877767675747473
>
<
BFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C6C6C6C7C7C8C8C8C9C9CACACACBCBCCCCCCCDCDCECECECF
CFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9D9D9DADADBDBDBDCDCDCDDDDDEDEDE
DFDFE0E0E0E1E1E1E2E2E3E3E3E4E4E4E5E5E6E6E6E7E7E7E8E8E9E9E9EAEAEAEBEBEBECECECEDED
EEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F3F3F3F4F4F4F5F5F5F6F6F6F7F7F7F7F8F8
>
<
00000000000101010101010101010102020202020202020203030303030303030304040404040404
04040405050505050505050505060606060606060606070707070707070707070808080808080808
0808090909090909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C
0C0C0C0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F
>
4 %_Br
<
8282828383838384848485858586868686878787878788888989898A8A8A8B8B8C8C8C8D8D8D8D8E
8E8E8F8F8F8F90909091919292939394949595959696969697979898989899999A9A9A9A9B9B9C9C
9C9C9D9D9E9E9E9E9F9E9F9FA0A0A0A1A1A1A2A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A8A8A8A9A9
AAAAAAAAABABABABACACACADADADADADAEAEAFAFB0B0B0B1B1B2B2B3B3B4B4B4B5B5B6B6B7B7B7B9
B8B9B9BABABBBBBBBCBCBDBDBDBDBEBEBFBFBFBFBFC0C0C0C0C1C1C1C1C1C1C1C2C2C2C2C2C2C3C3
C3C3C3C3C3C3C3C3C3C4C3C4C4C4C4C4C4C5C5C5C5C5C5C5C5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000001010203030405060608080A0A0B0C0C0E0E1010121213131616
18181A1B1B1C1C1E1E2020232325252828292A2B2C2E2E3030
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFEFEFCFBFAF9F9F7F5F4F1F1F0EEEDECEBEBEBEAE8E7E6E6E4E2E1DFDDDCDBDAD9D8D7D6D5D5
D3D2D1D0CECDCBCBCAC8C7C6C5C4C3C2C2C0BFBEBCBBBAB8B7B5B5B4B2B1B0AEADACAAA9A7A6A6A4
A3A1A09E9C9A9997959492908E8E8C8A88868582817E7D7A79767572706F6C6A6866646462605D5C
59575553514E4D4A484644413F3C3A373633312E2C29282523
>
0
<
737373727272727171717070706F6F6F6E6E6E6D6D6D6C6C6B6B6B6A6A6A69696868686767666665
656564646363626262616160605F5F5E5E5D5D5C5C5C5B5B5A5A5959585857575656555554545353
5252515150504F4F4E4E4D4D4C4C4B4B4A4A494948484747464545444443434242414140403F3E3E
3D3D3C3C3B3B3A3A39383837373636353534333332323131302F2F2E2E2D2D2C2B2B2A2A29292827
272626252424232322222120201F1F1E1D1D1C1C1B1A1A191918171716161514141313121111100F
0F0E0E0D0C0C0B0B0A09090807070606050404030302010100
>
<
F8F8F8F8F7F7F7F7F7F6F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F1F1F1F0F0F0F0EFEFEFEEEEEE
EDEDEDECECECEBEBEBEAEAEAE9E9E9E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E2E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDCDBDBDADADAD9D9D8D8D8D7D7D6D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCCCCCCCBCBCACAC9C9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C3C2C2C1C1C0C0BFBFBFBE
BEBDBDBCBCBBBBBBBABAB9B9B8B8B7B7B6B6B6B5B5B4B4B3B3B2B2B1B1B1B0B0AFAFAEAEADADACAC
ABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A0
>
<
0F0F10101011111212131314141515161617171819191A1A1B1C1C1D1D1E1F1F2021212223232425
252627272829292A2B2C2C2D2E2E2F303131323334343536373738393A3A3B3C3D3D3E3F40414142
4344454546474849494A4B4C4D4D4E4F5051525253545556575758595A5B5C5D5D5E5F6061626363
6465666768696A6A6B6C6D6E6F70717272737475767778797A7B7B7C7D7E7F808182838485868687
88898A8B8C8D8E8F90919293949495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9A9AAABACAD
AEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6
>
4 %_Br
<
C5C5C5C5C6C6C7C7C8C8C8C8C9C9C9CACBCBCCCCCCCCCCCCCDCDCECECFCFD0D0D1D1D1D1D1D2D2D2
D3D3D3D4D4D4D4D4D4D5D5D5D5D5D6D6D6D6D7D6D7D7D7D7D7D8D8D8D9D9D9DAD9DADADADADADADA
DADADBDBDADBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDADBDBDADBDA
DADADADADADADADADADAD9D9D9D9D8D8D8D8D8D7D7D7D7D7D7D6D6D6D6D6D6
>
<
3032343436383A3B3D3F3F4143444648494B4D4F4F51535557595B5C5E6062646567686A6C6E7072
7476787A7D7F81838587898B8D8D8E9092949597999A9C9E9FA1A2A3A5A6A8A9ABACAEAFB0B1B2B3
B4B5B6B7B7B8B9BABBBCBDBEBFC0C0C1C2C2C3C4C4C5C6C7C7C8C9C9C9CACACBCCCCCDCDCECECFCF
CFD0D0D0D1D1D1D2D2D2D3D3D4D3D4D4D4D5D5D5D6D6D6D6D6D6D6D6D6D7D7
>
<
232120201F1E1C1B18171716141312100F0E0D0C0C09080706050402010000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
0
<
0000010101020203030304040505060606070708080809090A0A0B0B0B0C0C0D0D0E0E0E0F0F1010
1111111212131314141415151616171718181819191A1A1B1B1C1C1C1D1D1E1E1F1F202020212122
22232324242425252626272728282829292A2A2B2B2C2C2D2D2D2E2E2F2F30303131323232333334
3435353636373737383839393A3A3B3B3C3C3C3D3D3E3E3F3F404041414242
>
<
A09F9E9E9D9C9B9A99989897969594939291908F8F8E8D8C8B8A89888786858483828281807F7E7D
7C7B7A79787776757473727170706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756
555453525251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F
2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
>
<
C6C6C6C6C6C6C6C6C7C7C7C7C7C7C7C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9
C9C9C9C9C9C9C9CACACACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCF
D0D0D0D0D0D0D0D0D0D0D0D0D0D1D1D1D1D1D1D1D1D1D1D1D1D2D2D2D2D2D2
>
4 %_Br
[
0 0.992157 1 0 1 0 0 2 33.3333 0 %_BS
%_0 0.992157 1 0 1 0 0 2 33.3333 0 Bs
0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 %_BS
%_0 0.619608 1 0 1 0.498039 0 2 42.6471 20.0599 Bs
0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 %_BS
%_0 0.266667 1 0 1 0.74902 0 2 47.0588 40.4192 Bs
0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 %_BS
%_0.509804 0 1 0 0.45098 0.972549 0.058824 2 56.7164 58.982 Bs
0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 %_BS
%_0.772549 0.188235 0.137255 0 0 0.627451 0.776471 2 51.5625 80.8383 Bs
0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 %_BS
%_0.839216 0.843137 0 0 0.258824 0.062745 0.823529 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Offset Squares Pattern)
(Offset Squares Pattern) 0 0 55.0781 55.0801 [
%AI3_Tile
(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 55.0801 L
55.0781 55.0801 L
55.0781 0 L
0 0 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa
 0.043137 0 0.713725 0 1 1 0.4 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
26.1436 52.3262 m
26.1436 29.4307 L
3.03125 29.4307 L
3.03125 52.3262 L
26.1436 52.3262 L
f
25.0264 50.123 m
5.89063 50.123 L
5.89063 32.4961 L
25.0264 32.4961 L
25.0264 50.123 L
f
*U
*u
5.89063 50.123 m
25.0264 50.123 L
25.0264 32.4961 L
5.89063 32.4961 L
5.89063 50.123 L
n
10.0313 34.2578 m
24.1338 34.2578 L
24.1338 48.3613 L
10.0313 48.3613 L
10.0313 34.2578 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa
 0 0.501961 0.984314 0 0.968627 0.576471 0.117647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
22.4082 48.793 m
8.30566 48.793 L
8.30566 34.6895 L
22.4082 34.6895 L
22.4082 48.793 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 Xa
 0.003922 0.984314 0.976471 0 0.929412 0.12549 0.141176 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
52.6943 24.7852 m
52.6943 1.67578 L
28.9355 1.67578 L
28.9355 24.7852 L
52.6943 24.7852 L
f
47.6777 22.582 m
30.0527 22.582 L
30.0527 4.95703 L
47.6777 4.95703 L
47.6777 22.582 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
 0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
30.0527 22.582 m
50.6982 22.582 L
50.6982 4.95703 L
30.0527 4.95703 L
30.0527 22.582 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa
 0.501961 0 0.992157 0 0.54902 0.776471 0.247059 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
47.4199 21.252 m
32.2393 21.252 L
32.2393 6.50293 L
47.4199 6.50293 L
47.4199 21.252 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa
 0.698039 0.14902 0 0 0.160784 0.670588 0.886275 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
27.5391 27.5391 m
27.5391 0 L
0 0 L
0 27.5391 L
27.5391 27.5391 L
f
25.4316 26.1445 m
2.75293 26.1445 L
2.75293 2.16992 L
25.4316 2.16992 L
25.4316 26.1445 L
f
*U
*u
4.95605 7.40039 m
22.582 7.40039 L
22.582 25.0273 L
4.95605 25.0273 L
4.95605 7.40039 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa
 0.188235 0 0.980392 0 0.85098 0.878431 0.129412 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
22.582 5.67383 m
4.95605 5.67383 L
4.95605 25.0273 L
22.582 25.0273 L
22.582 5.67383 L
f
20.3887 21.3281 m
7.58105 21.3281 L
7.58105 10.0313 L
20.3887 10.0313 L
20.3887 21.3281 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa
 0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
6.93555 8.73633 m
21.0371 8.73633 L
21.0371 22.8379 L
6.93555 22.8379 L
6.93555 8.73633 L
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.623529 0 0.003922 0 0.2 0.776471 0.956863 Xa
 0.623529 0 0.003922 0 0.2 0.776471 0.956863 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
55.0781 55.0801 m
55.0781 27.5391 L
27.5391 27.5391 L
27.5391 55.0801 L
55.0781 55.0801 L
f
52.3252 50.9688 m
30.292 50.9688 L
30.292 28.9355 L
52.3252 28.9355 L
52.3252 50.9688 L
f
*U
*u
30.292 50.9688 m
52.3252 50.9688 L
52.3252 28.9355 L
30.292 28.9355 L
30.292 50.9688 L
n
32.4951 30.0527 m
50.1221 30.0527 L
50.1221 47.6777 L
32.4951 47.6777 L
32.4951 30.0527 L
n
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0.043137 0 0.713725 0 1 1 0.4 Xa
 0.043137 0 0.713725 0 1 1 0.4 XA
) @
(
%AI6_BeginPatternLayer
*u
0 J 0 j 1 w 4 M []0 d0 XR
50.1221 30.0527 m
32.4951 30.0527 L
32.4951 48.9727 L
50.1221 48.9727 L
50.1221 30.0527 L
f
*U
%AI6_EndPatternLayer
) &
(0 O 0 R 0 0.901961 0 0 1 0.2 0.6 Xa
 0 0.901961 0 0 1 0.2 0.6 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
34.9063 33.749 m
49.0078 33.749 L
49.0078 47.8506 L
34.9063 47.8506 L
34.9063 33.749 L
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed Brush Pat)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7240.8833 9590.9551 m
-7149.0479 9590.9551 L
-7149.0479 9586.6758 L
-7240.8833 9586.6758 L
-7240.8833 9590.9551 L
n
0 O
0.698039 0.67451 0.639216 0.741176 0.137255 0.121569 0.12549 Xa
-7240.6631 9588.2754 m
-7241 9588.3418 -7240.4814 9588.5313 -7240.8833 9588.3887 C
-7240.8379 9588.2705 -7240.7725 9588.1816 -7240.6631 9588.2754 C
f
-7150.1675 9588.4414 m
-7151.2529 9589.2041 -7152.6816 9588.4336 -7153.8701 9588.9199 C
-7154.0098 9588.9521 -7153.8354 9588.502 -7154.1484 9588.6025 C
-7155.3008 9589.1953 -7157.1162 9588.8418 -7158.5195 9588.3848 C
-7158.4346 9588.2666 L
-7158.7021 9588.1816 -7159.0283 9588.5723 -7159.3115 9588.5176 C
-7159.3135 9588.4395 -7159.2207 9588.4063 -7159.2861 9588.2979 C
-7159.3574 9588.5352 -7159.7979 9588.4082 -7159.9189 9588.584 C
-7160.0303 9588.4922 -7160.0195 9588.3047 -7160.1641 9588.2002 C
-7160.3262 9588.4697 L
-7160.7769 9589.1094 -7161.4209 9588.4258 -7162.0361 9588.7559 C
-7162.0063 9588.6934 -7161.9453 9588.6445 -7161.9941 9588.584 C
-7162.9814 9588.9727 -7164.2168 9588.8994 -7165.3208 9589.043 C
-7165.2769 9588.9482 -7165.2363 9588.7754 -7165.3008 9588.668 C
-7165.3555 9588.9512 -7165.6963 9589.0225 -7165.9922 9589.0781 C
-7166.1255 9588.7871 -7166.4995 9589.3438 -7166.8467 9589.1826 C
-7166.8169 9589.1191 L
-7167.0732 9589.4238 -7167.1973 9588.9434 -7167.4053 9589.3086 C
-7167.5684 9589.0801 L
-7167.6807 9589.4902 -7167.9395 9588.8672 -7168.1514 9589.0762 C
-7168.1445 9589.1602 L
-7168.3442 9589.2598 -7168.4482 9589.0537 -7168.6338 9589.123 C
-7168.6514 9589.0762 L
-7169.0854 9589.1826 -7169.3379 9588.9551 -7169.3271 9589.2754 C
-7169.4795 9589.0186 -7168.9063 9589.1582 -7169.1455 9588.7842 C
-7170.5732 9589.1152 -7172.0459 9589.0498 -7173.4834 9589.0566 C
-7173.6465 9588.9277 -7173.7505 9588.8887 -7173.7871 9588.7666 C
-7173.9307 9588.832 -7174.3281 9588.8262 -7174.4585 9588.9902 C
-7174.4102 9588.9834 -7174.5513 9588.8262 -7174.6274 9588.8105 C
-7174.8887 9588.6895 -7174.9131 9589.1621 -7175.2002 9589.0186 C
-7175.0859 9588.9336 -7175.0469 9588.8301 -7175.0854 9588.7109 C
-7175.3301 9588.9609 -7175.6577 9588.9209 -7175.9473 9589.002 C
-7175.9023 9588.9482 -7175.8325 9588.916 -7175.8433 9588.8154 C
-7176.1602 9589.0986 -7176.4209 9588.7559 -7176.6982 9588.9346 C
-7176.5947 9588.75 L
-7177.0415 9588.5254 -7176.7266 9589.1367 -7177.1128 9589.0039 C
-7177.02 9588.9453 -7177.0527 9588.873 -7177.0361 9588.7979 C
-7177.3965 9589.1338 -7177.9795 9589.0225 -7178.3389 9589.1367 C
-7178.3174 9589.1113 -7178.3232 9589.0605 Y
-7178.7148 9589.1025 -7179.1245 9588.998 -7179.5552 9589.1445 C
-7179.7119 9589.0625 -7179.5039 9588.6934 -7179.9185 9588.7617 C
-7179.9033 9589.1328 -7180.6221 9588.9141 -7180.3779 9589.334 C
-7180.7319 9589.2734 -7181.2925 9589.1338 -7181.5283 9589.2598 C
-7181.3691 9589.1191 -7181.7007 9588.8066 -7181.4063 9588.7754 C
-7181.6289 9588.5498 L
-7181.5957 9588.3984 -7181.3999 9588.6016 -7181.4707 9588.4102 C
-7181.6182 9588.4258 -7182.0479 9588.5723 -7182.1797 9588.5117 C
-7182.4531 9588.7393 -7182.7041 9589.1641 -7183.1465 9589.2109 C
-7182.9385 9589.0664 -7183.2646 9588.8018 -7183.1235 9588.7383 C
-7183.7407 9589.4482 L
-7183.8877 9589.4658 -7183.7725 9589.1563 -7183.9854 9589.2529 C
-7183.9746 9589.3506 -7184.0674 9589.4121 -7184.1318 9589.4922 C
-7184.1875 9589.4482 -7184.7441 9589.584 -7184.8081 9589.2178 C
-7184.8735 9589.0762 -7184.5684 9589.1426 -7184.7314 9589.0117 C
-7185.0029 9589.0146 -7185.0151 9589.1406 -7185.2871 9589.1465 C
-7185.2925 9589.0977 L
-7185.4717 9589.043 -7185.8213 9589.2529 -7185.6265 9589.4551 C
-7185.5015 9589.4658 -7185.6738 9589.2354 -7185.4888 9589.3418 C
-7185.6152 9589.5537 -7185.9312 9589.6133 -7186.2031 9589.6162 C
-7186.1104 9589.5586 -7186.1216 9589.4609 -7186.0845 9589.3574 C
-7186.4497 9589.6445 -7186.8369 9589.7354 -7187.2451 9589.8555 C
-7187.2515 9590.0293 -7187.0928 9589.5391 -7187.0327 9589.6309 C
-7187.5557 9589.3896 -7188.1128 9589.9727 -7188.5479 9589.6201 C
-7188.4766 9589.5898 -7188.5098 9589.8672 -7188.5146 9589.8184 C
-7188.7666 9589.7969 -7188.7549 9589.5449 -7188.9189 9589.6377 C
-7188.9355 9589.4902 -7189.1255 9589.6855 -7189.2944 9589.7305 C
-7189.3818 9589.8369 -7189.3384 9589.6582 -7189.1914 9589.6426 C
-7189.4268 9589.7666 -7190.3691 9589.9941 -7190.9131 9589.7793 C
-7190.9023 9589.877 -7191.2471 9590.1377 -7191.3721 9590.127 C
-7191.3232 9589.8984 L
-7191.4375 9589.7617 -7191.7422 9589.918 -7191.7632 9589.7227 C
-7192.0303 9590 -7190.7344 9589.4863 -7191.0957 9589.7002 C
-7191.1895 9589.5098 -7191.5991 9590.0645 -7191.5215 9589.7529 C
-7191.7725 9589.7617 -7192.0161 9590.0186 -7192.2559 9589.8047 C
-7192.1865 9589.8418 -7192.0522 9589.4873 -7192.2549 9589.5039 C
-7192.6123 9589.5449 -7192.3564 9589.6133 -7192.6465 9589.6895 C
-7192.8281 9589.7832 L
-7192.8398 9590.0059 -7193.1475 9589.7529 -7193.0146 9590.002 C
-7193.0586 9589.8184 -7193.5337 9590.1152 -7193.4971 9589.7461 C
-7193.4473 9589.4551 L
-7193.6016 9589.4766 -7193.7002 9589.7617 -7193.8213 9589.8896 C
-7193.8418 9589.8633 -7193.8823 9589.8047 -7193.8745 9589.7578 C
-7193.8994 9590.2031 -7194.2432 9589.7207 -7194.4268 9590.0645 C
-7194.7505 9589.9102 -7195.2495 9590.0498 -7195.4023 9589.7734 C
-7195.6514 9589.9082 -7195.8784 9590.0674 -7196.1621 9589.9727 C
-7196.1055 9589.9307 -7196.0283 9589.918 -7196.0122 9589.8223 C
-7196.1904 9589.6914 -7196.2344 9589.8086 -7196.3975 9589.8809 C
-7196.3608 9589.8145 -7196.7539 9589.6201 -7196.9521 9589.4629 C
-7197.1992 9589.5957 -7197.1143 9589.8359 -7197.1392 9589.9824 C
-7197.3652 9589.543 -7197.8379 9590.2656 -7198.1211 9589.8672 C
-7198.0352 9589.8066 -7197.7598 9589.6514 -7197.9658 9589.541 C
-7198.1919 9589.1025 -7198.4219 9589.8643 -7198.7861 9589.6543 C
-7198.6968 9590.0186 L
-7198.8594 9589.793 -7199.2334 9590.2305 -7199.1963 9589.8594 C
-7199.3184 9589.9902 -7199.6265 9589.7383 -7199.5859 9590.0938 C
-7200.1846 9589.793 -7201.0425 9590.2754 -7201.4102 9589.6377 C
-7201.4961 9589.6973 -7201.7104 9589.6367 -7201.6665 9589.8193 C
-7201.5239 9590.0176 -7201.4673 9589.6777 -7201.4141 9589.8125 C
-7201.4912 9589.8232 -7201.5078 9589.9209 -7201.5161 9589.9697 C
-7201.7021 9589.8887 -7201.8486 9589.8633 -7201.6729 9589.5674 C
-7202.0869 9589.3477 -7202.1001 9590.1719 -7202.6274 9590.0322 C
-7202.6035 9589.8857 -7202.6436 9589.8301 -7202.7979 9589.8535 C
-7203.0903 9590.1055 L
-7203.4312 9590.0469 -7203.2842 9589.7705 -7203.2925 9589.5215 C
-7203.4746 9589.5645 -7203.6973 9589.5527 -7203.7803 9589.7383 C
-7204.0015 9589.4258 L
-7203.8398 9589.6514 -7204.1514 9589.5762 -7204.2368 9589.6367 C
-7204.1514 9589.5762 L
-7204.1846 9589.4697 -7204.3955 9589.5352 -7204.5024 9589.5664 C
-7204.4766 9589.7207 -7204.2617 9589.7832 -7204.1445 9589.8281 C
-7204.2373 9589.9375 -7204.3823 9589.9121 -7204.5059 9590.041 C
-7204.4648 9589.7969 -7204.8027 9589.8672 -7204.9473 9589.8418 C
-7205.1133 9589.7891 -7205.1348 9590.0605 -7205.1831 9590.0527 C
-7205.1875 9589.9258 -7205.4541 9590.0313 -7205.3247 9589.8535 C
-7205.2681 9589.8125 -7205.1953 9589.9766 -7205.1016 9589.8643 C
-7205.2109 9589.7705 -7205.1982 9589.5498 -7205.4258 9589.7109 C
-7205.5967 9589.832 -7205.3818 9590.1934 -7205.7061 9590.0391 C
-7205.6211 9589.9785 -7205.6055 9589.8809 -7205.5391 9589.793 C
-7205.8433 9589.666 L
-7205.8564 9589.8887 L
-7205.8975 9589.832 -7205.8691 9589.8125 -7205.8877 9589.7832 C
-7205.9785 9590.0176 -7206.3521 9589.8555 -7206.4209 9590.1191 C
-7206.5742 9590.1426 -7206.7441 9589.9648 -7206.8906 9589.9395 C
-7206.8623 9589.9199 L
-7207.0415 9589.7891 -7207.2793 9589.875 -7207.4297 9590.0254 C
-7207.4219 9589.9766 L
-7207.5195 9589.959 -7207.7505 9589.9941 -7207.8735 9590.125 C
-7208.1201 9589.957 -7207.9561 9589.2842 -7208.2295 9589.5645 C
-7208.48 9589.5723 -7208.6221 9589.9727 -7208.5215 9590.1152 C
-7208.9717 9589.9648 -7209.4834 9590.3281 -7209.9009 9589.9824 C
-7209.9658 9590.0723 -7209.9248 9590.1289 -7210.0586 9590.1816 C
-7210.7197 9590.0938 -7211.4551 9590.4453 -7211.9814 9590.0078 C
-7211.79 9589.9141 -7211.9688 9589.7842 -7211.9727 9589.6582 C
-7212.1309 9589.8574 -7212.1631 9589.4512 -7212.2197 9589.793 C
-7212.2041 9589.9941 -7212.2197 9590.0918 -7212.0337 9590.1729 C
-7212.4282 9590.2813 -7213.0283 9590.2813 -7213.2471 9590.0938 C
-7213.1377 9590.1865 -7213.2227 9590.248 -7213.3086 9590.3086 C
-7213.2803 9589.9873 -7213.5713 9589.9395 -7213.7915 9590.0527 C
-7213.8223 9590.248 L
-7213.9658 9590.0469 L
-7214.0503 9590.1094 -7214.0591 9590.457 -7214.2773 9590.2695 C
-7214.2891 9590.1934 -7214.3018 9590.1162 -7214.3418 9590.0605 C
-7214.5693 9590.2207 -7214.8906 9590.4922 -7215.1377 9590.3262 C
-7215.3398 9590.041 L
-7215.4453 9590.0723 -7215.6235 9590.2441 -7215.4375 9590.3262 C
-7215.8594 9590.1543 -7216.1309 9590.1328 -7216.2646 9589.8857 C
-7216.9912 9590.4873 -7218.0459 9590.5117 -7218.8906 9590.4688 C
-7218.8652 9590.3223 L
-7219.0923 9590.1855 -7218.9834 9590.5781 -7219.1416 9590.4766 C
-7219.0684 9590.3369 -7219.3145 9590.1729 -7219.1362 9590.002 C
-7219.4609 9589.8477 -7219.5547 9590.2559 -7219.7656 9590.3223 C
-7219.7979 9590.5146 -7219.5957 9590.1992 -7219.6367 9590.4434 C
-7219.6729 9590.5117 -7220.0859 9590.293 -7220.1362 9590.584 C
-7220.2178 9590.4697 -7220.1543 9590.2559 -7220.1104 9590.1377 C
-7220.3086 9590.2793 L
-7220.5513 9589.9395 -7219.7559 9589.6719 -7220.0107 9589.2529 C
-7220.1934 9589.2979 L
-7220.3682 9588.9941 -7219.71 9588.9551 -7220.1689 9588.8506 C
-7220.3682 9588.9941 -7220.5381 9589.416 -7220.3608 9589.5449 C
-7220.7754 9589.625 -7220.5527 9590.2383 -7220.9985 9590.2139 C
-7221.1201 9590.043 -7220.6416 9590.1729 -7220.7275 9589.9336 C
-7220.9375 9589.6992 -7221.1484 9590.0645 -7221.3354 9589.9824 C
-7221.1279 9590.0918 -7221.3032 9590.3857 -7221.4375 9590.4395 C
-7221.6641 9590.3018 -7221.29 9590.1641 -7221.6113 9590.1338 C
-7221.6641 9590.3018 -7221.9595 9590.4277 -7221.7041 9590.5449 C
-7221.8203 9590.9258 -7222.0381 9590.4395 -7222.2129 9590.7344 C
-7222.3174 9590.4658 -7221.8823 9590.1152 -7222.2354 9589.9814 C
-7222.1792 9590.2393 -7222.6704 9590.332 -7222.4839 9590.7139 C
-7222.6221 9590.6406 -7222.6367 9590.4375 -7222.5361 9590.2793 C
-7222.7334 9590.1201 -7223.0151 9590.75 -7223.0801 9590.2383 C
-7223.1479 9590.502 L
-7223.21 9590.416 -7223.2983 9590.3506 -7223.3994 9590.209 C
-7223.5732 9590.2041 -7223.96 9590.5664 -7223.9443 9590.168 C
-7224 9590.209 -7224.3975 9590.1914 -7224.2441 9590.4658 C
-7223.9971 9590.6338 -7223.96 9590.2656 -7223.8223 9590.6377 C
-7223.9971 9590.334 -7224.1787 9590.6777 -7224.3213 9590.7793 C
-7224.3447 9590.625 L
-7224.4297 9590.6855 -7224.6255 9590.6514 -7224.6787 9590.8184 C
-7224.6133 9590.7305 -7224.6475 9590.625 -7224.7148 9590.5879 C
-7224.8042 9590.8223 L
-7225.1494 9590.9395 -7224.8857 9590.4102 -7225.2217 9590.4785 C
-7224.9663 9590.2969 L
-7225.0225 9590.3359 -7225.1367 9590.1162 -7225.2979 9590.1895 C
-7225.3604 9590.4033 -7225.4775 9590.6602 -7225.5313 9590.8262 C
-7225.7207 9590.9199 -7225.6162 9590.585 -7225.8027 9590.8047 C
-7225.5586 9590.5469 L
-7225.5215 9590.4766 -7225.7231 9590.1934 -7225.9761 9590.1992 C
-7226.1377 9590.2734 -7226.3887 9590.582 -7226.1338 9590.6992 C
-7226.2607 9590.7031 -7226.4385 9590.5723 -7226.3379 9590.416 C
-7226.6255 9590.4902 -7226.2998 9590.6465 -7226.5479 9590.7793 C
-7226.6494 9590.6367 -7226.9658 9590.4336 -7227.1563 9590.2266 C
-7226.8975 9589.8682 L
-7227.0693 9589.8643 L
-7226.8467 9589.5781 -7227.1826 9589.6465 -7227.0566 9589.3438 C
-7227.1743 9589.2969 -7227.3169 9589.3994 -7227.4307 9589.4785 C
-7227.0864 9589.9629 -7227.8159 9590.1406 -7227.7158 9590.582 C
-7228.1875 9590.7031 -7228.0107 9589.5078 -7228.5024 9590.1992 C
-7228.4219 9590.3145 -7228.6533 9590.6504 -7228.3564 9590.5225 C
-7228.6494 9590.4746 -7228.5557 9590.9658 -7228.9014 9590.7832 C
-7228.6455 9590.6016 -7229.1763 9590.3359 -7228.8066 9590.0723 C
-7228.8311 9590.2178 -7228.6001 9590.1826 -7228.5435 9590.1426 C
-7228.6641 9589.9727 -7228.5186 9589.6973 -7228.8184 9589.6973 C
-7229.0015 9589.7393 -7229.2524 9589.748 -7229.2158 9589.9785 C
-7229.2085 9590.2314 -7228.9365 9589.9512 -7229.0537 9590.207 C
-7229.4185 9590.2949 -7229.4795 9589.9102 -7229.6304 9590.3594 C
-7229.3999 9590.3232 -7229.3423 9590.584 -7229.3467 9590.7578 C
-7229.6143 9590.8633 L
-7229.5625 9590.6953 L
-7229.9922 9590.5742 -7229.6895 9591 -7230.1055 9590.9551 C
-7230.3008 9590.623 L
-7230.2017 9590.3369 -7229.6953 9590.75 -7229.7695 9590.2842 C
-7230.04 9590.2656 -7230.1299 9590.502 -7230.3848 9590.3818 C
-7230.3281 9590.3418 -7230.2505 9590.3301 -7230.1943 9590.2891 C
-7230.2915 9590.2734 -7230.3877 9589.6563 -7230.7734 9590.0176 C
-7230.9727 9590.1582 -7230.8262 9590.1826 -7230.8311 9590.3574 C
-7231.2656 9590.4102 -7231.3955 9590.5879 -7231.6753 9590.6152 C
-7231.6177 9590.2754 -7232.1699 9590.582 -7231.8608 9590.2344 C
-7231.7188 9590.4336 -7231.0903 9590.4141 -7230.9365 9590.0898 C
-7231.0947 9589.6865 -7230.5952 9590.1465 -7230.5024 9589.7383 C
-7230.8506 9589.7285 -7230.8335 9589.332 -7230.8896 9589.0723 C
-7230.9863 9589.0537 -7231.0801 9589.1641 -7231.1377 9589.2041 C
-7231.1787 9589.4482 -7231.0522 9589.4453 -7231.0449 9589.6973 C
-7231.4336 9589.6309 -7231.8081 9589.7666 -7232.0225 9590.0059 C
-7232.1523 9589.8848 -7232.1113 9589.6406 -7231.9575 9589.6162 C
-7232.4199 9589.6895 -7232.9141 9589.6563 -7233.3535 9589.582 C
-7233.0693 9589.9814 -7233.8433 9589.6758 -7233.6494 9590.0078 C
-7233.4141 9590.0977 -7233.2119 9590.3818 -7233.3418 9590.5605 C
-7233.4888 9590.5352 -7233.3369 9590.3857 -7233.3984 9590.3008 C
-7233.5859 9590.5186 -7233.6895 9589.9512 -7233.8735 9590.2949 C
-7233.4512 9590.166 -7233.7915 9589.8086 -7233.7139 9589.4961 C
-7234.0186 9589.6719 -7233.7007 9589.2734 -7234.0024 9589.2734 C
-7234.3057 9589.4473 -7234.6787 9589.584 -7235.0161 9589.6514 C
-7235.4399 9589.3555 -7236.0898 9589.6465 -7236.4683 9589.6582 C
-7236.6665 9589.5 -7236.5322 9589.1465 -7236.7471 9589.085 C
-7236.9995 9589.0918 -7236.5601 9589.4658 -7236.9336 9589.3047 C
-7236.8975 9589.2344 L
-7237.0107 9589.3154 -7237.5825 9588.9941 -7237.6929 9589.502 C
-7237.5776 9589.1191 L
-7237.6475 9589.084 -7237.7119 9589.1719 -7237.7695 9589.2129 C
-7237.7725 9589.0879 -7237.8535 9588.9746 -7237.7402 9588.8926 C
-7237.9707 9588.6289 -7238.2241 9588.9346 -7238.4746 9588.9453 C
-7238.3135 9589.1719 L
-7238.7422 9589.3496 -7239.0293 9589.125 -7239.4443 9589.2041 C
-7239.4316 9588.9824 L
-7239.6787 9589.1152 L
-7239.6182 9588.8994 -7239.8447 9588.7617 -7239.9751 9588.9414 C
-7239.3335 9588.3984 L
-7239.1553 9588.5293 -7239.5283 9588.666 -7239.4165 9588.8848 C
-7239.3213 9589.0762 -7238.9375 9589.0146 -7238.8755 9588.8018 C
-7239.0225 9588.7773 -7239.0293 9588.8262 -7239.1436 9588.9063 C
-7239.1919 9588.5977 -7238.9688 9588.6094 -7238.8584 9588.4033 C
-7238.9355 9588.416 -7239.0449 9588.3223 -7239.0615 9588.4199 C
-7238.9102 9588.2695 -7238.7578 9588.2461 -7238.5059 9588.2383 C
-7238.6763 9588.3594 -7238.4131 9588.4297 -7238.4775 9588.5176 C
-7238.4575 9588.2461 -7238.2168 9588.1621 -7237.9053 9588.2383 C
-7237.6831 9588.5527 -7237.3208 9588.0361 -7236.96 9588.123 C
-7237.1064 9588.3984 -7237.2935 9588.6191 -7237.5127 9588.7305 C
-7237.2861 9588.8682 -7237.2607 9588.7227 -7237.0337 9588.8613 C
-7236.9238 9588.6563 -7236.8457 9588.3418 -7236.5503 9588.2168 C
-7236.5342 9588.4199 L
-7236.2666 9588.3154 -7236.2666 9588.0146 -7235.9258 9588.0723 C
-7235.3418 9588.1719 -7234.7407 9588.1719 -7234.2949 9588.1973 C
-7234.2783 9588.3994 L
-7234.0303 9587.9658 -7233.4521 9588.2393 -7233.1182 9588.0469 C
-7232.5503 9588.2422 -7231.8848 9587.8535 -7231.5938 9588.2031 C
-7230.5913 9588.0469 -7229.7148 9587.8945 -7228.6768 9587.9688 C
-7228.8516 9588.2637 L
-7228.6655 9588.0469 -7228.7305 9588.4336 -7228.5479 9588.3896 C
-7228.7578 9588.1543 -7228.2949 9588.084 -7228.1665 9587.9033 C
-7227.7041 9588.1328 -7227.1104 9587.8818 -7226.7007 9587.6758 C
-7226.6846 9587.8789 L
-7226.2705 9587.498 -7225.7759 9587.832 -7225.2598 9587.8945 C
-7225.2007 9587.9785 -7225.1074 9588.1689 -7224.9536 9588.1465 C
-7224.6738 9587.8184 -7224.5273 9587.8418 -7224.1167 9587.6367 C
-7223.8169 9587.6367 -7223.3301 9587.7178 -7223.0254 9587.8457 C
-7221.8975 9587.3848 -7220.7456 9587.6797 -7219.5732 9587.4023 C
-7219.4888 9587.6406 L
-7218.3521 9587.1309 -7216.9541 9587.5938 -7215.9839 9587.332 C
-7216.0776 9587.7393 L
-7215.7734 9587.8643 -7215.3843 9587.6328 -7215.4619 9587.3438 C
-7215.1567 9587.4688 -7214.7007 9587.1465 -7214.5068 9587.4814 C
-7214.1953 9587.5566 -7214.1255 9587.293 -7213.8662 9587.2383 C
-7213.2422 9587.3926 -7213.0107 9587.3574 -7212.4224 9587.2813 C
-7212.5684 9587.2559 L
-7212.6328 9587.3457 -7212.6387 9587.5186 -7212.4922 9587.5449 C
-7212.2725 9587.4307 -7211.6846 9587.6543 -7211.9033 9587.168 C
-7211.2754 9587.4482 -7210.4385 9586.9395 -7209.8271 9587.3184 C
-7209.8789 9587.1855 -7209.7246 9587.1602 -7209.6602 9587.0703 C
-7209.1089 9587.0645 -7208.5293 9587.3359 -7208.0898 9587.1094 C
-7208.0024 9587.1758 -7208.2295 9587.3359 -7208.0049 9587.3496 C
-7207.8721 9587.2979 -7208.0024 9587.1758 -7207.8384 9587.1016 C
-7206.9453 9586.8535 -7206.0303 9587.3574 -7205.2188 9587.293 C
-7203.7754 9587.0361 -7202.2695 9587.166 -7200.8867 9587.123 C
-7200.9023 9587.2207 L
-7200.4395 9586.8477 -7199.8159 9587.6025 -7199.4463 9587.041 C
-7199.3369 9587.1338 -7199.0283 9587.085 -7199.1094 9587.2734 C
-7198.7407 9587.0098 -7198.0771 9587.5215 -7197.5439 9587.1865 C
-7197.5928 9587.1777 -7197.6211 9587.1973 -7197.6777 9587.2393 C
-7197.1392 9587.4551 -7196.6641 9587.1602 -7196.0957 9587.3555 C
-7196.1533 9587.3975 -7196.2583 9587.4277 -7196.2754 9587.5254 C
-7196.0557 9587.7129 -7195.7549 9587.1133 -7195.6348 9587.584 C
-7195.5088 9587.5801 -7195.5449 9587.3477 -7195.6221 9587.3613 C
-7194.3779 9587.5449 -7193.0498 9587.2441 -7191.7549 9587.1367 C
-7190.8271 9587.418 -7191.6982 9587.9297 -7190.9663 9587.5781 C
-7190.9063 9587.6689 -7190.9229 9587.3984 -7190.9131 9587.4961 C
-7190.6299 9587.3643 -7190.4717 9588.0215 -7190.2754 9587.7754 C
-7190.3564 9587.4863 -7190.1445 9587.6133 -7190.1387 9587.4375 C
-7189.5713 9587.625 -7189.4575 9587.8857 -7189.0098 9587.666 C
-7189.0435 9587.8184 L
-7188.5186 9587.3887 -7187.9102 9587.6191 -7187.4673 9587.123 C
-7184.5728 9587.0322 -7181.7983 9586.7578 -7178.9761 9586.7002 C
-7176.1865 9586.7949 -7173.4551 9586.5723 -7170.6221 9586.8359 C
-7169.9585 9587.2354 -7169.9087 9587.2246 -7169.1797 9587.0625 C
-7169.2095 9587.127 -7169.2549 9587.1426 -7169.2061 9587.2031 C
-7169.1699 9586.875 -7168.6929 9587.1719 -7168.6235 9586.8594 C
-7167.5762 9586.9199 -7166.6113 9586.8301 -7165.5337 9586.8281 C
-7165.7041 9586.8633 -7165.7896 9587.1309 -7165.5869 9587.1094 C
-7165.3755 9586.8994 L
-7165.3408 9586.9922 L
-7165.2021 9586.9434 -7165.0513 9586.7813 -7165.1943 9586.6758 C
-7162.4873 9586.3926 -7159.8242 9587.0498 -7157.1729 9586.9697 C
-7156.5439 9587.1064 -7155.6475 9586.9814 -7154.9629 9586.9141 C
-7152.9355 9587.3506 -7151.1084 9587.7041 -7149.0479 9587.3984 C
-7149.3174 9588.2461 -7150.1675 9588.4414 V
f
-7240.2578 9588.2422 m
-7240.1855 9588.4063 -7239.9497 9588.4961 -7240.1377 9588.7139 C
-7240.1611 9588.5605 -7240.2822 9588.3887 -7240.2578 9588.2422 C
f
-7233.9619 9589.9297 m
-7233.9536 9589.8809 -7233.8721 9589.9961 -7233.8521 9590.0225 C
-7233.9297 9590.0352 -7234.0024 9590.1729 -7234.0645 9590.0879 C
-7233.9854 9590.0762 -7233.9976 9589.998 -7233.9619 9589.9297 C
f
-7232.3521 9590.0273 m
-7232.3765 9590.1729 -7232.7207 9590.2891 -7232.9238 9590.3066 C
-7232.3521 9590.0273 L
f
-7230.8521 9590.6289 m
-7230.7227 9590.752 -7230.7583 9590.8193 -7230.9326 9590.8154 C
-7230.9453 9590.7383 -7230.8877 9590.6992 -7230.8521 9590.6289 C
f
-7230.7456 9590.2969 m
-7230.6211 9590.293 -7230.5591 9590.3789 -7230.4985 9590.4629 C
-7230.5029 9590.3369 -7230.7871 9590.541 -7230.7456 9590.2969 C
f
-7227.4893 9590.7207 m
-7227.4111 9590.709 -7227.2417 9590.5879 -7227.1689 9590.75 C
-7227.2505 9590.6367 -7227.5498 9590.9346 -7227.4893 9590.7207 C
f
-7225.9761 9590.5 m
-7225.9272 9590.5098 -7225.9072 9590.5361 -7225.8506 9590.4961 C
-7225.7607 9590.5625 -7225.8555 9590.6689 -7225.9312 9590.6826 C
-7225.9761 9590.5 L
f
-7198.4287 9589.9141 m
-7198.5923 9589.9863 L
-7198.5684 9589.8418 L
-7198.4287 9589.9141 L
f
-7186.3574 9589.9063 m
-7186.1943 9589.8145 -7186.2441 9590.043 -7186.2168 9590.0645 C
-7186.3643 9590.0801 -7186.1621 9589.8848 -7186.3574 9589.9063 C
f
-7179.8486 9589.1777 m
-7179.8984 9589.1816 L
-7179.8818 9588.8818 L
-7179.8486 9589.1777 L
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 5 pt. Flat/ Adobe ArtOnPath Br) -
(ush Tool/ Charcoal/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat/ / / / / 5 0.137255 0.121569 0.12549 /  ) -
(1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 1 1 1 Xa
(White)
Pc
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
(Black)
Pc
0 0.992157 1 0 1 0 0 Xa
(RGB Red)
Pc
0.062745 0 0.964706 0 1 1 0 Xa
(RGB Yellow)
Pc
0.627451 0 1 0 0 1 0 Xa
(RGB Green)
Pc
0.517647 0 0.12549 0 0 1 1 Xa
(RGB Cyan)
Pc
0.882353 0.768627 0 0 0 0 1 Xa
(RGB Blue)
Pc
0.270588 0.815686 0 0 1 0 1 Xa
(RGB Magenta)
Pc
0.168627 0.980392 0.92549 0.066667 0.756863 0.152941 0.176471 Xa
(R=193 G=39 B=45)
Pc
0.003922 0.992157 0.972549 0 0.929412 0.109804 0.141176 Xa
(R=237 G=28 B=36)
Pc
0 0.796078 0.968627 0 0.945098 0.352941 0.141176 Xa
(R=241 G=90 B=36)
Pc
0 0.501961 0.984314 0 0.968627 0.576471 0.117647 Xa
(R=247 G=147 B=30)
Pc
0 0.34902 0.870588 0 0.984314 0.690196 0.231373 Xa
(R=251 G=176 B=59)
Pc
0.047059 0 0.933333 0 0.988235 0.933333 0.129412 Xa
(R=252 G=238 B=33)
Pc
0.188235 0 0.980392 0 0.85098 0.878431 0.129412 Xa
(R=217 G=224 B=33)
Pc
0.501961 0 0.992157 0 0.54902 0.776471 0.247059 Xa
(R=140 G=198 B=63)
Pc
0.745098 0 0.996078 0 0.223529 0.709804 0.290196 Xa
(R=57 G=181 B=74)
Pc
0.862745 0.176471 1 0.039216 0 0.572549 0.270588 Xa
(R=0 G=146 B=69)
Pc
0.901961 0.333333 0.988235 0.258824 0 0.407843 0.215686 Xa
(R=0 G=104 B=55)
Pc
0.760784 0 0.74902 0 0.133333 0.709804 0.45098 Xa
(R=34 G=181 B=115)
Pc
0.784314 0.090196 0.458824 0 0 0.662745 0.615686 Xa
(R=0 G=169 B=157)
Pc
0.698039 0.14902 0 0 0.160784 0.670588 0.886275 Xa
(R=41 G=171 B=226)
Pc
0.87451 0.52549 0 0 0 0.443137 0.737255 Xa
(R=0 G=113 B=188)
Pc
0.992157 0.964706 0.035294 0.003922 0.180392 0.192157 0.572549 Xa
(R=46 G=49 B=146)
Pc
1 1 0.262745 0.247059 0.105882 0.078431 0.392157 Xa
(R=27 G=20 B=100)
Pc
0.745098 0.984314 0.007843 0.003922 0.4 0.176471 0.568627 Xa
(R=102 G=45 B=145)
Pc
0.494118 0.992157 0.011765 0 0.576471 0.152941 0.560784 Xa
(R=147 G=39 B=143)
Pc
0.34902 1 0.372549 0.109804 0.619608 0 0.364706 Xa
(R=158 G=0 B=93)
Pc
0.117647 1 0.494118 0.007843 0.831373 0.078431 0.352941 Xa
(R=212 G=20 B=90)
Pc
0 0.968627 0.203922 0 0.929412 0.117647 0.47451 Xa
(R=237 G=30 B=121)
Pc
0.227451 0.27451 0.4 0 0.780392 0.698039 0.6 Xa
(R=199 G=178 B=153)
Pc
0.4 0.427451 0.52549 0.066667 0.6 0.52549 0.458824 Xa
(R=153 G=134 B=117)
Pc
0.505882 0.529412 0.607843 0.235294 0.45098 0.388235 0.341176 Xa
(R=115 G=99 B=87)
Pc
0.576471 0.603922 0.639216 0.419608 0.32549 0.278431 0.254902 Xa
(R=83 G=71 B=65)
Pc
0.227451 0.384314 0.635294 0.011765 0.776471 0.611765 0.427451 Xa
(R=198 G=156 B=109)
Pc
0.317647 0.490196 0.741176 0.098039 0.65098 0.486275 0.321569 Xa
(R=166 G=124 B=82)
Pc
0.360784 0.572549 0.839216 0.227451 0.54902 0.384314 0.223529 Xa
(R=140 G=98 B=57)
Pc
0.392157 0.639216 0.933333 0.356863 0.458824 0.298039 0.141176 Xa
(R=117 G=76 B=36)
Pc
0.415686 0.698039 0.968627 0.490196 0.376471 0.219608 0.07451 Xa
(R=96 G=56 B=19)
Pc
0.478431 0.733333 0.835294 0.682353 0.258824 0.129412 0.043137 Xa
(R=66 G=33 B=11)
Pc
Bb
2 (Linear Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient 1)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient 1)
Pc
Bb
2 (Linear Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Linear Gradient 2)
Pc
Bb
0 0 0 0 Bh
2 (Radial Gradient 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Radial Gradient 2)
Pc
(Offset Squares Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Offset Squares Pattern)
Pc
0.682353 0.356863 0 0 0.278431 0.568627 0.878431 Xa
(R=71 G=145 B=224 1)
Pc
0 0.490196 0.992157 0 1 0.588235 0.07451 Xa
(R=255 G=150 B=19 1)
Pc
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
(R=155 G=215 B=6 1)
Pc
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
(R=241 G=248 B=214 1)
Pc
0 g
(K=100)
Pc
0.1 g
(K=90)
Pc
0.2 g
(K=80)
Pc
0.3 g
(K=70)
Pc
0.4 g
(K=60)
Pc
0.5 g
(K=50)
Pc
0.6 g
(K=40)
Pc
0.7 g
(K=30)
Pc
0.8 g
(K=20)
Pc
0.9 g
(K=10)
Pc
0.95 g
(R=241 G=241  B=242)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
u
U
u
U
u
U
u
U
u
U
u
U
U
u
U
u
U
u
U
u
0 O
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
0 J 0 j 1 w 4 M []0 d0 XR
1874.6533 2350.2549 m
1866.5596 2350.165 L
1861.999 2593.5244 1664.4131 2789.666 1420.4912 2791.8945 C
1526.834 2667.0942 L
1418.3672 2532.8301 L
1521.1416 2531.7344 1604.4766 2449.6035 1607.4912 2347.2998 C
1600.9004 2347.2266 L
1607.5781 2341.9751 L
1607.5781 2341.8369 1607.583 2341.6997 1607.583 2341.5625 C
1608.1016 2341.5625 L
1743.2363 2235.2788 L
1864.7178 2341.5625 L
1866.6484 2341.5625 L
1866.6484 2342.123 1866.6406 2342.6816 1866.6387 2343.2422 C
1874.6533 2350.2549 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
1743.0225 2243.3936 m
1613.8086 2345.022 L
1613.7354 2347.4824 L
1610.7246 2449.561 1531.5078 2531.2202 1431.0205 2538.5518 C
1531.6934 2663.168 L
1534.9521 2667.1997 L
1531.5889 2671.1465 L
1434.3105 2785.3096 L
1545.4092 2780.8857 1649.5527 2735.6387 1728.8906 2657.0176 c
1811.4648 2575.1826 1858.1367 2466.1665 1860.3164 2350.0479 C
1860.3896 2346.0757 L
1743.0225 2243.3936 L
1743.0225 2243.3936 L
f
1742.8086 2251.5098 m
1619.9629 2348.1279 L
1616.7764 2448.7451 1541.6787 2530.7925 1443.1289 2543.5996 C
1536.5527 2659.2432 L
1539.8086 2663.272 L
1543.0684 2667.3047 L
1539.7061 2671.2515 L
1536.3438 2675.1982 L
1448.5254 2778.2544 L
1552.5059 2770.6782 1650.0205 2726.3809 1724.4941 2652.5811 c
1805.9053 2571.897 1851.9229 2464.4131 1854.0693 2349.9307 C
1854.0918 2348.8633 L
1742.8086 2251.5098 L
1742.8086 2251.5098 L
Bb
1 (Unnamed gradient 108) 1443.1289 2514.8818 0 410.9629 1 0 0 1 0 0 Bg
410.9629 0 0 -530.7446 1443.1289 2780.2544 Xm
8687.1289 0 0 -530.7446 -7244 2780.2544 Bc
410.9629 0 0 -530.7446 1443.1289 2780.2544 Bm
8687.1289 0 0 -530.7446 1854.0918 2780.2544 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
1743.2363 2235.2788 m
1608.1016 2341.5625 L
1607.583 2341.5625 L
1607.583 2237.1367 1523.9063 2152.2666 1419.9473 2150.3154 C
1419.9316 2157.877 L
1306.6826 2024.9707 L
1420.4785 1884.1074 L
1420.4648 1891.2295 L
1667.2686 1893.4712 1866.6484 2094.229 1866.6484 2341.5625 C
1864.7178 2341.5625 L
1743.2363 2235.2788 L
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
1417.7285 1897.4512 m
1314.7988 2024.8643 L
1416.3135 2143.998 L
1420.0664 2144.0703 L
1472.0352 2145.0454 1520.7402 2166.0215 1557.207 2203.1338 c
1590.8652 2237.3877 1610.5859 2281.8398 1613.4619 2329.4004 C
1739.376 2230.3711 L
1743.4492 2227.166 L
1747.3506 2230.5791 L
1860.2354 2329.3438 L
1857.1914 2215.9985 1811.8115 2109.71 1731.6719 2028.8848 c
1648.71 1945.2148 1538.1689 1898.5449 1420.4082 1897.4766 C
1417.7285 1897.4512 L
1417.7285 1897.4512 L
f
1420.6895 1903.7266 m
1322.9141 2024.7588 L
1419.2432 2137.8071 L
1420.1885 2137.8262 L
1473.7988 2138.8315 1524.043 2160.4707 1561.6611 2198.7549 c
1593.377 2231.0313 1613.3604 2272.7832 1618.6553 2317.3706 C
1735.5146 2225.4619 L
1739.584 2222.2588 L
1743.6592 2219.0518 L
1747.5605 2222.4644 L
1751.4639 2225.8784 L
1853.3652 2315.0347 L
1847.0273 2208.8232 1802.5674 2109.2539 1727.2383 2033.2842 c
1645.5205 1950.8677 1536.6641 1904.8662 1420.6895 1903.7266 C
1420.6895 1903.7266 L
Bb
1 (Unnamed gradient 13) 1322.9141 2110.5488 0 530.4512 1 0 0 1 0 0 Bg
530.4512 0 0 -417.644 1322.9141 2319.3706 Xm
8566.9141 0 0 -417.644 -7243.9995 2319.3706 Bc
530.4512 0 0 -417.644 1322.9141 2319.3706 Bm
8566.9141 0 0 -417.644 1853.3652 2319.3706 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
1091.4102 2451.0459 m
1225.0098 2342.5928 L
1225.5605 2446.6836 1309.2422 2531.0889 1413.0498 2532.8149 C
1413.0361 2526.2314 L
1526.834 2667.0942 L
1413.583 2800 L
1413.5664 2791.9048 L
1167.125 2790.4438 967.6094 2591.0508 965.9492 2344.6553 C
1091.4102 2451.0459 L
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
1219.2324 2355.3306 m
1095.3457 2455.8965 L
1091.3223 2459.1616 L
1087.3701 2455.8096 L
972.499 2358.3975 L
976.667 2470.75 1022.4795 2575.8691 1102.3799 2655.7129 c
1185.5449 2738.813 1296.0732 2784.9609 1413.6045 2785.6582 C
1417.5781 2785.6836 L
1518.7178 2666.9863 L
1415.4072 2539.1016 L
1412.9453 2539.0615 L
1361.0703 2538.1982 1312.3887 2517.3955 1275.8672 2480.4834 c
1242.3115 2446.5688 1222.4697 2402.5269 1219.2324 2355.3306 C
1219.2324 2355.3306 L
f
1214.1514 2367.5005 m
1099.2832 2460.7441 L
1095.2549 2464.0127 L
1091.2314 2467.2754 L
1087.2822 2463.9258 L
1083.3301 2460.5732 L
979.5088 2372.5303 L
986.8516 2477.7695 1031.7266 2576.2808 1106.7959 2651.2939 c
1188.7891 2733.2241 1297.7627 2778.7227 1413.6416 2779.4111 C
1414.707 2779.4204 L
1510.6025 2666.8828 L
1412.3828 2545.3018 L
1359.0342 2544.293 1308.9932 2522.8452 1271.4248 2484.876 c
1239.8613 2452.9746 1219.7813 2411.6631 1214.1514 2367.5005 C
1214.1514 2367.5005 L
Bb
1 (Unnamed gradient 112) 979.5088 2573.4604 0 531.0938 1 0 0 1 0 0 Bg
531.0938 0 0 -415.9199 979.5088 2781.4204 Xm
8223.5088 0 0 -415.9199 -7244 2781.4204 Bc
531.0938 0 0 -415.9199 979.5088 2781.4204 Bm
8223.5088 0 0 -415.9199 1510.6025 2781.4204 Bc
f
0 BB
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
1306.6826 2024.9707 m
1413.4805 2150.3047 L
1310.668 2151.7861 1227.4844 2234.3662 1225.0547 2336.9473 C
1232.0029 2336.916 L
1091.4102 2451.0459 L
958.2344 2338.1133 L
965.9531 2338.0791 L
967.8223 2091.4736 1167.8887 1892.0464 1414.7383 1891.2129 C
1306.6826 2024.9707 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
1401.4697 1897.6987 m
1288.7334 1901.377 1183.1455 1946.9644 1102.8867 2026.9082 c
1019.502 2109.9629 973.0908 2220.4893 972.1973 2338.127 C
972.1699 2341.7383 L
1091.4951 2442.9307 L
1218.7441 2339.6328 L
1218.8115 2336.7983 L
1221.2305 2234.6011 1299.9727 2152.5361 1400.4629 2144.6572 C
1301.9307 2029.0205 L
1298.5674 2025.0757 L
1301.8223 2021.0449 L
1401.4697 1897.6987 L
1401.4697 1897.6987 L
f
1387.8604 1904.6108 m
1282.0215 1911.3838 1182.8516 1956.0684 1107.2939 2031.334 c
1025.085 2113.2188 979.3252 2222.1904 978.4434 2338.1748 C
978.4385 2338.8643 L
1091.583 2434.8135 L
1212.5693 2336.5991 L
1214.9805 2235.833 1289.5508 2153.1909 1388.04 2139.7129 C
1297.1738 2033.0708 L
1293.8135 2029.127 L
1290.4521 2025.1807 L
1293.709 2021.1484 L
1296.9678 2017.1187 L
1387.8604 1904.6108 L
1387.8604 1904.6108 L
Bb
1 (Unnamed gradient 108) 978.4385 2169.7119 0 409.6016 1 0 0 1 0 0 Bg
409.6016 0 0 -534.2026 978.4385 2436.8135 Xm
8222.4385 0 0 -534.2026 -7244 2436.8135 Bc
409.6016 0 0 -534.2026 978.4385 2436.8135 Bm
8222.4385 0 0 -534.2026 1388.04 2436.8135 Bc
f
0 BB
U
u
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
902.7485 1550.5371 m
840.394 1736.2578 675.0264 1855.9932 478.9458 1857.208 C
586.4824 1731.0073 L
478.4595 1597.292 L
560.7324 1596.228 630.4712 1543.2285 656.4072 1469.5742 C
649.3125 1467.2427 L
818.792 1403.4546 L
909.3955 1552.7217 L
902.7485 1550.5371 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
816.1416 1411.125 m
663.3613 1468.6299 L
662.2974 1471.6465 L
636.293 1545.5015 568.4551 1597.0039 491.0791 1602.9741 C
591.3418 1727.0825 L
594.5986 1731.1128 L
591.2363 1735.0571 L
492.7168 1850.6768 L
582.4546 1847.5234 666.7637 1819.0771 737.332 1768.001 c
811.4922 1714.3301 866.6445 1638.4419 896.8276 1548.5474 C
897.7983 1545.6563 L
816.1416 1411.125 L
816.1416 1411.125 L
f
813.4907 1418.7979 m
668.2827 1473.4517 L
668.1855 1473.7285 L
642.6934 1546.1338 578.6689 1597.7949 503.1494 1607.9746 C
596.2021 1723.1592 L
599.458 1727.1851 L
602.7144 1731.2168 L
599.353 1735.1646 L
595.9907 1739.1094 L
506.8628 1843.7061 L
589.9277 1838.1997 668.0698 1810.4204 733.6689 1762.9419 c
806.7676 1710.0376 861.1387 1635.2163 890.9058 1546.5605 C
890.9546 1546.4155 L
813.4907 1418.7979 L
813.4907 1418.7979 L
Bb
1 (Unnamed gradient 108) 503.1494 1631.252 0 387.8052 1 0 0 1 0 0 Bg
387.8052 0 0 -428.9082 503.1494 1845.7061 Xm
7747.1499 0 0 -428.9082 -7244.0005 1845.7061 Bc
387.8052 0 0 -428.9082 503.1494 1845.7061 Bm
7747.1499 0 0 -428.9082 890.9546 1845.7061 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
904.627 1544.8657 m
818.792 1403.4546 L
658.312 1463.8555 L
664.0942 1445.6079 667.2314 1426.1831 667.2314 1406.0234 c
667.2314 1344.4795 638.1592 1289.7373 593.0093 1254.7471 C
588.3003 1261.0928 L
581.2109 1080.1445 L
739.6343 1043.9297 L
740.6528 1042.5303 L
741.0586 1042.8252 741.4531 1043.1279 741.8574 1043.4238 C
751.4326 1041.2344 L
746.9873 1047.2246 L
902.9692 1164.4688 964.6592 1358.4893 904.627 1544.8657 C
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
740.4722 1050.1455 m
587.6558 1085.0781 L
594.0234 1247.6328 L
596.8364 1249.8125 L
645.5435 1287.5576 673.4756 1344.4941 673.4756 1406.0244 c
673.4756 1422.1475 671.5278 1438.1187 667.6748 1453.6567 C
816.5903 1397.6074 L
821.4414 1395.7813 L
824.1318 1400.2129 L
902.7358 1529.7109 L
927.7305 1443.6479 927.1265 1354.8477 900.8604 1272.0088 c
873.2651 1184.9902 818.7563 1108.9844 743.2344 1052.2197 C
740.478 1050.1484 L
740.4746 1050.1484 L
740.4722 1050.1455 L
740.4722 1050.1455 L
f
739.04 1056.8799 m
594.1011 1090.0137 L
600.1533 1244.4785 L
600.6626 1244.874 L
650.9058 1283.8125 679.7222 1342.5508 679.7222 1406.0234 c
679.7222 1418.7056 678.5439 1431.356 676.2153 1443.7646 C
814.3892 1391.7617 L
819.2412 1389.9346 L
824.0938 1388.1084 L
826.7842 1392.543 L
829.4727 1396.9756 L
900.541 1514.0601 L
921.2158 1433.6133 919.3179 1350.8887 894.9077 1273.8975 c
867.7056 1188.123 813.9609 1113.1934 739.48 1057.2139 C
739.04 1056.8799 L
739.04 1056.8799 L
Bb
1 (Unnamed gradient 13) 594.1011 1285.4697 0 320.6479 1 0 0 1 0 0 Bg
320.6479 0 0 -461.1802 594.1011 1516.0601 Xm
7838.1006 0 0 -461.1802 -7243.9995 1516.0601 Bc
320.6479 0 0 -461.1802 594.1011 1516.0601 Bm
7838.1006 0 0 -461.1802 914.749 1516.0601 Bc
f
0 BB
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
581.2109 1080.1445 m
587.9019 1250.9287 L
556.4238 1228.1621 517.7544 1214.7305 475.939 1214.7305 c
435.5381 1214.7305 398.0752 1227.2695 367.1963 1248.6504 C
371.811 1255.083 L
197.3354 1206.6055 L
211.3711 1042.7324 L
211.2241 1042.5303 L
211.2822 1042.4883 211.3408 1042.4473 211.3984 1042.4063 C
212.2358 1032.6309 L
216.5942 1038.707 L
376.7979 925.6016 581.4561 926.8662 740.6528 1042.5303 C
739.6338 1043.9297 L
581.2109 1080.1445 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
476.0015 961.0674 m
475.9854 961.0674 475.9805 961.0674 475.9634 961.0674 c
385.3042 961.0723 296.8613 989.6846 220.1958 1043.8086 C
217.3789 1045.7979 L
204.0015 1201.9775 L
360.7363 1245.5225 L
363.6387 1243.5137 L
396.7363 1220.5996 435.5703 1208.4834 475.9399 1208.4834 c
513.5571 1208.4834 549.687 1218.9424 581.1768 1238.8398 C
574.9707 1080.3906 L
574.7661 1075.2139 L
579.8208 1074.0566 L
726.874 1040.4395 L
651.3271 988.4746 564.8403 961.0674 476.0015 961.0674 C
476.0015 961.0674 L
f
476.001 967.3164 m
475.9629 967.3164 L
386.606 967.3184 299.4077 995.5332 223.7998 1048.9121 C
223.3521 1049.2266 L
210.667 1197.3457 L
359.5913 1238.7207 L
360.0874 1238.377 L
394.2314 1214.7354 434.293 1202.2383 475.9395 1202.2383 c
510.625 1202.2383 544.4556 1210.9824 574.4863 1227.6182 C
568.7275 1080.6348 L
568.5239 1075.46 L
568.3198 1070.2852 L
573.3711 1069.126 L
578.4253 1067.9668 L
711.313 1037.5869 L
639.7461 991.5664 558.6948 967.3164 476.001 967.3164 C
476.001 967.3164 L
Bb
1 (Unnamed gradient 108) 210.667 1103.0186 0 500.646 1 0 0 1 0 0 Bg
500.646 0 0 -275.4043 210.667 1240.7207 Xm
7454.667 0 0 -275.4043 -7244 1240.7207 Bc
500.646 0 0 -275.4043 210.667 1240.7207 Bm
7454.667 0 0 -275.4043 711.313 1240.7207 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
586.4824 1731.0073 m
473.2314 1863.9136 L
473.2188 1857.2104 L
276.2427 1856.1069 110.2114 1735.4102 48.394 1548.3501 C
201.2339 1611.6211 L
294.9316 1468.001 L
320.3516 1542.2559 390.1558 1595.9131 472.6997 1597.2837 C
472.6851 1590.1445 L
586.4824 1731.0073 L
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
293.4409 1481.7119 m
206.4634 1615.0327 L
203.6333 1619.375 L
198.8442 1617.3936 L
58.8447 1559.4375 L
89.6274 1644.2686 142.9878 1715.9844 213.7949 1767.4614 c
288.2007 1821.5557 377.9194 1850.4307 473.2544 1850.9639 C
476.0459 1850.979 L
578.3662 1730.9019 L
475.5068 1603.5767 L
472.5957 1603.5283 L
393.8457 1602.2207 323.3584 1553.7808 293.4409 1481.7119 C
293.4409 1481.7119 L
f
292.4263 1494.6997 m
211.6934 1618.4458 L
208.8677 1622.7832 L
206.0371 1627.1279 L
201.2476 1625.145 L
196.4565 1623.1636 L
69.8296 1570.7461 L
100.7998 1648.4902 151.6201 1714.5366 217.4683 1762.4102 c
290.7813 1815.7061 379.2031 1844.167 473.1748 1844.7183 C
570.2515 1730.7959 L
472.4839 1609.7739 L
395.2285 1608.4844 325.7661 1563.7129 292.4263 1494.6997 C
292.4263 1494.6997 L
Bb
1 (Unnamed gradient 112) 69.8296 1669.709 0 500.4219 1 0 0 1 0 0 Bg
500.4219 0 0 -354.0186 69.8296 1846.7183 Xm
7313.8296 0 0 -354.0186 -7244 1846.7183 Bc
500.4219 0 0 -354.0186 69.8296 1846.7183 Bm
7313.8296 0 0 -354.0186 570.2515 1846.7183 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
197.3354 1206.6055 m
362.0269 1252.3643 L
315.0825 1287.2236 284.6455 1343.0605 284.6455 1406.0234 c
284.6455 1425.603 287.5972 1444.4902 293.064 1462.2773 C
300.1787 1459.9575 L
201.2339 1611.6211 L
39.8984 1544.833 L
46.5586 1542.6611 L
-13.0781 1354.4531 51.2041 1158.79 211.2241 1042.5303 C
211.3711 1042.7324 L
197.3354 1206.6055 L
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
203.9868 1055.749 m
132.188 1111.1035 79.9272 1184.0801 52.4561 1267.5664 c
23.6216 1355.1875 23.6421 1449.6611 52.5142 1540.7739 C
53.4341 1543.6768 L
198.833 1603.8667 L
288.0269 1467.1533 L
287.0933 1464.1143 L
281.3252 1445.3379 278.3979 1425.793 278.3979 1406.0234 c
278.3979 1374.2334 285.7256 1343.877 300.1787 1315.7969 c
312.061 1292.709 328.645 1271.9307 348.5337 1255.0977 C
195.6641 1212.625 L
190.6699 1211.2363 L
191.1118 1206.0762 L
203.9868 1055.749 L
203.9868 1055.749 L
f
196.5259 1069.6689 m
131.5596 1123.0459 83.9385 1191.8633 58.3882 1269.5176 c
29.9678 1355.8828 29.9966 1449.0313 58.4678 1538.8877 C
58.5078 1539.0156 L
196.4336 1596.1118 L
281.1953 1466.1904 L
281.124 1465.9541 L
275.1685 1446.5684 272.1494 1426.4048 272.1494 1406.022 c
272.1494 1373.2305 279.7119 1341.9102 294.626 1312.9375 c
305.0396 1292.6973 319.1797 1273.918 335.8735 1258.0645 C
193.9937 1218.6436 L
188.9951 1217.2559 L
184.0044 1215.8662 L
184.4453 1210.7051 L
184.8862 1205.5449 L
196.5259 1069.6689 L
196.5259 1069.6689 L
Bb
1 (Unnamed gradient 13) 37.0938 1332.8906 0 298.7798 1 0 0 1 0 0 Bg
298.7798 0 0 -530.4429 37.0938 1598.1118 Xm
7288.2197 0 0 -530.4429 -7251.126 1598.1118 Bc
298.7798 0 0 -530.4429 37.0938 1598.1118 Bm
7288.2197 0 0 -530.4429 335.8735 1598.1118 Bc
f
0 BB
U
u
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
822.3838 747.3721 m
734.0308 854.1152 617.6958 909.1494 478.8257 909.8867 C
585.0327 785.2441 L
476.002 650.2822 L
476.002 649.8457 L
533.9722 649.8271 585.9082 624.0166 620.9771 583.2715 C
616.793 579.8633 L
623.8037 579.9063 L
623.9146 579.7725 624.0303 579.6406 624.1411 579.5049 C
624.6431 579.9121 L
797.875 580.9795 L
829.0332 752.79 L
822.3838 747.3721 L
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
626.7222 586.1709 m
625.71 587.3477 L
590.834 627.8672 541.3408 652.3613 488.4067 655.7012 C
589.8896 781.3203 L
593.1465 785.3525 L
589.7852 789.2979 L
492.5713 903.3867 L
623.8149 899.2246 733.103 845.4424 817.5742 743.3906 C
820.3682 740.0117 L
792.6523 587.1943 L
626.7222 586.1709 L
626.7222 586.1709 L
f
629.5684 592.4316 m
596.582 630.2441 550.1641 654.7451 500.5874 660.8379 C
594.7471 777.3965 L
598.0054 781.4258 L
601.2627 785.4561 L
597.9004 789.4043 L
594.5381 793.3496 L
506.6577 896.4883 L
629.6782 889.0459 732.606 836.2451 812.7632 739.4082 C
813.7041 738.2686 L
787.4297 593.4072 L
629.5684 592.4316 L
629.5684 592.4316 L
Bb
1 (Unnamed gradient 13) 500.5874 744.46 0 313.1167 1 0 0 1 0 0 Bg
313.1167 0 0 -308.0566 500.5874 898.4883 Xm
7744.5874 0 0 -308.0566 -7244 898.4883 Bc
313.1167 0 0 -308.0566 500.5874 898.4883 Bm
7744.5874 0 0 -308.0566 813.7041 898.4883 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
827.02 741.6875 m
797.875 580.9795 L
624.6436 579.9121 L
624.1411 579.5049 L
651.0742 546.5439 667.2368 504.4385 667.2368 458.5537 c
667.2368 446.6807 666.1455 435.0635 664.0757 423.7891 C
658.7632 424.916 L
773.1914 284.5684 L
926.5591 368.042 L
917.3613 369.9951 L
945.3213 506.8008 914.729 632.6895 827.02 741.6875 C
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
774.7568 292.5313 m
669.9331 421.0986 L
670.2192 422.6592 L
672.3843 434.46 673.4814 446.5371 673.4814 458.5547 c
673.4814 499.8809 660.3984 540.3281 636.4224 573.7422 C
797.9131 574.7334 L
803.0967 574.7656 L
804.0225 579.8652 L
830.6831 726.8779 L
910.875 621.6514 937.9814 502.0781 911.2397 371.2432 C
910.2207 366.2607 L
774.7568 292.5313 L
774.7568 292.5313 L
f
776.3252 300.4961 m
676.5942 422.8154 L
678.6768 434.5879 679.7285 446.6064 679.7285 458.5557 c
679.7285 496.8789 668.5664 535.1484 648.1069 567.5674 C
797.9507 568.4873 L
803.1328 568.5176 L
808.3115 568.5498 L
809.2402 573.6445 L
810.1689 578.748 L
834.2515 711.5547 L
906.6523 610.6563 930.4985 496.6592 905.1201 372.4961 C
904.6831 370.3574 L
776.3252 300.4961 L
776.3252 300.4961 L
Bb
1 (Unnamed gradient 112) 648.1069 506.0254 0 266.8379 1 0 0 1 0 0 Bg
266.8379 0 0 -415.0586 648.1069 713.5547 Xm
7892.1069 0 0 -415.0586 -7244 713.5547 Bc
266.8379 0 0 -415.0586 648.1069 713.5547 Bm
7892.1069 0 0 -415.0586 914.9448 713.5547 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
915.688 362.125 m
773.1914 284.5684 L
663.228 419.4424 L
651.3198 362.1309 613.7598 314.2383 563.1025 288.2588 C
560.7642 293.1436 L
519.3032 116.8691 L
678.9829 46.2168 L
674.6104 55.3506 L
800.4429 117.1436 885.5068 225.4248 915.688 362.125 C
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
666.7622 58.4512 m
526.5728 120.4844 L
564.5571 281.9824 L
565.9541 282.7002 L
591.8247 295.9678 614.8877 315.1924 632.6475 338.2939 c
648.0596 358.3398 659.5732 381.4502 666.3286 405.7559 C
768.3506 280.6201 L
771.627 276.6035 L
776.1777 279.082 L
906.4019 349.9619 L
890.9165 288.2578 863.9434 232.6592 826.1064 184.5088 c
785.5234 132.8594 733.624 91.291 671.8574 60.9561 C
666.7622 58.4512 L
666.7622 58.4512 L
f
666.624 65.3428 m
533.8389 124.1016 L
569.9805 277.7529 L
596.1821 291.4063 619.5444 311.001 637.5991 334.4873 c
650.9888 351.9014 661.6675 371.8682 668.8433 392.7881 C
763.5098 276.6738 L
766.7861 272.6572 L
770.061 268.6367 L
774.6162 271.1172 L
779.166 273.5957 L
896.6113 337.5195 L
880.9111 282.2441 855.5811 232.126 821.1948 188.3672 c
781.2021 137.4678 730.0298 96.4834 669.1055 66.5625 C
666.624 65.3428 L
666.624 65.3428 L
Bb
1 (Unnamed gradient 13) 533.8389 229.0654 0 362.7725 1 0 0 1 0 0 Bg
362.7725 0 0 -331.4453 533.8389 394.7881 Xm
7777.8389 0 0 -331.4453 -7244 394.7881 Bc
362.7725 0 0 -331.4453 533.8389 394.7881 Bm
7777.8389 0 0 -331.4453 896.6113 394.7881 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
237.6206 209.8965 m
394.3696 285.498 L
343.2422 309.6387 304.5444 355.7578 290.4561 411.6758 C
295.7563 412.8662 L
289.4229 415.9766 L
289.3872 416.1328 289.3467 416.2871 289.311 416.4434 C
288.7402 416.3115 L
133.2148 492.6953 L
28.646 352.8555 L
37.9678 354.9502 L
70.0283 220.2939 155.2368 114.3125 279.666 54.2314 C
237.6206 209.8965 L
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
270.0034 66.0518 m
214.3022 94.9424 166.9282 133.4082 129.0469 180.5371 c
88.3818 231.1299 59.7832 290.2979 44.0454 356.3965 C
42.8496 361.418 L
135.1128 484.8066 L
284.0146 411.6729 L
284.3979 410.1484 L
297.8281 356.8369 332.481 312.0986 380.333 285.6641 C
234.9077 215.5244 L
230.2383 213.2725 L
231.5903 208.2686 L
270.0034 66.0518 L
270.0034 66.0518 L
f
260.1904 78.4287 m
210.7412 106.0479 168.3066 141.665 133.916 184.4512 c
93.8345 234.3125 65.6421 292.6533 50.123 357.8467 C
49.604 360.0254 L
137.0117 476.917 L
278.6699 407.3418 L
291.6353 357.2676 323.5308 313.7637 367.1182 286.2246 C
232.1953 221.1504 L
227.5249 218.8975 L
222.854 216.6455 L
224.208 211.6406 L
225.561 206.6367 L
260.1904 78.4287 L
260.1904 78.4287 L
Bb
1 (Unnamed gradient 13) 49.604 277.6729 0 317.5142 1 0 0 1 0 0 Bg
317.5142 0 0 -402.4883 49.604 478.917 Xm
7293.604 0 0 -402.4883 -7244 478.917 Bc
317.5142 0 0 -402.4883 49.604 478.917 Bm
7293.604 0 0 -402.4883 367.1182 478.917 Bc
f
0 BB
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
519.3032 116.8691 m
559.1509 286.2842 L
533.9897 274.1084 505.77 267.2598 475.9438 267.2598 c
448.3325 267.2598 422.1001 273.1309 398.3945 283.6611 C
400.7266 288.5635 L
237.6206 209.8965 L
283.1519 41.3252 L
287.5293 50.5293 L
413.4312 -7.59277 541.8579 -7.22168 666.8159 51.5996 C
519.3032 116.8691 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
476.374 13.4551 m
476.3682 13.4551 476.3652 13.4551 476.3555 13.4551 c
414.2324 13.4551 351.5835 27.8379 290.146 56.2012 C
284.9561 58.5996 L
245.0029 206.5215 L
394.4233 278.5879 L
395.8564 277.9521 L
421.1641 266.7139 448.1084 261.0117 475.9438 261.0117 c
501.7197 261.0117 526.6348 265.8662 550.1909 275.4609 C
513.2236 118.2979 L
512.0361 113.2539 L
516.7749 111.1563 L
651.5469 51.5244 L
593.8389 26.2598 534.9668 13.4551 476.374 13.4551 C
476.374 13.4551 L
f
476.373 19.7031 m
476.355 19.7031 L
415.1479 19.7031 353.3779 33.8906 292.7622 61.8701 C
290.2241 63.0449 L
252.3833 203.1445 L
394.5391 271.7061 L
420.293 260.4668 447.6777 254.7646 475.9438 254.7646 c
498.4751 254.7646 520.4521 258.3809 541.437 265.5244 C
507.1416 119.7285 L
505.9561 114.6816 L
504.772 109.6406 L
509.5078 107.5439 L
514.2471 105.4443 L
635.7759 51.6709 L
583.126 30.4512 529.5713 19.7031 476.373 19.7031 C
476.373 19.7031 L
Bb
1 (Unnamed gradient 108) 252.3833 145.7051 0 383.3926 1 0 0 1 0 0 Bg
383.3926 0 0 -256.0029 252.3833 273.7061 Xm
7496.3833 0 0 -256.0029 -7244 273.7061 Bc
383.3926 0 0 -256.0029 252.3833 273.7061 Bm
7496.3833 0 0 -256.0029 635.7759 273.7061 Bc
f
0 BB
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
471.7827 918.1514 m
471.7661 909.875 L
332.0249 908.6748 208.6357 848.0732 122.1162 738.0762 C
286.1768 745.9805 L
326.2505 577.6436 L
360.3906 620.501 412.5376 648.3623 471.2471 649.7793 C
471.2358 644.3828 L
475.6465 649.8418 L
475.7456 649.8428 475.8442 649.8467 475.9438 649.8467 c
475.9629 649.8467 475.9824 649.8457 476.002 649.8457 C
476.002 650.2822 L
585.0327 785.2441 L
471.7827 918.1514 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
329.4746 591.085 m
292.2559 747.4287 L
291.0537 752.4707 L
285.8755 752.2197 L
135.7485 744.9863 L
176.4683 793.8242 224.8496 832.2002 279.7358 859.168 c
338.5864 888.082 403.2139 903.04 471.8203 903.6279 C
475.9238 903.6641 L
576.916 785.1426 L
472.6387 656.0586 L
471.0991 656.0215 L
416.7065 654.71 365.7637 631.207 329.4746 591.085 C
329.4746 591.085 L
f
332.8965 603.6797 m
298.3325 748.875 L
297.1299 753.9199 L
295.9272 758.96 L
290.7515 758.71 L
285.5747 758.457 L
149.9536 751.9229 L
188.0747 794.8916 232.6021 829.0469 282.4902 853.5635 c
340.4907 882.0586 404.209 896.8027 471.8745 897.3828 C
473.0605 897.3945 L
568.7993 785.0352 L
469.5933 662.2314 L
418.4097 660.6475 369.2798 639.5 332.8965 603.6797 C
332.8965 603.6797 L
Bb
1 (Unnamed gradient 108) 149.9536 750.5371 0 418.8457 1 0 0 1 0 0 Bg
418.8457 0 0 -297.7148 149.9536 899.3945 Xm
7393.9536 0 0 -297.7148 -7244 899.3945 Bc
418.8457 0 0 -297.7148 149.9536 899.3945 Bm
7393.9536 0 0 -297.7148 568.7993 899.3945 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
36.1431 362.8818 m
133.2148 492.6953 L
288.7402 416.3115 L
289.311 416.4434 L
286.2666 429.9932 284.6499 444.084 284.6499 458.5537 c
284.6499 501.7686 298.9863 541.6328 323.1548 573.6621 C
328.1143 569.8174 L
286.1768 745.9805 L
111.7666 737.5781 L
117.9854 732.7549 L
33.9702 623.0586 6.25928 497.8242 36.1431 362.8818 C
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
39.4404 377.7168 m
14.5728 506.001 42.6362 624.1025 122.9448 728.958 C
125.2554 731.9736 L
281.3032 739.4902 L
319.4727 579.1563 L
318.168 577.4238 L
292.1533 542.9482 278.4043 501.8457 278.4043 458.5547 c
278.4043 448.0244 279.2432 437.498 280.9038 427.1221 C
135.9673 498.3027 L
131.314 500.5869 L
128.2134 496.4336 L
39.4404 377.7168 L
39.4404 377.7168 L
f
43.0503 392.9805 m
23.2012 513.9844 51.7109 625.6777 127.9043 725.1621 C
128.4497 725.874 L
276.4253 733 L
312.7168 580.5693 L
286.1792 545.127 272.1567 502.9531 272.1567 458.5537 c
272.1567 451.6709 272.5107 444.7432 273.2051 437.8613 C
138.7202 503.9063 L
134.0679 506.1914 L
129.4141 508.4766 L
126.3115 504.3262 L
123.209 500.1748 L
43.0503 392.9805 L
43.0503 392.9805 L
Bb
1 (Unnamed gradient 112) 36.9341 562.9902 0 275.7827 1 0 0 1 0 0 Bg
275.7827 0 0 -344.0195 36.9341 735 Xm
7294.667 0 0 -344.0195 -7257.7329 735 Bc
275.7827 0 0 -344.0195 36.9341 735 Bm
7294.667 0 0 -344.0195 312.7168 735 Bc
f
0 BB
U
u
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
1528.0762 785.2441 m
1414.8242 918.1514 L
1414.8076 909.3896 L
1291.4043 909.0137 1185.9746 865.2412 1098.5273 778.0566 C
1261.209 766.9219 L
1281.498 594.6572 L
1315.623 628.6064 1362.4854 649.752 1414.29 650.3154 C
1414.2773 644.3828 L
1528.0762 785.2441 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
1286.2559 607.6514 m
1267.4141 767.6523 L
1266.8086 772.7988 L
1261.6367 773.1533 L
1112.9346 783.332 L
1153.2793 821.3896 1197.8438 850.6875 1245.5791 870.5078 c
1297.2861 891.9785 1354.2334 902.959 1414.8271 903.1445 C
1419.3926 903.1592 L
1519.958 785.1396 L
1416.1064 656.582 L
1414.2217 656.5635 L
1366.6816 656.0449 1321.7041 638.7686 1286.2559 607.6514 C
1286.2559 607.6514 L
f
1291.1162 619.7793 m
1273.6152 768.3838 L
1273.0146 773.5273 L
1272.4063 778.6768 L
1267.2363 779.0313 L
1262.0635 779.3857 L
1127.9053 788.5703 L
1164.8291 821.3701 1205.1563 846.9609 1247.9736 864.7393 c
1298.9268 885.8936 1355.0703 896.7148 1414.8467 896.8984 C
1416.5176 896.9043 L
1511.8447 785.0322 L
1413.0996 662.7969 L
1368.709 662.0771 1325.8652 646.9023 1291.1162 619.7793 C
1291.1162 619.7793 L
Bb
1 (Unnamed gradient 108) 1127.9053 758.3418 0 383.9395 1 0 0 1 0 0 Bg
383.9395 0 0 -281.125 1127.9053 898.9043 Xm
8371.9053 0 0 -281.125 -7244 898.9043 Bc
383.9395 0 0 -281.125 1127.9053 898.9043 Bm
8371.9053 0 0 -281.125 1511.8447 898.9043 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
1730.8301 781.4453 m
1645.0947 865.3516 1542.2598 907.9844 1422.3291 909.3428 C
1528.0762 785.2441 L
1419.0664 650.3096 L
1469.4609 649.6221 1515.1455 629.459 1548.9307 596.9922 C
1544.7598 592.7627 L
1724.6523 613.5156 L
1736.9902 787.6914 L
1730.8301 781.4453 L
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
1554.6191 600.1875 m
1553.2598 601.4951 L
1520.0498 633.4063 1477.2783 652.4961 1431.6875 655.9922 C
1532.9346 781.3193 L
1536.1934 785.3525 L
1532.8311 789.2959 L
1436.1572 902.7451 L
1489.876 900.6387 1540.5586 889.8359 1587.0098 870.5801 c
1637.4473 849.668 1684.3662 818.1758 1726.4619 776.9795 C
1729.7441 773.7686 L
1718.79 619.126 L
1554.6191 600.1875 L
1554.6191 600.1875 L
f
1556.8213 606.7305 m
1525.7529 636.2705 1486.0078 655.2803 1443.7568 660.9932 C
1537.792 777.3936 L
1541.0518 781.4258 L
1544.3105 785.46 L
1540.9453 789.4072 L
1537.5801 793.3496 L
1450.3516 895.7188 L
1497.9736 892.4082 1543.0811 882.0313 1584.6201 864.8096 c
1634.3184 844.2002 1680.5762 813.1494 1722.0938 772.5156 C
1723.3076 771.3271 L
1712.9238 624.7383 L
1556.8213 606.7305 L
1556.8213 606.7305 L
Bb
1 (Unnamed gradient 13) 1443.7568 751.2246 0 279.5508 1 0 0 1 0 0 Bg
279.5508 0 0 -292.9883 1443.7568 897.7188 Xm
8687.7568 0 0 -292.9883 -7244 897.7188 Bc
279.5508 0 0 -292.9883 1443.7568 897.7188 Bm
8687.7568 0 0 -292.9883 1723.3076 897.7188 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
1866.7441 461.4854 m
1866.1719 584.1689 1822.6504 689.0605 1736.1738 776.1602 C
1724.6523 613.5156 L
1552.3359 593.6367 L
1586.0234 559.6182 1607.0186 513.0244 1607.6729 461.5215 C
1601.7412 461.5234 L
1742.8135 347.9873 L
1875.5088 461.4834 L
1866.7441 461.4854 L
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
1742.6924 356.1025 m
1613.9404 459.7227 L
1613.916 461.6016 L
1613.3184 508.8291 1596.1543 553.5469 1565.3174 588.8477 C
1725.3701 607.3096 L
1730.5195 607.9014 L
1730.8848 613.0742 L
1741.4141 761.7451 L
1779.1406 721.5781 1808.208 677.2383 1827.9014 629.7715 c
1849.248 578.3252 1860.2168 521.6973 1860.499 461.4561 C
1860.5186 456.8828 L
1742.6924 356.1025 L
1742.6924 356.1025 L
f
1742.5693 364.2178 m
1620.1484 462.7461 L
1619.3564 506.8027 1604.2881 549.3799 1577.4375 583.957 C
1726.0859 601.1025 L
1731.2324 601.6953 L
1736.3848 602.2871 L
1736.751 607.4619 L
1737.1152 612.6348 L
1746.6172 746.7666 L
1779.1094 710.0273 1804.4785 669.9248 1822.1328 627.3789 c
1843.168 576.6807 1853.9717 520.8447 1854.25 461.4268 C
1854.2598 459.749 L
1742.5693 364.2178 L
1742.5693 364.2178 L
Bb
1 (Unnamed gradient 112) 1577.4375 555.4922 0 276.8223 1 0 0 1 0 0 Bg
276.8223 0 0 -386.5488 1577.4375 748.7666 Xm
8821.4375 0 0 -386.5488 -7244.0005 748.7666 Bc
276.8223 0 0 -386.5488 1577.4375 748.7666 Bm
8821.4375 0 0 -386.5488 1854.2598 748.7666 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
1866.7139 453.96 m
1742.8135 347.9873 L
1607.6748 456.7471 L
1607.0723 405.8125 1586.5703 359.6709 1553.5713 325.7275 C
1549.3711 329.9189 L
1569.0693 149.9082 L
1743.1699 136.5508 L
1736.9639 142.7451 L
1822.2891 229.0557 1865.5352 332.7949 1866.7139 453.96 C
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
1729.3018 143.8799 m
1574.7148 155.7422 L
1556.7373 320.0215 L
1558.0508 321.373 L
1590.5508 354.8047 1609.9336 398.0049 1613.3779 444.1387 C
1738.8984 343.1201 L
1742.9346 339.8711 L
1746.873 343.2383 L
1860.1377 440.1172 L
1858.0986 385.7969 1847.1816 334.5859 1827.6279 287.6836 c
1806.4141 236.8018 1774.416 189.5137 1732.5205 147.1348 C
1729.3018 143.8799 L
1729.3018 143.8799 L
f
1726.8945 150.3291 m
1580.3643 161.5752 L
1563.2666 317.7842 L
1593.3818 349.0811 1612.7041 389.2695 1618.4043 432.0762 C
1734.9824 338.2559 L
1739.0156 335.0049 L
1743.0547 331.7529 L
1746.9941 335.1211 L
1750.9355 338.4902 L
1853.1357 425.9082 L
1849.8652 377.7031 1839.3672 332.0762 1821.8623 290.0879 c
1800.9551 239.9443 1769.4033 193.3242 1728.0771 151.5254 C
1726.8945 150.3291 L
1726.8945 150.3291 L
Bb
1 (Unnamed gradient 13) 1563.2666 291.2031 0 289.8691 1 0 0 1 0 0 Bg
289.8691 0 0 -285.7471 1563.2666 434.0762 Xm
8807.2666 0 0 -285.7471 -7244 434.0762 Bc
289.8691 0 0 -285.7471 1563.2666 434.0762 Bm
8807.2666 0 0 -285.7471 1853.1357 434.0762 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
1731.6318 137.4375 m
1569.0693 149.9082 L
1550.2002 322.3438 L
1516.6865 289.54 1471.166 268.9551 1420.8389 267.8105 C
1420.7803 273.7559 L
1308.6934 131.5264 L
1423.541 0 L
1423.4521 8.76758 L
1543.2734 10.3838 1646.002 53.2734 1731.6318 137.4375 C
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
1418.7793 14.9502 m
1316.8066 131.7354 L
1419.0918 261.5234 L
1420.9814 261.5645 L
1466.999 262.6113 1510.6934 279.499 1545.334 309.3926 C
1562.8594 149.2295 L
1563.4238 144.0752 L
1568.5928 143.6816 L
1717.2012 132.2793 L
1677.7852 95.6377 1634.3652 67.2871 1587.959 47.9111 c
1537.5752 26.877 1482.2002 15.8076 1423.3691 15.0127 C
1418.7793 14.9502 L
1418.7793 14.9502 L
f
1421.584 21.2344 m
1324.9199 131.9395 L
1422.1787 255.3457 L
1465.0117 256.5469 1506.5137 271.3477 1540.373 297.3047 C
1556.6504 148.5508 L
1557.2119 143.3965 L
1557.7754 138.2412 L
1562.9492 137.8477 L
1568.1211 137.4541 L
1702.2051 127.166 L
1666.2412 95.6963 1627.0557 71.0029 1585.5508 53.6758 c
1535.9053 32.9482 1481.3086 22.04 1423.2861 21.2588 C
1421.584 21.2344 L
1421.584 21.2344 L
Bb
1 (Unnamed gradient 112) 1324.9199 159.2695 0 377.2852 1 0 0 1 0 0 Bg
377.2852 0 0 -280.0703 1324.9199 299.3047 Xm
8568.9199 0 0 -280.0703 -7244 299.3047 Bc
377.2852 0 0 -280.0703 1324.9199 299.3047 Bm
8568.9199 0 0 -280.0703 1702.2051 299.3047 Bc
f
0 BB
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
1308.6934 131.5264 m
1416.0547 267.7598 L
1364.4766 267.8545 1317.6934 288.3652 1283.3418 321.6406 C
1287.5264 325.8496 L
1107.5527 305.8174 L
1094.5186 131.6904 L
1100.7051 137.9131 L
1187.9941 51.8916 1293.0693 8.80371 1415.9492 8.69434 C
1308.6934 131.5264 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
1402.0225 15.1445 m
1346.8799 16.7188 1294.9102 27.3701 1247.3496 46.8682 c
1195.8154 67.9912 1147.9521 100.1201 1105.0869 142.3613 C
1101.8232 145.5811 L
1113.3916 300.1846 L
1277.6396 318.4668 L
1278.9941 317.1543 L
1312.9219 284.29 1356.7402 264.9414 1403.5059 261.9268 C
1303.7871 135.3955 L
1300.5811 131.3252 L
1303.9883 127.4189 L
1402.0225 15.1445 L
1402.0225 15.1445 L
f
1387.7305 22.0186 m
1338.7129 24.8867 1292.3506 35.1699 1249.7168 52.6475 c
1198.9395 73.4609 1151.7559 105.1426 1109.4697 146.8105 C
1108.2686 147.998 L
1119.2334 294.5527 L
1275.4102 311.9326 L
1307.2285 281.4326 1348.0459 262.1064 1391.4941 256.7793 C
1298.8789 139.2646 L
1295.6719 135.1895 L
1292.4688 131.1211 L
1295.875 127.2168 L
1299.2822 123.3125 L
1387.7305 22.0186 L
1387.7305 22.0186 L
Bb
1 (Unnamed gradient 108) 1108.2686 166.9756 0 283.2256 1 0 0 1 0 0 Bg
283.2256 0 0 -293.9141 1108.2686 313.9326 Xm
8352.2686 0 0 -293.9141 -7244 313.9326 Bc
283.2256 0 0 -293.9141 1108.2686 313.9326 Bm
8352.2686 0 0 -293.9141 1391.4941 313.9326 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
966.7939 459.0488 m
1088.624 565.958 L
1224.9727 459.0488 L
1225.1172 459.0488 L
1225.1172 510.3301 1245.2988 556.8965 1278.1475 591.2441 C
1282.3906 587.0801 L
1261.209 766.9219 L
1087.0049 778.8447 L
1093.2646 772.7012 L
1008.4756 685.7051 966.0508 581.1641 966.0508 459.0488 C
966.7939 459.0488 L
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
1219.2559 471.4678 m
1092.4795 570.874 L
1088.4004 574.0732 L
1084.5049 570.6533 L
972.4707 472.3408 L
973.9199 527.3506 984.3906 579.2178 1003.6514 626.6963 c
1024.4482 677.9688 1056.1035 725.624 1097.7363 768.3408 C
1100.9414 771.6289 L
1255.6143 761.043 L
1274.9395 596.9277 L
1273.6338 595.5625 L
1241.1934 561.6377 1222.1396 517.9697 1219.2559 471.4678 C
1219.2559 471.4678 L
f
1214.0762 483.4678 m
1096.3359 575.792 L
1092.251 578.9873 L
1088.1719 582.1855 L
1084.2783 578.7656 L
1080.3838 575.3477 L
979.3105 486.6533 L
982.0615 535.5352 992.1729 581.79 1009.4365 624.3486 c
1029.9326 674.8711 1061.1465 721.8506 1102.2109 763.9814 C
1103.3955 765.1992 L
1250.0156 755.1641 L
1268.3926 599.1162 L
1238.3037 567.3184 1219.2715 526.6533 1214.0762 483.4678 C
1214.0762 483.4678 L
Bb
1 (Unnamed gradient 112) 979.3105 624.334 0 289.082 1 0 0 1 0 0 Bg
289.082 0 0 -285.7314 979.3105 767.1992 Xm
8223.3105 0 0 -285.7314 -7244 767.1992 Bc
289.082 0 0 -285.7314 979.3105 767.1992 Bm
8223.3105 0 0 -285.7314 1268.3926 767.1992 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
1107.5527 305.8174 m
1279.9512 325.0059 L
1247.1055 358.4404 1226.4434 403.8828 1225.1777 454.1475 C
1231.1279 454.2227 L
1225.1172 458.9336 L
1225.1172 458.9736 1225.1172 459.0117 1225.1172 459.0488 C
1224.9727 459.0488 L
1088.624 565.958 L
966.7939 459.0488 L
966.0508 459.0488 L
966.0508 458.833 966.0586 458.6191 966.0586 458.4023 C
957.3809 450.7871 L
966.1406 450.8965 L
968.0098 331.2705 1011.0898 228.7158 1095.3818 143.2295 C
1107.5527 305.8174 L
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
1090.1992 157.6572 m
1053.498 197.0068 1025.0713 240.3555 1005.6113 286.6816 c
984.4824 336.9775 973.3047 392.2627 972.3877 450.9932 C
972.3174 455.583 L
1088.8467 557.8428 L
1218.8857 455.8848 L
1218.9336 453.9893 L
1220.0908 408.0254 1237.0635 364.4023 1266.9922 329.8467 C
1106.8613 312.0225 L
1101.7109 311.4521 L
1101.3232 306.2813 L
1090.1992 157.6572 L
1090.1992 157.6572 L
f
1085.0566 172.6455 m
1053.5313 208.5508 1028.7744 247.6631 1011.3682 289.0996 c
990.5537 338.6533 979.5371 393.1533 978.6338 451.0908 C
978.6064 452.79 L
1089.0723 549.7295 L
1212.7188 452.7832 L
1214.0186 410.0059 1228.8896 368.5703 1254.8945 334.7852 C
1106.1699 318.2324 L
1101.0244 317.6611 L
1095.873 317.0898 L
1095.4844 311.9219 L
1095.0938 306.748 L
1085.0566 172.6455 L
1085.0566 172.6455 L
Bb
1 (Unnamed gradient 13) 978.6064 361.1875 0 276.2881 1 0 0 1 0 0 Bg
276.2881 0 0 -381.084 978.6064 551.7295 Xm
8222.6064 0 0 -381.084 -7244 551.7295 Bc
276.2881 0 0 -381.084 978.6064 551.7295 Bm
8222.6064 0 0 -381.084 1254.8945 551.7295 Bc
f
0 BB
U
u
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
1416.4443 1849.5107 m
1410.5967 1856.0635 L
1403.5908 1863.9136 L
1403.7568 1855.9341 L
1244.6465 1851.8911 1108.957 1771.7783 1028.0537 1633.707 C
1190.1094 1664.2202 L
1252.4189 1504.374 L
1284.4736 1558.4619 1342.3994 1595.3999 1409.1641 1598.1152 C
1409.3301 1590.2051 L
1415.542 1598.2661 L
1415.8457 1598.2686 1416.1426 1598.2837 1416.4443 1598.2837 C
1416.4443 1599.438 L
1519.8623 1733.6426 L
1416.4443 1849.5107 L
f
u
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
1803.3555 1636.2251 m
1720.123 1776.3926 1580.0449 1856.1089 1416.4443 1856.1089 c
1414.4912 1856.1089 1412.5449 1856.0854 1410.5967 1856.0635 C
1416.4443 1849.5107 L
1519.8623 1733.6426 L
1416.4443 1599.438 L
1416.4443 1598.2837 L
1416.6543 1598.2847 1416.8623 1598.292 1417.0693 1598.292 c
1486.3145 1598.292 1546.9521 1561.4912 1580.5273 1506.3901 C
1573.1895 1502.1143 L
1752.2402 1475.064 L
1809.7305 1639.9404 L
1803.3555 1636.2251 L
f
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
1026.4238 1180.5693 m
1028.7383 1181.9063 L
1081.2012 1336.2773 L
1251.0322 1311.9941 L
1234.9805 1339.9883 1225.7754 1372.415 1225.7754 1406.999 c
1225.7754 1440.4316 1234.3799 1471.8457 1249.4541 1499.1914 C
1255.875 1495.5015 L
1190.1094 1664.2202 L
1018.5127 1631.9097 L
1024.8984 1628.2397 L
943.6143 1485.4287 944.1133 1323.1348 1026.4238 1180.5693 C
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
1026.1709 1193.7617 m
989.5 1260.7822 970.7969 1331.5635 970.5586 1404.334 c
970.3047 1480.7324 990.4141 1555.0264 1030.3252 1625.1494 C
1032 1628.0928 L
1186.1709 1657.123 L
1245.4912 1504.9409 L
1243.9863 1502.2065 L
1227.9873 1473.186 1219.5303 1440.2646 1219.5303 1406.998 c
1219.5303 1376.7607 1226.4902 1346.9043 1239.749 1319.9189 C
1082.0869 1342.4619 L
1076.9551 1343.1953 L
1075.2881 1338.2871 L
1026.1709 1193.7617 L
1026.1709 1193.7617 L
f
1024.9199 1209.5 m
993.2041 1271.792 977.0244 1337.2754 976.8027 1404.356 c
976.5537 1479.6475 996.3896 1552.895 1035.7559 1622.0586 C
1036 1622.4883 L
1182.2354 1650.0264 L
1238.6094 1505.396 L
1238.5117 1505.2207 L
1222.0068 1475.2837 1213.2842 1441.3184 1213.2842 1406.998 c
1213.2842 1379.8711 1218.8076 1352.6982 1229.3311 1327.7188 C
1082.9697 1348.6465 L
1077.8418 1349.3799 L
1072.707 1350.1143 L
1071.041 1345.2041 L
1069.3711 1340.2949 L
1024.9199 1209.5 L
1024.9199 1209.5 L
Bb
1 (Unnamed gradient 112) 976.8008 1429.7632 0 261.8086 1 0 0 1 0 0 Bg
261.8086 0 0 -444.5264 976.8008 1652.0264 Xm
8221.0479 0 0 -444.5264 -7244.2471 1652.0264 Bc
261.8086 0 0 -444.5264 976.8008 1652.0264 Bm
8221.0479 0 0 -444.5264 1238.6094 1652.0264 Bc
f
0 BB
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
1253.7598 1518.1255 m
1195.9307 1666.4883 L
1194.0498 1671.3169 L
1188.9512 1670.3589 L
1040.6309 1642.4312 L
1079.415 1704.5928 1129.5264 1754.0981 1189.7578 1789.7041 c
1253.7256 1827.5225 1325.7773 1847.7036 1403.916 1849.688 C
1407.8252 1849.7886 L
1407.8271 1849.7861 L
1410.2002 1847.1304 L
1411.7871 1845.3516 L
1511.75 1733.3477 L
1412.4629 1604.498 L
1408.9102 1604.3545 L
1346.041 1601.7988 1288.9219 1569.8262 1253.7598 1518.1255 C
1253.7598 1518.1255 L
f
1255.4189 1531.0742 m
1201.749 1668.7568 L
1199.8682 1673.5815 L
1197.9893 1678.4141 L
1192.8955 1677.4565 L
1187.7988 1676.4995 L
1053.7559 1651.2603 L
1090.834 1706.8936 1137.5986 1751.6108 1192.9355 1784.3267 c
1255.9805 1821.5986 1327.0176 1841.4868 1404.0742 1843.4424 C
1405.0977 1843.4673 L
1405.5352 1842.9741 L
1407.1211 1841.1953 L
1503.6396 1733.0571 L
1409.293 1610.6187 L
1408.6592 1610.5938 L
1376.8936 1609.3042 1345.5107 1600.4956 1317.9063 1585.1255 c
1293.7588 1571.6807 1272.3477 1553.1265 1255.4189 1531.0742 C
1255.4189 1531.0742 L
Bb
1 (Unnamed gradient 108) 1053.7559 1687.2705 0 449.8838 1 0 0 1 0 0 Bg
449.8838 0 0 -316.3931 1053.7559 1845.4673 Xm
8297.7559 0 0 -316.3931 -7244.0005 1845.4673 Bc
449.8838 0 0 -316.3931 1053.7559 1845.4673 Bm
8297.7559 0 0 -316.3931 1503.6396 1845.4673 Bc
f
0 BB
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
1748.0459 1482.0137 m
1587.9561 1506.2031 L
1585.8594 1509.6396 L
1568.5371 1538.0669 1544.1328 1561.8525 1515.2852 1578.4204 c
1488.6904 1593.6963 1458.7285 1602.5332 1428.0244 1604.2373 C
1524.8086 1729.832 L
1527.9707 1733.936 L
1524.5205 1737.8027 L
1424.5596 1849.7979 L
1501.748 1848.5557 1573.1611 1829.5659 1636.9521 1793.2998 c
1702.9336 1755.7881 1757.1133 1701.8672 1797.9863 1633.0371 C
1799.7012 1630.1465 L
1748.0459 1482.0137 L
1748.0459 1482.0137 L
f
1743.8564 1488.9639 m
1591.7695 1511.9453 L
1591.1895 1512.8945 L
1573.3252 1542.2119 1548.1543 1566.7471 1518.3975 1583.8369 c
1494.4551 1597.5884 1467.5547 1606.3652 1439.9639 1609.4961 C
1529.7568 1726.0186 L
1532.918 1730.1216 L
1536.0811 1734.2246 L
1532.6309 1738.0918 L
1529.1836 1741.96 L
1438.9023 1843.1064 L
1509.5 1839.8804 1575.0186 1821.3252 1633.8662 1787.8706 c
1698.8906 1750.8994 1752.3066 1697.7349 1792.6162 1629.8486 C
1792.8457 1629.4575 L
1743.8564 1488.9639 L
1743.8564 1488.9639 L
Bb
1 (Unnamed gradient 13) 1438.9023 1666.0352 0 353.9434 1 0 0 1 0 0 Bg
353.9434 0 0 -358.1426 1438.9023 1845.1064 Xm
8682.9023 0 0 -358.1426 -7244 1845.1064 Bc
353.9434 0 0 -358.1426 1438.9023 1845.1064 Bm
8682.9023 0 0 -358.1426 1792.8457 1845.1064 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
1806.543 1630.7954 m
1752.2402 1475.064 L
1583.9785 1500.4844 L
1599.4961 1472.8384 1608.3623 1440.958 1608.3623 1406.999 c
1608.3623 1373.1367 1599.5352 1341.3486 1584.1006 1313.7607 C
1576.748 1318.0146 L
1642.0098 1149.0986 L
1813.7031 1180.8955 L
1808.3936 1183.9678 L
1889.2471 1326.5635 1888.6387 1488.4985 1806.543 1630.7954 C
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
1645.9697 1156.1855 m
1587.6055 1307.2393 L
1589.5508 1310.709 L
1605.9414 1340.0107 1614.6094 1373.3047 1614.6094 1406.998 c
1614.6094 1436.626 1607.9219 1465.9297 1595.1777 1492.4756 C
1751.3057 1468.8896 L
1756.4297 1468.1152 L
1758.1377 1473.0078 L
1807.8662 1615.6196 L
1843.7246 1549.3232 1862.0391 1479.3657 1862.3291 1407.4678 c
1862.6367 1331.2275 1842.6611 1257.0693 1802.96 1187.0488 C
1801.8252 1185.0488 L
1645.9697 1156.1855 L
1645.9697 1156.1855 L
f
1649.9307 1163.2695 m
1594.4912 1306.748 L
1595.002 1307.6592 L
1611.915 1337.8955 1620.8555 1372.2451 1620.8555 1407 c
1620.8555 1433.502 1615.5762 1460.1021 1605.5156 1484.5972 C
1750.3721 1462.7134 L
1755.498 1461.9385 L
1760.6201 1461.1689 L
1762.3271 1466.0562 L
1764.0352 1470.9487 L
1809.0107 1599.9297 L
1839.9873 1538.3521 1855.8145 1473.667 1856.083 1407.4419 c
1856.3857 1332.502 1836.7881 1259.5684 1797.8262 1190.6592 C
1649.9307 1163.2695 L
1649.9307 1163.2695 L
Bb
1 (Unnamed gradient 112) 1594.4912 1381.5996 0 261.5957 1 0 0 1 0 0 Bg
261.5957 0 0 -440.6602 1594.4912 1601.9297 Xm
8838.4912 0 0 -440.6602 -7243.9995 1601.9297 Bc
261.5957 0 0 -440.6602 1594.4912 1601.9297 Bm
8838.4912 0 0 -440.6602 1856.0869 1601.9297 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
1305.8926 1082.7002 m
1413.1699 1215.7773 L
1345.8711 1217.127 1287.1172 1253.2148 1254.085 1306.8633 C
1260.4609 1310.6465 L
1081.2012 1336.2773 L
1028.7383 1181.9063 L
1026.4238 1180.5693 L
1026.8125 1179.8965 1027.2119 1179.2344 1027.6025 1178.5635 C
1025.0146 1170.9502 L
1030.25 1174.0566 L
1113.252 1035.1699 1252.2598 956.0039 1414.5908 955.4063 C
1305.8926 1082.7002 L
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
1400.8359 961.8906 m
1326.4346 964.2139 1257.5078 983.1641 1195.7617 1018.3018 c
1130.251 1055.582 1076.3672 1109.0635 1035.6123 1177.2588 C
1034.4297 1179.2354 L
1034.6543 1179.8965 L
1085.4473 1329.3594 L
1247.1338 1306.2412 L
1248.7656 1303.5879 L
1282.0068 1249.6006 1338.1221 1215.3115 1400.626 1210.167 C
1301.0322 1086.6191 L
1297.7773 1082.5859 L
1301.1416 1078.6436 L
1400.8359 961.8906 L
1400.8359 961.8906 L
f
1386.7305 968.7939 m
1318.8242 972.9365 1255.6855 991.3916 1198.8506 1023.7314 c
1134.4482 1060.3779 1081.4346 1112.9434 1041.2734 1179.959 C
1089.6934 1322.4453 L
1243.3457 1300.4736 L
1243.4463 1300.3115 L
1260.2412 1273.0391 1283.4102 1249.8438 1310.4521 1233.2383 c
1334.1465 1218.6904 1360.957 1209.1016 1388.6152 1205.2207 C
1296.1729 1090.54 L
1292.916 1086.5059 L
1289.6621 1082.4717 L
1293.0273 1078.5293 L
1296.3945 1074.5879 L
1386.7305 968.7939 L
1386.7305 968.7939 L
Bb
1 (Unnamed gradient 13) 1041.2734 1145.6191 0 347.3418 1 0 0 1 0 0 Bg
347.3418 0 0 -357.6514 1041.2734 1324.4453 Xm
8285.2734 0 0 -357.6514 -7244 1324.4453 Bc
347.3418 0 0 -357.6514 1041.2734 1324.4453 Bm
8285.2734 0 0 -357.6514 1388.6152 1324.4453 Bc
f
0 BB
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
1805.7979 1179.4316 m
1642.0098 1149.0986 L
1580.667 1307.875 L
1547.5205 1253.2891 1487.8555 1216.6113 1419.5342 1215.7471 C
1419.541 1223.6807 L
1305.8926 1082.7002 L
1419.2803 949.9111 L
1419.2852 955.4121 L
1583.2734 956.3389 1723.3594 1037.5029 1805.7979 1179.4316 C
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
1417.4727 961.6484 m
1314.0078 1082.8174 L
1416.0957 1209.4551 L
1419.6123 1209.501 L
1484.0098 1210.3154 1542.8057 1241.7529 1579.2422 1294.2295 C
1636.1826 1146.8457 L
1638.0498 1142.0117 L
1643.1465 1142.9551 L
1793.3223 1170.7686 L
1753.7168 1106.6895 1702.1865 1055.9971 1639.9902 1019.9492 c
1574.0332 981.7266 1499.7646 962.1152 1419.25 961.6582 C
1417.4727 961.6484 L
1417.4727 961.6484 L
f
1420.334 967.9141 m
1322.123 1082.9336 L
1419.1172 1203.249 L
1419.6924 1203.2549 L
1452.2266 1203.666 1484.4375 1211.8691 1512.8438 1226.9785 c
1537.7959 1240.2471 1559.9609 1258.9189 1577.5176 1281.3652 C
1630.3564 1144.5967 L
1632.2236 1139.7637 L
1634.0898 1134.9307 L
1639.1846 1135.873 L
1644.2813 1136.8125 L
1780.3145 1162.0078 L
1742.3682 1104.4951 1694.166 1058.5654 1636.8564 1025.3525 c
1572.1582 987.8584 1499.3135 968.5361 1420.334 967.9141 C
1420.334 967.9141 L
Bb
1 (Unnamed gradient 108) 1322.123 1124.6396 0 458.1914 1 0 0 1 0 0 Bg
458.1914 0 0 -317.4512 1322.123 1283.3652 Xm
8566.123 0 0 -317.4512 -7244 1283.3652 Bc
458.1914 0 0 -317.4512 1322.123 1283.3652 Bm
8566.123 0 0 -317.4512 1780.3145 1283.3652 Bc
f
0 BB
U
U
u
0.439216 0 1 0 0.607843 0.843137 0.023529 Xa
138.5381 2291.0767 m
310.1943 2249.6455 L
294.0361 2277.6953 284.7842 2310.2251 284.7842 2344.9199 c
284.7842 2449.3779 368.5728 2534.2529 472.6055 2536.0342 C
472.6055 2531.4736 L
598.5068 2665.7373 L
472.6055 2800 L
472.6055 2794.7456 L
391.335 2794.2358 321.7368 2775.3047 251.0718 2734.5063 c
36.3096 2610.5132 -37.5161 2336.165 85.7793 2121.1934 C
138.5381 2291.0767 L
f
0.054902 0 0.188235 0 0.945098 0.972549 0.839216 Xa
84.1606 2137.0376 m
31.1943 2236.6494 18.1992 2350.8809 47.686 2460.3418 c
78.4429 2574.5229 151.7842 2669.9697 254.1968 2729.0952 c
323.5288 2769.126 392.9404 2788 472.6445 2788.501 C
474.8135 2788.5146 L
589.9438 2665.7373 L
474.2041 2542.3096 L
472.4971 2542.2813 L
420.4951 2541.3896 371.7437 2520.4658 335.2295 2483.3613 c
298.6704 2446.2139 278.5376 2397.0469 278.5376 2344.9209 c
278.5376 2315.0771 285.3057 2285.6353 298.2012 2258.9678 C
140.0024 2297.1489 L
134.311 2298.5225 L
132.5742 2292.9282 L
84.1606 2137.0376 L
84.1606 2137.0376 L
f
82.7495 2153.5581 m
36.4526 2248.4043 26.0933 2356.1636 53.7188 2458.7188 c
84.041 2571.2891 156.3486 2665.3926 257.3193 2723.6865 c
325.5103 2763.0566 393.7847 2781.6729 472.1294 2782.2485 C
581.3848 2665.7363 L
471.4546 2548.5078 L
418.1509 2547.3516 368.2241 2525.793 330.7778 2487.7432 c
293.0625 2449.4229 272.291 2398.7012 272.291 2344.9199 c
272.291 2318.6543 277.4727 2292.3154 287.3516 2268.0098 C
141.4683 2303.2207 L
135.7769 2304.5938 L
130.084 2305.9668 L
128.3481 2300.376 L
126.6094 2294.7827 L
82.7495 2153.5581 L
82.7495 2153.5581 L
Bb
1 (Unnamed gradient 108) 38.5503 2467.9033 0 542.8345 1 0 0 1 0 0 Bg
542.8345 0 0 -632.6904 38.5503 2784.2485 Xm
7295.0068 0 0 -632.6904 -7256.4565 2784.2485 Bc
542.8345 0 0 -632.6904 38.5503 2784.2485 Bm
7295.0068 0 0 -632.6904 581.3848 2784.2485 Bc
f
0 BB
0.003922 0.352941 0.847059 0 0.980392 0.686275 0.25098 Xa
692.0659 2078.8311 m
641.7549 2249.2471 L
641.5366 2249.3726 L
608.4888 2192.2197 546.7075 2153.7632 475.9409 2153.7632 c
406.8911 2153.7632 346.4116 2190.3872 312.8169 2245.2559 C
317.46 2247.8916 L
138.5381 2291.0767 L
83.9497 2115.3008 L
87.9014 2117.5439 L
129.0171 2047.208 180.2725 1996.2842 251.0718 1955.4087 c
465.4717 1831.624 739.4111 1904.4087 864.23 2117.8369 C
692.0659 2078.8311 L
f
0 0.047059 0.109804 0 0.996078 0.941176 0.87451 Xa
475.5513 1901.3174 m
398.1611 1901.3174 321.6177 1921.8916 254.1973 1960.8174 c
184.7437 2000.916 133.6152 2051.7178 93.2939 2120.6973 C
92.5581 2121.9551 L
142.7646 2283.6309 L
306.1392 2244.1997 L
307.4897 2241.9922 L
324.8232 2213.6841 349.1973 2190.0039 377.978 2173.5146 c
407.6621 2156.5068 441.5361 2147.5176 475.9409 2147.5176 c
511.2144 2147.5176 545.834 2156.9355 576.0576 2174.7539 c
601.4038 2189.7002 623.1548 2210.1924 639.5938 2234.5059 C
686.0737 2077.0625 L
687.7334 2071.4458 L
693.4453 2072.7402 L
851.251 2108.4937 L
811.9219 2046.0479 757.6318 1994.312 693.4858 1958.3076 c
627.0649 1921.0234 551.7051 1901.3174 475.5513 1901.3174 C
475.5513 1901.3174 L
f
475.5508 1907.5635 m
399.2554 1907.5635 323.791 1927.8477 257.3193 1966.2266 c
189.2241 2005.543 138.9907 2055.3008 99.3398 2122.7334 C
146.9937 2276.186 L
302.1621 2238.7344 L
302.1641 2238.7295 L
320.0435 2209.5303 345.187 2185.1045 374.8726 2168.0947 c
405.5015 2150.5459 440.4482 2141.2705 475.9399 2141.2705 c
512.3325 2141.2705 548.0479 2150.9893 579.2295 2169.373 c
601.4932 2182.5024 621.333 2200.0449 637.1987 2220.5527 C
680.083 2075.2939 L
681.7412 2069.6772 L
683.4009 2064.0576 L
689.1143 2065.3525 L
694.8271 2066.6475 L
837.5601 2098.9873 L
799.6133 2043.1973 749.0127 1996.6377 690.4277 1963.7544 c
624.9395 1926.9946 550.6357 1907.5635 475.5508 1907.5635 C
475.5508 1907.5635 L
Bb
1 (Unnamed gradient 13) 99.3398 2091.875 0 738.2202 1 0 0 1 0 0 Bg
738.2202 0 0 -372.6226 99.3398 2278.186 Xm
7343.3403 0 0 -372.6226 -7244.0005 2278.186 Bc
738.2202 0 0 -372.6226 99.3398 2278.186 Bm
7343.3403 0 0 -372.6226 837.5601 2278.186 Bc
f
0 BB
0.47451 0 0.098039 0 0.423529 0.878431 0.937255 Xa
925.7905 2344.958 m
925.7905 2592.8667 725.2344 2793.9287 477.5195 2794.7607 C
598.5068 2665.7373 L
476.9102 2536.064 L
582.0356 2535.541 667.0981 2450.168 667.0981 2344.9199 c
667.0981 2311.6709 658.5884 2280.4185 643.6602 2253.1836 C
639.9507 2255.3584 L
641.6553 2249.5859 L
641.6147 2249.5142 641.5776 2249.4424 641.5366 2249.3726 C
641.7549 2249.2471 L
692.0659 2078.8311 L
871.5752 2119.5005 L
866.8032 2122.2988 L
907.269 2193.1699 925.7905 2263.0977 925.7905 2344.958 c
f
0.203922 0.007843 0.031373 0 0.780392 0.905882 0.94902 Xa
696.3994 2086.2168 m
648.3931 2248.8242 L
649.1372 2250.1821 L
664.9736 2279.0713 673.3442 2311.832 673.3442 2344.9189 c
673.3442 2448.561 592.6631 2534.1123 490.8101 2541.7563 C
603.0615 2661.4658 L
607.0703 2665.7383 L
603.0615 2670.0107 L
492.2065 2788.2275 L
604.8486 2784.1973 710.1611 2738.3174 790.125 2658.1035 c
873.5815 2574.3828 919.5444 2463.1719 919.5444 2344.9561 c
919.5444 2264.6621 901.0615 2194.896 861.3794 2125.3984 C
860.1978 2123.3281 L
696.3994 2086.2168 L
696.3994 2086.2168 L
f
700.7324 2093.603 m
655.1167 2248.1074 L
671.1309 2277.6826 679.5898 2311.1343 679.5898 2344.9199 c
679.5898 2446.5898 603.415 2532.8359 503.9443 2546.6328 C
607.6187 2657.1943 L
611.6235 2661.4639 L
615.6338 2665.7344 L
611.626 2670.0088 L
607.6187 2674.2822 L
507.3911 2781.1631 L
612.5093 2773.7129 710.8311 2728.7969 785.6997 2653.6924 c
867.9834 2571.1528 913.2974 2461.5059 913.2974 2344.9561 c
913.2974 2265.9141 895.1318 2197.2251 856.1348 2128.812 C
700.7324 2093.603 L
700.7324 2093.603 L
Bb
1 (Unnamed gradient 112) 503.9443 2437.3828 0 409.353 1 0 0 1 0 0 Bg
409.353 0 0 -691.5601 503.9443 2783.1631 Xm
7747.9443 0 0 -691.5601 -7244 2783.1631 Bc
409.353 0 0 -691.5601 503.9443 2783.1631 Bm
7747.9443 0 0 -691.5601 913.2974 2783.1631 Bc
f
0 BB
U
LB
%AI5_EndLayer--
%AI3_BeginCrops
userdict /AI3_noCropMarks known not {
0 A
u
u
0 R
0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 XS
0 J 0 j 0.5 w 4 M []0 d0 XR
-9 0 m
-36 0 L
S
0 -9 m
0 -36 L
S
U
u
-9 2800 m
-36 2800 L
S
0 2809 m
0 2836 L
S
U
u
1909 2800 m
1936 2800 L
S
1900 2809 m
1900 2836 L
S
U
u
1909 0 m
1936 0 L
S
1900 -9 m
1900 -36 L
S
U
U
} if
%AI3_EndCrops
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
